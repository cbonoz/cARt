{
    "id": "819a67d1-5447-4253-8713-43ea5a73903d",
    "name": "Yodlee API Comprehensive",
    "description": "# Overview\r\nHere we cover the most common API calls used by our customers.<br>\r\nYou can test all available calls from <a href=\"https:\/\/developer.yodlee.com\/apidocs\/index.php\">here.<\/a><br>\r\nAll calls that can not be tested using a sandbox environment (developer account) are marked with an asterisk.<br>\r\nWe recommend you to go through our <a href=\"https:\/\/developer.yodlee.com\/Yodlee_API\/docs\/v1_1\/Data_Model\">Data Model<\/a> to understand the entities supported by Yodlee.\r\n\r\n# Integration Steps\r\nOur <a href=\"https:\/\/developer.yodlee.com\/Yodlee_API\/docs\/v1_1\/Integration_Guide\">Integration Guide<\/a> will help you to technically utilize the API. Our <a href=\"https:\/\/developer.yodlee.com\/Yodlee_API\/docs\/v1_1\/API_Flow\">API Flow<\/a> will help you implement API requests in efficient way. All API calls have <a href=\"https:\/\/developer.yodlee.com\/Yodlee_API\/docs\/v1_1\/API_Error_Codes\">error codes<\/a>. All API endpoints seen below with an asterisk (*) at the end can not be used with a sandbox account.\r\n\r\n# Linking financial data\r\nTo link a financial account, go to the <a href=\"https:\/\/developer.yodlee.com\/api-dashboard\">developer dashboard<\/a> and find the user for whom you would like to add an account. Click <b>Yodlee Fastlink 3.0<\/B>. From there you can input a personal account or a dummy account.\r\nIn FastLink, click a logo or search for your institution.<br>\r\n\r\n<b>FastLink<\/b><br>\r\nTo use a personal account, enter the bank you use and log in with your credentials.<br>\r\nTo link a dummy account, go to the <a href=\"https:\/\/dag2.yodlee.com\/dag\/index.do\">Dummy Account Generator site<\/a> (DAG). Click <b>Create new catalog<\/b> and create a dummy account. You will be taken to a page with a table containing data. You will see a username and password (e.g., helloworld.site16441.1 and site16441.1). To add the account go to FastLink and search for \u201cDag Site.\u201d Click <b>Dag Site<\/b> and enter your DAG username\/password.\r\n\r\n<b>API Runnables<\/b><br>\r\nYou can also use the Aggregation and Account Verification API login flows to add accounts. Use the Aggregation Runnable or IAV Runnable files below. The GET\/providers\/{{providerId}} and POST\/providerAccounts?providerId={{providerId}} calls are linked such that you can run the first call, input credentials, and run the second call.\r\n\r\n# Best Practices\r\n<a href=\"https:\/\/developer.yodlee.com\/Yodlee_API\/docs\/v1_1\/Best_Practices\">Best practices<\/a> to effectively integrate our API in your system.<br>\r\nWe recommend our customers not to make more than three API calls per second. No batch jobs, as this will increase load on the Yodlee server.\r\n\r\n# Test Accounts\r\nYodlee provides <a href=\"https:\/\/developer.yodlee.com\/Aggregation_API\/Aggregation_Services_Guide\/Sample_Data\/Yodlee_Dummy_Account_Generator\">Dummy Accounts<\/a> which mimics real bank accounts. You can test different scenarios.<br>\r\nYou can use the following test account for testing instantly<br>\r\n<b>Provider Name:<\/b> DAG Site<br>\r\n<b>Provider Id:<\/b> 16441<br>\r\n<b>Username:<\/b> sampleapp.site16441.1<br>\r\n<b>Password:<\/b> site16441.1\r\n\r\n# Environments\r\nWe have three environment types:<br>\r\n<b>Developer:<\/b> Immediate limited access to API calls for aggregation and Yodlee FastLink tools.<br>\r\n<b>Stage:<\/b> API environment catering to specific implementation cases. Please reach out to Yodlee to learn more about the stage environment. The environment is provided after the contract is executed.<br>\r\n<b>Production:<\/b> Access to the production environment is granted when a customer signs up with Yodlee.\r\n\r\n# Using the API calls\r\nAll calls use certain variables. Here is a list of all of them:<br><br>\r\n<b>{{host}}<\/b> The url for your environment. For a developer account, this would be <i>https:\/\/developer.api.yodlee.com\/ysl\/<\/i><br>\r\n<b>{{cobrandLogin}}<\/b> Your cobrand login taken from the <a href=\"https:\/\/developer.yodlee.com\/api-dashboard\">developer dashboard<\/a>.<br>\r\n<b>{{cobrandPassword}}<\/b> Your cobrand password taken from the <a href=\"https:\/\/developer.yodlee.com\/api-dashboard\">developer dashboard<\/a>.<br>\r\n<b>{{userLogin}}<\/b> Your user login taken from the <a href=\"https:\/\/developer.yodlee.com\/api-dashboard\">developer dashboard<\/a>. This expires after 30 minutes.<br>\r\n<b>{{userPassword}}<\/b> Your user password taken from the <a href=\"https:\/\/developer.yodlee.com\/api-dashboard\">developer dashboard<\/a>.<br>\r\n<b>{{cobrandName}}<\/b> The name of your environment. For a developer account, this would be <i>restserver<\/i>.<br>\r\n<b>{{cobSession}}<\/b> The \"cobSession\" value from the response of a POST \/cobrand\/login call. This expires after 120 minutes.<br>\r\n<b>{{userSession}}<\/b> The \"userSession\" value from the response of a POST \/user\/login call.<br>\r\n<b>{{appId}}<\/b> The \"appId\" parameter. This is only used to envoke Fastlink. The value is <i>10003600<\/i>.",
    "auth": null,
    "events": [
        {
            "listen": "prerequest",
            "script": {
                "id": "e6c8a2fb-8ec4-46a0-a97e-3b49e6da6c23",
                "type": "text\/javascript",
                "exec": [
                    ""
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "id": "58397cd4-c39d-432f-b915-8a1d71ed31b1",
                "type": "text\/javascript",
                "exec": [
                    ""
                ]
            }
        }
    ],
    "variables": null,
    "order": [],
    "folders_order": [
        "f91e3e0a-ecde-44f0-833d-fed8ca1de98f",
        "66058555-3f3b-4a53-93db-f4b7492ea712",
        "9ea9e6db-3405-461b-b1d5-3b4a197fc3a1",
        "fb0af4be-ff32-4bf6-afbd-5652a4e6ca51",
        "98a0bf62-9a64-49df-a143-22c0213676cd",
        "75abde44-be48-4c3b-841f-1025a3c1bafd",
        "c3b6416f-3503-4a97-9773-0ecff6039f74",
        "7ffe98e2-1acd-46c4-a0ca-d5c1ec74e91c",
        "e220bb01-d3de-4034-9a1f-3099a5d0afc6",
        "58d6e17a-3996-47a9-be78-ba281865fd59",
        "675cebfb-ee48-4694-85ad-0c3508ad3665"
    ],
    "folders": [
        {
            "id": "fb0af4be-ff32-4bf6-afbd-5652a4e6ca51",
            "name": "Accounts",
            "description": null,
            "auth": null,
            "events": null,
            "collection": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folder": null,
            "order": [
                "302fe909-afeb-4215-ac6c-e84041dd202d",
                "0cbf1c9a-7726-48e3-a6fb-f33945ae290f",
                "bdb2e1b9-8f3e-4758-8866-6a26249344f6",
                "def3c429-0d3a-4478-9b6b-f49be2000a7d",
                "c481fd45-9044-468d-ba01-acac48e5fb90",
                "6f2fbc1c-e943-4cb7-ab02-d6d49489848c"
            ],
            "folders_order": [],
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folderId": "fb0af4be-ff32-4bf6-afbd-5652a4e6ca51"
        },
        {
            "id": "f91e3e0a-ecde-44f0-833d-fed8ca1de98f",
            "name": "Cobrand",
            "description": null,
            "auth": null,
            "events": null,
            "collection": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folder": null,
            "order": [
                "7ef527d3-86f5-47eb-a150-616c81a8f8a5",
                "aebfed28-d993-4eae-a081-9a4db74e95e4",
                "1c49ceac-5553-484f-8c23-0ac22a0507f3",
                "ef3b4f6f-e77a-47d2-b1a0-426d336df806",
                "54b529cb-5ccb-425f-8bff-effc41002093",
                "89ea73db-8039-465a-a371-030fe4003e8b",
                "93d4da75-3e2f-49e0-82ff-a8715b106a75"
            ],
            "folders_order": [],
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folderId": "f91e3e0a-ecde-44f0-833d-fed8ca1de98f"
        },
        {
            "id": "58d6e17a-3996-47a9-be78-ba281865fd59",
            "name": "Data Extracts*",
            "description": null,
            "auth": null,
            "events": null,
            "collection": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folder": null,
            "order": [
                "190f31cc-ec1c-446b-b170-630ed5ce5002",
                "65cbe906-53a4-40c8-ad06-61c9a458a4cf"
            ],
            "folders_order": [],
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folderId": "58d6e17a-3996-47a9-be78-ba281865fd59"
        },
        {
            "id": "7ffe98e2-1acd-46c4-a0ca-d5c1ec74e91c",
            "name": "Derived",
            "description": null,
            "auth": null,
            "events": null,
            "collection": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folder": null,
            "order": [
                "1a154adf-a9c5-44fe-a61b-337d5503f21a",
                "aabbc4bd-7c7d-4ef9-8a8a-81de6a9b994d",
                "8a4a365d-4fb2-444e-b7d8-65f7a5f4b48a"
            ],
            "folders_order": [],
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folderId": "7ffe98e2-1acd-46c4-a0ca-d5c1ec74e91c"
        },
        {
            "id": "675cebfb-ee48-4694-85ad-0c3508ad3665",
            "name": "Documents*",
            "description": null,
            "auth": null,
            "events": [
                {
                    "listen": "prerequest",
                    "script": {
                        "id": "8390b5fb-943f-4364-b25b-29c815ee96ec",
                        "type": "text\/javascript",
                        "exec": [
                            ""
                        ]
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "id": "0e04bac2-007c-4b1b-b6ab-5b292a8f54c6",
                        "type": "text\/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ],
            "collection": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folder": null,
            "order": [
                "7deae36e-375f-44b2-a572-bf274e417128",
                "e3dc961b-d7ca-4f02-b76e-fe763bc981cc",
                "401c8586-0686-407c-b84c-580d789b0a12"
            ],
            "folders_order": [],
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folderId": "675cebfb-ee48-4694-85ad-0c3508ad3665"
        },
        {
            "id": "e220bb01-d3de-4034-9a1f-3099a5d0afc6",
            "name": "Holdings",
            "description": null,
            "auth": null,
            "events": null,
            "collection": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folder": null,
            "order": [
                "6d9bdc60-92aa-4fe0-b89e-3a60b333ff00",
                "ab796279-d48b-4943-9cc5-36279857a2b2",
                "6878ebf7-e728-4743-b50b-f5c1e7cbc262",
                "5501d911-f6a9-4174-8789-c25fb63a851d"
            ],
            "folders_order": [],
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folderId": "e220bb01-d3de-4034-9a1f-3099a5d0afc6"
        },
        {
            "id": "75abde44-be48-4c3b-841f-1025a3c1bafd",
            "name": "Provider Accounts",
            "description": null,
            "auth": null,
            "events": null,
            "collection": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folder": null,
            "order": [
                "d9338ec5-e9c5-4a08-9619-d494c5955db5",
                "6cb7d267-5b3e-4ee7-bb23-b05b595defe6",
                "de4852e7-fd99-4199-9eef-363191566932",
                "74b4180e-b23a-4b78-8b13-91938738b636",
                "21ed3fc8-0aa6-4723-98d5-bab61c196cb9",
                "e79f8deb-be34-4808-98e7-2445d52b9919"
            ],
            "folders_order": [],
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folderId": "75abde44-be48-4c3b-841f-1025a3c1bafd"
        },
        {
            "id": "9ea9e6db-3405-461b-b1d5-3b4a197fc3a1",
            "name": "Providers",
            "description": null,
            "auth": null,
            "events": null,
            "collection": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folder": null,
            "order": [
                "e679bd48-9168-4327-a606-24c83b8808a9",
                "1db758f6-c488-4d8e-972b-08cb53d3cea4"
            ],
            "folders_order": [],
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folderId": "9ea9e6db-3405-461b-b1d5-3b4a197fc3a1"
        },
        {
            "id": "c3b6416f-3503-4a97-9773-0ecff6039f74",
            "name": "Statements",
            "description": null,
            "auth": null,
            "events": null,
            "collection": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folder": null,
            "order": [
                "79b03d6e-c1a9-4aaa-ad0e-c823139536b9"
            ],
            "folders_order": [],
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folderId": "c3b6416f-3503-4a97-9773-0ecff6039f74"
        },
        {
            "id": "98a0bf62-9a64-49df-a143-22c0213676cd",
            "name": "Transactions",
            "description": null,
            "auth": null,
            "events": null,
            "collection": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folder": null,
            "order": [
                "227b3064-f9b8-459e-be48-b096e7317c84",
                "b362e39d-68bd-4c50-a36d-db877668c275",
                "d6dc4956-2509-4414-bb8e-8fd47dc883ce",
                "0c8bb77c-3867-4569-8618-cb55356cac24",
                "2f43ff4c-c62d-44b5-ac48-6ae3ebb81a0e",
                "b8f6b7e2-6d6a-42a1-8d41-d41753f89876",
                "4b64da32-a0a7-4036-9252-52e98c253b0c",
                "b3b3e4de-8e7d-466f-8ba9-e5ed094242e6",
                "aa088e11-6872-4f2c-864c-12920aa00208",
                "e3a581c4-afbc-40d6-86c5-6f8707ac3670",
                "e229da2f-57cb-465b-8ed9-53a65aae5526",
                "cfba7837-04fb-403b-bed3-f91490f9718a",
                "e3c6ee68-0dfc-45e1-8fe7-e57e24e330ff"
            ],
            "folders_order": [],
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folderId": "98a0bf62-9a64-49df-a143-22c0213676cd"
        },
        {
            "id": "66058555-3f3b-4a53-93db-f4b7492ea712",
            "name": "User",
            "description": null,
            "auth": null,
            "events": null,
            "collection": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folder": null,
            "order": [
                "61df95f4-8677-430c-8dec-d54282274067",
                "ab3351b5-37bf-4ed1-820f-2f2a314fdfd9",
                "ef0cd6a2-dad0-42bc-b5df-3dfeaa7b3fd9",
                "3eb72720-f097-493e-8370-66d91362743b",
                "518508aa-e36c-4482-8d5a-7dc947f02b95",
                "f8220050-b99d-442c-8960-41df8da2c102",
                "dd0d2698-c534-4d83-92da-283ddc1bbe50",
                "286f0ca5-861b-48a2-8ef3-54a2d823874b",
                "5132079a-4f03-41cc-aba2-f0c4751f797e"
            ],
            "folders_order": [],
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "folderId": "66058555-3f3b-4a53-93db-f4b7492ea712"
        }
    ],
    "requests": [
        {
            "id": "0c8bb77c-3867-4569-8618-cb55356cac24",
            "name": "Create Category",
            "url": "{{host}}\/transactions\/categories?categoryParam={\n\t\"categoryName\": \"My Expenses\",\n\t\"parentCategoryId\": 25\n}",
            "description": "Implementation Notes:\r\n\r\nThe create transaction categories service is used to create user-defined categories for a system-defined category.\r\n\r\nThe parentCategoryId is the system-defined category id.This can be retrieved using get transaction categories service.\r\n\r\nThe categoryName can accept minimum of 1, maximum of 50 alphanumeric or special characters.\r\n\r\nThe HTTP response code is 201 (Created successfully).",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "categoryParam",
                    "value": "{\n\t\"categoryName\": \"My Expenses\",\n\t\"parentCategoryId\": 25\n}",
                    "description": "user Transaction Category in JSON format"
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "id": "8c29caf4-313e-4025-a496-e126d26fea37",
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(201);",
                            "});",
                            "",
                            "if (responseCode.code != 201) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 201) {",
                            "    console.log(\"Create Cateogry successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "98a0bf62-9a64-49df-a143-22c0213676cd",
            "responses": [
                {
                    "id": "0b8f7bd8-32c5-4969-bbc0-7433132e52b1",
                    "name": "Create Category",
                    "status": "Created",
                    "mime": "",
                    "language": "json",
                    "text": "",
                    "responseCode": {
                        "code": 201,
                        "name": "Created",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "b59b0a8f-5437-4197-a291-7fb865ed7af4",
                        "method": "POST",
                        "description": "Implementation Notes:\r\n\r\nThe create transaction categories service is used to create user-defined categories for a system-defined category.\r\n\r\nThe parentCategoryId is the system-defined category id.This can be retrieved using get transaction categories service.\r\n\r\nThe categoryName can accept minimum of 1, maximum of 50 alphanumeric or special characters.\r\n\r\nThe HTTP response code is 201 (Created successfully).",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/transactions\/categories?categoryParam={\n\t\"categoryName\": \"My Expenses\",\n\t\"parentCategoryId\": 25\n}",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "categoryParam",
                                "value": "{\n\t\"categoryName\": \"My Expenses\",\n\t\"parentCategoryId\": 25\n}",
                                "description": "user Transaction Category in JSON format"
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            },
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Cache-Control",
                            "value": "no-store, no-cache",
                            "name": "Cache-Control",
                            "description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "0",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 23 May 2018 21:19:34 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
                        },
                        {
                            "key": "Set-Cookie",
                            "value": "JSESSIONID=TFdCarXrkemscJAK0siBgAgTvRqYq_9ljLFl6SlJ.hpdl-r306-25; path=\/ysl; secure; HttpOnly",
                            "name": "Set-Cookie",
                            "description": "an HTTP cookie"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "e1527110373994r4H26e000000NLvYF",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/ysl",
                            "secure": true,
                            "value": "TFdCarXrkemscJAK0siBgAgTvRqYq_9ljLFl6SlJ.hpdl-r306-25",
                            "name": "JSESSIONID"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/",
                            "secure": true,
                            "value": "J-jzNUYyJ2TMfTmyHfxnU0qQ9AYfNlPRuIjdPSpC.hpdl-r306-25",
                            "name": "JSESSIONID"
                        }
                    ],
                    "request": "0c8bb77c-3867-4569-8618-cb55356cac24",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(201);\n});\n\nif (responseCode.code != 201) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 201) {\n    console.log(\"Create Cateogry successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "0cbf1c9a-7726-48e3-a6fb-f33945ae290f",
            "name": "Get Accounts",
            "url": "{{host}}\/accounts?",
            "description": "Implementation Notes:\r\n\r\nThe get accounts service provides information about accounts added by the user.\r\n\r\nBy default, this service returns information for active and to be closed accounts.\r\n\r\naccountReconType and reconInfo are relevant for investment accounts,provided the reconciliation feature is turned on.\r\n\r\naccountReconType input parameter will be ignored when container value passed is other than \"INVESTMENT\".",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "status",
                    "value": null,
                    "description": "ACTIVE\/INACTIVE\/TO_BE_CLOSED\/CLOSED",
                    "enabled": false
                },
                {
                    "key": "container",
                    "value": null,
                    "description": "bank\/creditCard\/investment\/insurance\/loan\/reward\/bill\/realEstate\/otherAssets\/otherLiabilities\t",
                    "enabled": false
                },
                {
                    "key": "providerAccountId",
                    "value": null,
                    "description": "provider account id\t",
                    "enabled": false
                },
                {
                    "key": "accountId",
                    "value": null,
                    "description": "comma separated accountIds",
                    "enabled": false
                },
                {
                    "key": "accountReconType",
                    "value": null,
                    "description": "UNRECONCILED (Default value), RECONCILED\t",
                    "enabled": false
                },
                {
                    "key": "include",
                    "value": null,
                    "description": "profile, holder, fullAccountNumber",
                    "enabled": false
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseBody == \"{}\") {",
                            "    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");",
                            "    pm.test(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\", function () {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "} else if (responseCode.code == 200) {",
                            "    pm.environment.set(\"container\", data.account[0].CONTAINER);",
                            "    pm.environment.set(\"accountId\", data.account[0].id);",
                            "    pm.test(\"Status code is 200\", function () {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    console.log(\"Get Accounts successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}",
                            "if (responseBody == \"{}\") {",
                            "    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "fb0af4be-ff32-4bf6-afbd-5652a4e6ca51",
            "responses": [
                {
                    "id": "437125e4-c238-4bd0-a029-0e06011696da",
                    "name": "Get Accounts",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"account\":[{\"includeInNetWorth\":true,\"accountName\":\"BNP Account\",\"accountType\":\"BROKERAGE_CASH\",\"isManual\":true,\"memo\":\"This is an investment account\",\"accountNumber\":\"1233\",\"accountStatus\":\"ACTIVE\",\"lastUpdated\":\"2018-05-30T22:24:01Z\",\"isAsset\":true,\"createdDate\":\"2018-05-30T22:24:01Z\",\"balance\":{\"amount\":84699,\"currency\":\"USD\"},\"aggregationSource\":\"USER\",\"providerId\":\"7634\",\"providerAccountId\":18377688,\"CONTAINER\":\"investment\",\"nickname\":\"Flood Cash\",\"id\":37252300,\"providerName\":\"Custom Bank\"}]}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "a7dd48fd-cc3d-4f04-8e2b-7bd61929935a",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe get accounts service provides information about accounts added by the user.\r\n\r\nBy default, this service returns information for active and to be closed accounts.\r\n\r\naccountReconType and reconInfo are relevant for investment accounts,provided the reconciliation feature is turned on.\r\n\r\naccountReconType input parameter will be ignored when container value passed is other than \"INVESTMENT\".",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/accounts?",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "status",
                                "value": null,
                                "description": "ACTIVE\/INACTIVE\/TO_BE_CLOSED\/CLOSED",
                                "enabled": false
                            },
                            {
                                "key": "container",
                                "value": null,
                                "description": "bank\/creditCard\/investment\/insurance\/loan\/reward\/bill\/realEstate\/otherAssets\/otherLiabilities\t",
                                "enabled": false
                            },
                            {
                                "key": "providerAccountId",
                                "value": null,
                                "description": "provider account id\t",
                                "enabled": false
                            },
                            {
                                "key": "accountId",
                                "value": null,
                                "description": "comma separated accountIds",
                                "enabled": false
                            },
                            {
                                "key": "accountReconType",
                                "value": null,
                                "description": "UNRECONCILED (Default value), RECONCILED\t",
                                "enabled": false
                            },
                            {
                                "key": "include",
                                "value": null,
                                "description": "profile, holder, fullAccountNumber",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "503",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 30 May 2018 22:26:10 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "x1527719170640e3Q31D000000NLGYp",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "0cbf1c9a-7726-48e3-a6fb-f33945ae290f",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "var data = JSON.parse(responseBody);\n\nif (responseBody == \"{}\") {\n    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");\n    pm.test(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\", function () {\n        pm.response.to.have.status(200);\n    });\n} else if (responseCode.code == 200) {\n    pm.environment.set(\"container\", data.account[0].CONTAINER);\n    pm.environment.set(\"accountId\", data.account[0].id);\n    pm.test(\"Status code is 200\", function () {\n        pm.response.to.have.status(200);\n    });\n    console.log(\"Get Accounts successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}\nif (responseBody == \"{}\") {\n    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "190f31cc-ec1c-446b-b170-630ed5ce5002",
            "name": "Get User Data*",
            "url": "{{host}}\/dataExtracts\/userData?loginName={{loginName}}&fromDate=2018-05-31T10:18:44Z&toDate=2018-05-31T10:19:44Z",
            "description": "Implementation Notes:\r\n\r\nThe get user data service is used to get a user's modified data for a particular period of time for accounts, transactions, holdings, and provider account information.\r\n\r\nCobrand session only has to be passed to invoke this service. The time difference between fromDate and toDate fields cannot be more than 60 minutes.\r\n\r\nRefer to dataExtracts page for more information.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}}",
                    "description": "cobSession has to be passed, received from cobrand login API response."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "loginName",
                    "value": "{{loginName}}",
                    "equals": true,
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "fromDate",
                    "value": "2018-05-31T10:18:44Z",
                    "equals": true,
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "toDate",
                    "value": "2018-05-31T10:19:44Z",
                    "equals": true,
                    "description": "",
                    "enabled": true
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get User Data successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}",
                            "if (responseBody == \"{}\") {",
                            "    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "58d6e17a-3996-47a9-be78-ba281865fd59",
            "responses": [
                {
                    "id": "0d890f72-5357-418c-a80e-8c48abd76956",
                    "name": "Get User Data",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\r\n    \"userData\":[\r\n        {\r\n            \"user\":{\r\n                \"loginName\":\"yslasset1\"\r\n            },\r\n            \"providerAccount\":[\r\n                {\r\n                    \"id\":10655515,\r\n                    \"aggregationSource\":\"USER\",\r\n                    \"lastUpdated\":\"2017-02-20T10:18:46Z\",\r\n                    \"providerId\":16441,\r\n                    \"isDeleted\":false\r\n                }\r\n            ],\r\n            \"account\":[\r\n                {\r\n                    \"CONTAINER\":\"bank\",\r\n                    \"lastUpdated\":\"2017-02-20T10:18:59Z\",\r\n                    \"isDeleted\":false,\r\n                    \"id\":1111901803,\r\n                    \"createdDate\":\"2017-01-10T13:38:10Z\",\r\n                    \"providerAccountId\":10655515\r\n                }\r\n            ],\r\n            \"transaction\":[\r\n                {\r\n                    \"accountId\":1111901802,\r\n                    \"isDeleted\":false,\r\n                    \"status\":\"POSTED\",\r\n                    \"CONTAINER\":\"bank\",\r\n                    \"categoryId\":27,\r\n                    \"date\":\"2017-02-20\",\r\n                    \"type\":\"DEPOSITS_CREDITS\",\r\n                    \"amount\":{\r\n                        \"amount\":343465,\r\n                        \"currency\":\"USD\"\r\n                    },\r\n                    \"baseType\":\"CREDIT\"\r\n                }\r\n            ],\r\n            \"holding\":[\r\n                {\r\n                    \"id\":1725230,\r\n                    \"accountId\":1111901806,\r\n                    \"description\":\"CDDesc\",\r\n                    \"holdingType\":\"CD\",\r\n                    \"isDeleted\":false,\r\n                    \"interestRate\":2000,\r\n                    \"providerAccountId\":10655515\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "a4444024-3db0-4e42-a179-ef10dd98980e",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe get user data service is used to get a user's modified data for a particular period of time for accounts, transactions, holdings, and provider account information.\r\n\r\nCobrand session only has to be passed to invoke this service. The time difference between fromDate and toDate fields cannot be more than 60 minutes.\r\n\r\nRefer to dataExtracts page for more information.",
                        "headers": "Authorization: cobSession={{cobSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/dataExtracts\/userData?loginName={{userName}}&fromDate=2018-05-31T10:18:44Z&toDate=2018-05-31T10:19:44Z",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "loginName",
                                "value": "{{userName}}"
                            },
                            {
                                "key": "fromDate",
                                "value": "2018-05-31T10:18:44Z"
                            },
                            {
                                "key": "toDate",
                                "value": "2018-05-31T10:19:44Z"
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}}",
                                "description": "cobSession has to be passed, received from cobrand login API response."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "2",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Thu, 31 May 2018 22:46:28 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "T1527806787804T3A32Y000000NLbYH",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "190f31cc-ec1c-446b-b170-630ed5ce5002",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get User Data successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}\nif (responseBody == \"{}\") {\n    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "1a154adf-a9c5-44fe-a61b-337d5503f21a",
            "name": "Get Holding Summary",
            "url": "{{host}}\/derived\/holdingSummary",
            "description": "Implementation Notes:\r\n\r\nThe get holding summary service is used to get the summary of asset classifications for the user.\r\n\r\nBy default, accounts with status as ACTIVE and TO BE CLOSED will be considered.\r\n\r\nIf the include parameter value is passed as details then a summary with holdings and account information is returned.\r\n\r\naccountReconType input parameter is relevant for investment accounts, provided the reconciliation feature is turned on.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "include",
                    "value": null,
                    "description": "details",
                    "enabled": false
                },
                {
                    "key": "classificationType",
                    "value": null,
                    "description": "e.g. country, sector, etc.\t",
                    "enabled": false
                },
                {
                    "key": "accoutReconType",
                    "value": null,
                    "description": "UNRECONCILED (Default value), RECONCILED\t",
                    "enabled": false
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Holding Summary successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "7ffe98e2-1acd-46c4-a0ca-d5c1ec74e91c",
            "responses": [
                {
                    "id": "9c525ad1-1d45-40d3-b9d7-a25f7e25c2ea",
                    "name": "Get Holding Summary",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"holdingSummary\":[{\"classificationType\":\"Asset class\",\"classificationValue\":\"Cash\",\"value\":{\"amount\":18269.0,\"currency\":\"USD\"}},{\"classificationType\":\"Asset class\",\"classificationValue\":\"Not Supported\",\"value\":{\"amount\":24070.0,\"currency\":\"USD\"}},{\"classificationType\":\"Asset class\",\"classificationValue\":\"Unclassified\",\"value\":{\"amount\":16200.0,\"currency\":\"USD\"}},{\"classificationType\":\"Country\",\"classificationValue\":\"Not Supported\",\"value\":{\"amount\":24070.0,\"currency\":\"USD\"}},{\"classificationType\":\"Country\",\"classificationValue\":\"US\",\"value\":{\"amount\":18269.0,\"currency\":\"USD\"}},{\"classificationType\":\"Country\",\"classificationValue\":\"Unclassified\",\"value\":{\"amount\":16200.0,\"currency\":\"USD\"}},{\"classificationType\":\"Sector\",\"classificationValue\":\"Not Supported\",\"value\":{\"amount\":42339.0,\"currency\":\"USD\"}},{\"classificationType\":\"Sector\",\"classificationValue\":\"Unclassified\",\"value\":{\"amount\":16200.0,\"currency\":\"USD\"}},{\"classificationType\":\"Style\",\"classificationValue\":\"Not Supported\",\"value\":{\"amount\":42339.0,\"currency\":\"USD\"}},{\"classificationType\":\"Style\",\"classificationValue\":\"Unclassified\",\"value\":{\"amount\":16200.0,\"currency\":\"USD\"}}]}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "95632007-32b1-4399-9366-89eda5558ebe",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe get holding summary service is used to get the summary of asset classifications for the user.\r\n\r\nBy default, accounts with status as ACTIVE and TO BE CLOSED will be considered.\r\n\r\nIf the include parameter value is passed as details then a summary with holdings and account information is returned.\r\n\r\naccountReconType input parameter is relevant for investment accounts, provided the reconciliation feature is turned on.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/derived\/holdingSummary?accountId=1111590365,1111589808",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "accountId",
                                "value": "1111590365,1111589808",
                                "description": "account id"
                            },
                            {
                                "key": "include",
                                "value": null,
                                "description": "details",
                                "enabled": false
                            },
                            {
                                "key": "classificationType",
                                "value": null,
                                "description": "e.g. country, sector, etc.\t",
                                "enabled": false
                            },
                            {
                                "key": "accoutReconType",
                                "value": null,
                                "description": "UNRECONCILED (Default value), RECONCILED\t",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "1152",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Thu, 31 May 2018 21:50:11 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "H1527803411310K3A32D000000NLgYd",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "1a154adf-a9c5-44fe-a61b-337d5503f21a",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Holding Summary successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "1c49ceac-5553-484f-8c23-0ac22a0507f3",
            "name": "Subscribe Event*",
            "url": "{{host}}cobrand\/config\/notifications\/events\/REFRESH",
            "description": "Implementation Notes:\r\n\r\nThe subscribe events service is used to subscribe to an event for receiving notifications.\r\n\r\nThe callback URL, where the notification will be posted, should be provided to this service.\r\n\r\nCustomers can subscribe to REFRESH and DATA_UPDATES event.\r\n\r\nNote: The content type has to be passed as application\/json for the body parameter.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                },
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}}",
                    "description": "cobSession has to be passed, received from cobrand login API response."
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 201\", function () {",
                            "    pm.response.to.have.status(201);",
                            "});",
                            "if (responseCode.code != 201) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 201) {",
                            "    console.log(\"Subscribe Event successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "f91e3e0a-ecde-44f0-833d-fed8ca1de98f",
            "responses": [
                {
                    "id": "a91b19e3-d4f7-4999-b3d5-53b5dce1dab3",
                    "name": "Subscribe Event",
                    "status": "Created",
                    "mime": "",
                    "language": "json",
                    "text": "",
                    "responseCode": {
                        "code": 201,
                        "name": "Created",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "23644c90-1d3d-4785-9514-654c3a4ede56",
                        "method": "POST",
                        "description": "Implementation Notes:\r\n\r\nThe subscribe events service is used to subscribe to an event for receiving notifications.\r\n\r\nThe callback URL, where the notification will be posted, should be provided to this service.\r\n\r\nCustomers can subscribe to REFRESH and DATA_UPDATES event.\r\n\r\nNote: The content type has to be passed as application\/json for the body parameter.",
                        "headers": "Api-Version: 1.1\nCobrand-Name: {{cobrandName}}\nAuthorization: cobSession={{cobSession}}\nContent-Type: application\/json",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "{\t\r\n\t\"event\": {\r\n\t\t\"callbackUrl\": \"http:\/\/yslrocks.com\/notify\"\r\n\t}\r\n}",
                        "url": "{{host}}cobrand\/config\/notifications\/events\/REFRESH",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            },
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}}",
                                "description": "cobSession has to be passed, received from cobrand login API response."
                            },
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Cache-Control",
                            "value": "no-store, no-cache",
                            "name": "Cache-Control",
                            "description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "0",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Thu, 31 May 2018 20:26:31 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "I1527798391165I28k106Q000000NLPYt",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "1c49ceac-5553-484f-8c23-0ac22a0507f3",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 201\", function () {\n    pm.response.to.have.status(201);\n});\nif (responseCode.code != 201) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 201) {\n    console.log(\"Subscribe Event successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "{\t\r\n\t\"event\": {\r\n\t\t\"callbackUrl\": \"http:\/\/yslrocks.com\/notify\"\r\n\t}\r\n}",
            "headers": "Api-Version: 1.1\nCobrand-Name: {{cobrandName}}\nAuthorization: cobSession={{cobSession}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "1db758f6-c488-4d8e-972b-08cb53d3cea4",
            "name": "Get Provider Details",
            "url": "{{host}}\/providers\/16441",
            "description": "Implementation Notes:\r\n\r\nThe get provider detail service is used to get detailed information including the login form for a provider.\r\n\r\nThe response is a provider object that includes information such as name of the provider, provider's base URL, a list of containers supported by the provider, the login form details of the provider, etc.\r\n\r\nOnly enabled datasets, attributes and containers gets returned in the response.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "id": "a4624d32-743f-40cc-a9be-74401170fce8",
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Provider Details successful.\");",
                            "    pm.environment.set(\"providerId\", data.provider[0].id);",
                            "    pm.environment.set(\"loginForm\", JSON.stringify(data.provider[0].loginForm));",
                            "    pm.environment.set(\"dataset\", JSON.stringify(data.provider[0].dataset));",
                            "    for (var form in data.provider[0].loginForm[0].row) {",
                            "        for (var field in data.provider[0].loginForm[0].row[form].field)",
                            "        pm.environment.set(pm.environment.get(\"providerId\")+\"_\"+field+\"_\"+data.provider[0].loginForm[0].row[form].label, data.provider[0].loginForm[0].row[form].field[field].name);",
                            "    }",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "9ea9e6db-3405-461b-b1d5-3b4a197fc3a1",
            "responses": [
                {
                    "id": "2b42cc0c-7008-461e-9390-efb3feec6375",
                    "name": "Get Provider Details",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"provider\":[{\"id\":1603,\"name\":\"Citibank (online.citibank.com)\",\"loginUrl\":\"https:\/\/online.citibank.com\/US\/JPS\/portal\/Index.do\",\"baseUrl\":\"https:\/\/online.citibank.com\/\",\"favicon\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/FAVICON\/FAV_1603.SVG\",\"logo\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/LOGO\/LOGO_1603_1_2.SVG\",\"status\":\"Supported\",\"isAutoRefreshEnabled\":true,\"containerAttributes\":{\"CREDITCARD\":{\"numberOfTransactionDays\":365},\"BANK\":{\"numberOfTransactionDays\":365},\"LOAN\":{\"numberOfTransactionDays\":90},\"INVESTMENT\":{\"numberOfTransactionDays\":365}},\"mfaType\":\"Question and answer type multi factor authentication.\",\"oAuthSite\":false,\"authType\":\"MFA_CREDENTIALS\",\"lastModified\":\"2018-05-31T13:02:08Z\",\"languageISOCode\":\"EN\",\"primaryLanguageISOCode\":\"EN\",\"containerNames\":[\"bank\",\"loan\",\"investment\",\"creditCard\"],\"loginForm\":{\"id\":1265,\"forgetPasswordURL\":\"https:\/\/online.citibank.com\/US\/JSO\/pwreset\/UserID.do\",\"formType\":\"login\",\"row\":[{\"id\":58057,\"label\":\"User ID\",\"form\":\"0001\",\"fieldRowChoice\":\"0001\",\"field\":[{\"id\":1828,\"name\":\"LOGIN\",\"type\":\"text\",\"value\":\"\",\"isOptional\":false,\"valueEditable\":true}]},{\"id\":58056,\"label\":\"Password\",\"form\":\"0001\",\"fieldRowChoice\":\"0002\",\"field\":[{\"id\":1829,\"name\":\"PASSWORD\",\"maxLength\":100,\"type\":\"password\",\"value\":\"\",\"isOptional\":false,\"valueEditable\":true}]}]},\"capability\":[{\"name\":\"CHALLENGE_DEPOSIT_VERIFICATION\",\"container\":[\"bank\"]}],\"additionalDataSet\":[{\"name\":\"ACCT_PROFILE\",\"attribute\":[{\"name\":\"FULL_ACCT_NUMBER\",\"container\":[\"bank\"]},{\"name\":\"BANK_TRANSFER_CODE\",\"container\":[\"bank\"]},{\"name\":\"HOLDER_NAME\",\"container\":[\"bank\"]}]}]}]}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "1a828749-cf5f-434c-b593-aa4c76205987",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe get provider detail service is used to get detailed information including the login form for a provider.\r\n\r\nThe response is a provider object that includes information such as name of the provider, provider's base URL, a list of containers supported by the provider, the login form details of the provider, etc.\r\n\r\nOnly enabled datasets, attributes and containers gets returned in the response.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/providers\/16441",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "1579",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Fri, 01 Jun 2018 17:49:32 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "R1527875372683a3t31G000000NLUYX",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "1db758f6-c488-4d8e-972b-08cb53d3cea4",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Provider Details successful.\");\n    pm.environment.set(\"providerId\", data.provider[0].id);\n    pm.environment.set(\"loginForm\", JSON.stringify(data.provider[0].loginForm));\n    pm.environment.set(\"dataset\", JSON.stringify(data.provider[0].dataset));\n    for (var form in data.provider[0].loginForm[0].row) {\n        for (var field in data.provider[0].loginForm[0].row[form].field)\n        pm.environment.set(pm.environment.get(\"providerId\")+\"_\"+field+\"_\"+data.provider[0].loginForm[0].row[form].label, data.provider[0].loginForm[0].row[form].field[field].name);\n    }\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "21ed3fc8-0aa6-4723-98d5-bab61c196cb9",
            "name": "Update Account",
            "url": "{{host}}\/providerAccounts?providerAccountIds=18425701",
            "description": "Implementation Notes:\r\n\r\nThe update account service is used to: \r\n\r\n(1) Retrieve the latest information for accounts from the provider site \r\n\r\n(2) Update account credentials when the user has changed the authentication information at the the provider site. \r\n\r\n(3) Post MFA information for the MFA-enabled provider accounts during add and update accounts. \r\n\r\n(4) This service can be called without providing credentials to retrieve the latest information of non-MFA type of more than one provider accounts. \r\n\r\n(5) If the credentials have to be updated in the Yodlee system, one of the following should be provided as input to this service: \r\n\r\n(a) LoginForm \r\n\r\n(b) Field array\r\n\r\n(6) The loginForm or the field array are the objects under the provider object that is obtained from the get provider details service response.\r\n\r\n(7) The credentials provided by the user should be embedded in the loginForm or field array object.\r\n\r\n(8) Similar to credentials, the MFA information should be embedded in the loginForm or field array object. \r\n\r\nNote: If you are testing PKI feature, for encrypting the credentials and answers for MFA questions use encryption utility.\r\n\r\n(9) This API has webhooks support. \r\n\r\n(10) If the customer has subscribed to the REFRESH event notification and invoked this API for updating an account, relevant notifications will be sent to the customer.\r\n\r\nNote: A dataset may depend on another dataset for retrieval, hence the response will involve the datasets requested and dependent datastets. The content type has to be passed as application\/json for the body parameter",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                }
            ],
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "providerAccountIds",
                    "value": "18425701"
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Update Account successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "75abde44-be48-4c3b-841f-1025a3c1bafd",
            "responses": [
                {
                    "id": "e2298744-5a77-460b-b043-13ed2ba29748",
                    "name": "Update Account",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"providerAccount\":{\"id\":18425701,\"aggregationSource\":\"USER\",\"refreshInfo\":{\"statusCode\":802,\"statusMessage\":\"CREDENTIALS_UPDATE_IN_PROGRESS\",\"status\":\"IN_PROGRESS\",\"additionalStatus\":\"LOGIN_IN_PROGRESS\",\"lastRefreshAttempt\":\"2018-06-11T21:02:08Z\"}}}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "a49852c8-1c1d-47fd-a949-aa0681b8d294",
                        "method": "PUT",
                        "description": "Implementation Notes:\r\n\r\nThe update account service is used to: \r\n\r\n(1) Retrieve the latest information for accounts from the provider site \r\n\r\n(2) Update account credentials when the user has changed the authentication information at the the provider site. \r\n\r\n(3) Post MFA information for the MFA-enabled provider accounts during add and update accounts. \r\n\r\n(4) This service can be called without providing credentials to retrieve the latest information of non-MFA type of more than one provider accounts. \r\n\r\n(5) If the credentials have to be updated in the Yodlee system, one of the following should be provided as input to this service: \r\n\r\n(a) LoginForm \r\n\r\n(b) Field array\r\n\r\n(6) The loginForm or the field array are the objects under the provider object that is obtained from the get provider details service response.\r\n\r\n(7) The credentials provided by the user should be embedded in the loginForm or field array object.\r\n\r\n(8) Similar to credentials, the MFA information should be embedded in the loginForm or field array object. \r\n\r\nNote: If you are testing PKI feature, for encrypting the credentials and answers for MFA questions use encryption utility.\r\n\r\n(9) This API has webhooks support. \r\n\r\n(10) If the customer has subscribed to the REFRESH event notification and invoked this API for updating an account, relevant notifications will be sent to the customer.\r\n\r\nNote: A dataset may depend on another dataset for retrieval, hence the response will involve the datasets requested and dependent datastets. The content type has to be passed as application\/json for the body parameter",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "{\r\n\t\"loginForm\": {\r\n\t\t\"id\": 16103,\r\n\t\t\"forgetPasswordURL\": \"http:\/\/64.14.28.129\/dag\/index.do\",\r\n\t\t\"formType\": \"login\",\r\n\t\t\"row\": [{\r\n\t\t\t\t\"id\": 150862,\r\n\t\t\t\t\"label\": \"Catalog\",\r\n\t\t\t\t\"form\": \"0001\",\r\n\t\t\t\t\"fieldRowChoice\": \"0001\",\r\n\t\t\t\t\"field\": [{\r\n\t\t\t\t\t\"id\": 65499,\r\n\t\t\t\t\t\"name\": \"LOGIN\",\r\n\t\t\t\t\t\"type\": \"text\",\r\n\t\t\t\t\t\"value\": \"asdf\",\r\n\t\t\t\t\t\"isOptional\": false,\r\n\t\t\t\t\t\"valueEditable\": true\r\n\t\t\t\t}]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": 150863,\r\n\t\t\t\t\"label\": \"Password\",\r\n\t\t\t\t\"form\": \"0001\",\r\n\t\t\t\t\"fieldRowChoice\": \"0002\",\r\n\t\t\t\t\"field\": [{\r\n\t\t\t\t\t\"id\": 65500,\r\n\t\t\t\t\t\"name\": \"PASSWORD\",\r\n\t\t\t\t\t\"type\": \"password\",\r\n\t\t\t\t\t\"value\": \"dada\",\r\n\t\t\t\t\t\"isOptional\": false,\r\n\t\t\t\t\t\"valueEditable\": true\r\n\t\t\t\t}]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
                        "url": "{{host}}\/providerAccounts?providerAccountIds=18425701",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "providerAccountIds",
                                "value": "18425701"
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            },
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "250",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Mon, 11 Jun 2018 21:32:57 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "A1528752777179k28b106P000000NLnYD",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "21ed3fc8-0aa6-4723-98d5-bab61c196cb9",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Update Account successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "{\r\n\t\"loginForm\": {\r\n\t\t\"id\": 16103,\r\n\t\t\"forgetPasswordURL\": \"http:\/\/64.14.28.129\/dag\/index.do\",\r\n\t\t\"formType\": \"login\",\r\n\t\t\"row\": [{\r\n\t\t\t\t\"id\": 150862,\r\n\t\t\t\t\"label\": \"Catalog\",\r\n\t\t\t\t\"form\": \"0001\",\r\n\t\t\t\t\"fieldRowChoice\": \"0001\",\r\n\t\t\t\t\"field\": [{\r\n\t\t\t\t\t\"id\": 65499,\r\n\t\t\t\t\t\"name\": \"LOGIN\",\r\n\t\t\t\t\t\"type\": \"text\",\r\n\t\t\t\t\t\"value\": \"asdf\",\r\n\t\t\t\t\t\"isOptional\": false,\r\n\t\t\t\t\t\"valueEditable\": true\r\n\t\t\t\t}]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": 150863,\r\n\t\t\t\t\"label\": \"Password\",\r\n\t\t\t\t\"form\": \"0001\",\r\n\t\t\t\t\"fieldRowChoice\": \"0002\",\r\n\t\t\t\t\"field\": [{\r\n\t\t\t\t\t\"id\": 65500,\r\n\t\t\t\t\t\"name\": \"PASSWORD\",\r\n\t\t\t\t\t\"type\": \"password\",\r\n\t\t\t\t\t\"value\": \"dada\",\r\n\t\t\t\t\t\"isOptional\": false,\r\n\t\t\t\t\t\"valueEditable\": true\r\n\t\t\t\t}]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "227b3064-f9b8-459e-be48-b096e7317c84",
            "name": "Get Transactions",
            "url": "{{host}}\/transactions?fromDate=2013-01-01",
            "description": "Implementation Notes:\r\n\r\nThe Transaction service is used to get a list of transactions for a user.\r\n\r\nBy default, this service returns the last 30 days of transactions from today's date.\r\n\r\nThe search is performed on these attributes: original, consumer, and simple descriptions.\r\n\r\nValues for categoryId parameter can be fetched from get transaction category list service.\r\n\r\nThe categoryId is used to filter transactions based on system-defined category as well as user-defined category.\r\n\r\nUser-defined categoryIds should be provided in the filter with the prefix \"U\". E.g. U10002 \r\n\r\nThe skip and top parameters are useful for paginating transactions (i.e., to fetch small transaction payloads for performance reasons)\r\n\r\nDouble quotes in the merchant name will be prefixed by backslashes (\\) in the response, e.g. Toys \\\"R\\\" Us.\r\n\r\nNote 1: Category input is deprecated and replaced with categoryId. \r\n\r\nNote 2: TDE is made available for bank and card accounts and for the US market only.The address field in the response is available only when the TDE key is turned on. \r\n\r\naccountReconType input parameter is relevant for investment accounts, provided the reconciliation feature is turned on.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "fromDate",
                    "value": "2013-01-01"
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Transactions successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}",
                            "if (responseBody == \"{}\") {",
                            "    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");",
                            "}",
                            "",
                            "\/*",
                            "FASTLINK:",
                            "<form action=\"https:\/\/node.developer.yodlee.com\/authenticate\/restserver\/\" method=\"POST\">",
                            "  <input type=\"text\" name=\"app\" value=\"10003600\" \/>",
                            "  <input type=\"text\" name=\"rsession\" \/>",
                            "  <input type=\"text\" name=\"token\" \/>",
                            "  <input type=\"text\" name=\"redirectReq\" value=\"true\"\/>",
                            "  <input type=\"submit\" name=\"submit\" \/>",
                            "<\/form>",
                            "*\/"
                        ]
                    }
                }
            ],
            "folder": "98a0bf62-9a64-49df-a143-22c0213676cd",
            "responses": [
                {
                    "id": "a22bbd0d-a045-44a3-906d-1900698f6b1e",
                    "name": "Get Transactions",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"transaction\":[{\"CONTAINER\":\"bank\",\"id\":87774437,\"amount\":{\"amount\":3465,\"currency\":\"USD\"},\"baseType\":\"CREDIT\",\"categoryType\":\"INCOME\",\"categoryId\":32,\"category\":\"Other Income\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000012,\"createdDate\":\"2018-05-15T20:30:16Z\",\"lastUpdated\":\"2018-05-23T21:20:43Z\",\"description\":{\"original\":\"DESC\",\"consumer\":\"Electronic Purchases\",\"simple\":\"DESC\"},\"type\":\"OTHER_DEPOSITS\",\"subType\":\"CREDIT\",\"isManual\":false,\"date\":\"2017-03-16\",\"transactionDate\":\"2017-03-16\",\"postDate\":\"2017-03-16\",\"memo\":\"acsd\",\"status\":\"POSTED\",\"accountId\":11618226,\"runningBalance\":{\"amount\":59,\"currency\":\"USD\"},\"checkNumber\":\"DAG-133\"},{\"CONTAINER\":\"bank\",\"id\":87774435,\"amount\":{\"amount\":59,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":33,\"category\":\"Check Payment\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000009,\"createdDate\":\"2018-05-15T20:30:16Z\",\"lastUpdated\":\"2018-05-15T20:30:16Z\",\"description\":{\"original\":\"CHECK # 998\",\"simple\":\"Payment by Check\"},\"type\":\"PAYMENT\",\"subType\":\"PAYMENT_BY_CHECK\",\"isManual\":false,\"date\":\"2017-03-16\",\"transactionDate\":\"2016-10-16\",\"postDate\":\"2017-03-16\",\"status\":\"POSTED\",\"accountId\":11618225,\"runningBalance\":{\"amount\":59,\"currency\":\"USD\"},\"checkNumber\":\"998\"},{\"CONTAINER\":\"bank\",\"id\":87774439,\"amount\":{\"amount\":3103,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":19,\"category\":\"Other Expenses\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000009,\"createdDate\":\"2018-05-15T20:30:16Z\",\"lastUpdated\":\"2018-05-15T20:30:16Z\",\"description\":{\"original\":\"DESC\",\"simple\":\"DESC\"},\"type\":\"OTHER_WITHDRAWALS\",\"subType\":\"DEBIT\",\"isManual\":false,\"date\":\"2017-03-14\",\"transactionDate\":\"2017-03-12\",\"postDate\":\"2017-03-14\",\"status\":\"POSTED\",\"accountId\":11618226,\"runningBalance\":{\"amount\":59,\"currency\":\"USD\"},\"checkNumber\":\"DAG-333\"},{\"CONTAINER\":\"bank\",\"id\":87774440,\"amount\":{\"amount\":5646,\"currency\":\"USD\"},\"baseType\":\"CREDIT\",\"categoryType\":\"INCOME\",\"categoryId\":32,\"category\":\"Other Income\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000012,\"createdDate\":\"2018-05-15T20:30:16Z\",\"lastUpdated\":\"2018-05-15T20:30:16Z\",\"description\":{\"original\":\"DESC\",\"simple\":\"DESC\"},\"type\":\"OTHER_DEPOSITS\",\"subType\":\"CREDIT\",\"isManual\":false,\"date\":\"2017-03-10\",\"transactionDate\":\"2017-03-11\",\"postDate\":\"2017-03-10\",\"status\":\"POSTED\",\"accountId\":11618226,\"runningBalance\":{\"amount\":59,\"currency\":\"USD\"},\"checkNumber\":\"DAG-233\"},{\"CONTAINER\":\"bank\",\"id\":87774438,\"amount\":{\"amount\":9846,\"currency\":\"USD\"},\"baseType\":\"CREDIT\",\"categoryType\":\"INCOME\",\"categoryId\":32,\"category\":\"Other Income\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000012,\"createdDate\":\"2018-05-15T20:30:16Z\",\"lastUpdated\":\"2018-05-15T20:30:16Z\",\"description\":{\"original\":\"DESC\",\"simple\":\"DESC\"},\"type\":\"OTHER_DEPOSITS\",\"subType\":\"CREDIT\",\"isManual\":false,\"date\":\"2017-03-02\",\"transactionDate\":\"2017-03-16\",\"postDate\":\"2017-03-02\",\"status\":\"POSTED\",\"accountId\":11618226,\"runningBalance\":{\"amount\":59,\"currency\":\"USD\"},\"checkNumber\":\"DAG-333\"},{\"CONTAINER\":\"bank\",\"id\":87774436,\"amount\":{\"amount\":343465,\"currency\":\"USD\"},\"baseType\":\"CREDIT\",\"categoryType\":\"INCOME\",\"categoryId\":32,\"category\":\"Other Income\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000012,\"createdDate\":\"2018-05-15T20:30:16Z\",\"lastUpdated\":\"2018-05-15T20:30:16Z\",\"description\":{\"original\":\"DESC\",\"simple\":\"DESC\"},\"type\":\"OTHER_DEPOSITS\",\"subType\":\"CREDIT\",\"isManual\":false,\"date\":\"2016-10-16\",\"transactionDate\":\"2016-10-16\",\"postDate\":\"2016-10-16\",\"status\":\"POSTED\",\"accountId\":11618225,\"runningBalance\":{\"amount\":59,\"currency\":\"USD\"},\"checkNumber\":\"DAG-333\"},{\"CONTAINER\":\"creditCard\",\"id\":37142356,\"amount\":{\"amount\":101,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":23,\"category\":\"Travel\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"AIR VALET\",\"simple\":\"Air Valet\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2014-01-17\",\"postDate\":\"2014-01-17\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"airvaletus\",\"name\":\"Air Valet\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Travel\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142357,\"amount\":{\"amount\":180.89,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"AMAZON MKTPLACE PMTS\",\"simple\":\"Amazon\"},\"type\":\"PURCHASE\",\"subType\":\"ONLINE_PURCHASE\",\"isManual\":false,\"date\":\"2014-01-16\",\"postDate\":\"2014-01-16\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"amazonus\",\"name\":\"Amazon\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Electronics\/General Merchandise\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142358,\"amount\":{\"amount\":101.07,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":7,\"category\":\"Entertainment\/Recreation\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"BLOCKBUSTEREXPRESS\",\"simple\":\"Blockbusters\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2014-01-15\",\"postDate\":\"2014-01-15\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"blockbustersus\",\"name\":\"Blockbusters\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Entertainment\/Recreation\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142359,\"amount\":{\"amount\":20,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":22,\"category\":\"Restaurants\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"McDonalds\",\"simple\":\"Mcdonald's\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2014-01-14\",\"postDate\":\"2014-01-14\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"mcdonald'sus\",\"name\":\"Mcdonald'S\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Restaurants\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142360,\"amount\":{\"amount\":2500,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":13,\"category\":\"Home Improvement\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Furniture Purchase\",\"simple\":\"Furniture 1\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2014-01-13\",\"postDate\":\"2014-01-13\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"furniture1us\",\"name\":\"Furniture 1\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Home Improvement\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142361,\"amount\":{\"amount\":1000,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Online Purchase\",\"simple\":\"Online \"},\"type\":\"PURCHASE\",\"subType\":\"ONLINE_PURCHASE\",\"isManual\":false,\"date\":\"2014-01-12\",\"postDate\":\"2014-01-12\",\"status\":\"POSTED\",\"accountId\":11618180},{\"CONTAINER\":\"creditCard\",\"id\":37142362,\"amount\":{\"amount\":10,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":24,\"category\":\"Service Charges\/Fees\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000009,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Service Charges\",\"simple\":\"Service Charge\"},\"type\":\"CHARGES_FEES\",\"subType\":\"SERVICE_CHARGE\",\"isManual\":false,\"date\":\"2014-01-11\",\"postDate\":\"2014-01-11\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"servicecareus\",\"name\":\"Service Care\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Service Charges\/Fees\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142363,\"amount\":{\"amount\":110.01,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":2,\"category\":\"Truck Expenses\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000003,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"SHELL OIL\",\"simple\":\"Shell\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2014-01-10\",\"postDate\":\"2014-01-10\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"shellus\",\"name\":\"Shell\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Automotive\/Fuel\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142364,\"amount\":{\"amount\":200,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":15,\"category\":\"Cable\/Satellite\/Telecom\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Telephone Bill Paid\",\"simple\":\"Telephone Jacks\"},\"type\":\"PAYMENT\",\"subType\":\"RECURRING_SUBSCRIPTION_PAYMENT\",\"isManual\":false,\"date\":\"2014-01-09\",\"postDate\":\"2014-01-09\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"telephonejacksus\",\"name\":\"Telephone Jacks\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Cable\/Satellite\/Telecom\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142365,\"amount\":{\"amount\":124.72,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"WAL-MART\",\"simple\":\"Walmart\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2014-01-08\",\"postDate\":\"2014-01-08\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"walmartus\",\"name\":\"Walmart\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Electronics\/General Merchandise\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142366,\"amount\":{\"amount\":200,\"currency\":\"USD\"},\"baseType\":\"CREDIT\",\"categoryType\":\"TRANSFER\",\"categoryId\":26,\"category\":\"Credit Card Payments\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000018,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Payment - Thank You\",\"simple\":\"Credit Card Payment\"},\"type\":\"PAYMENT\",\"subType\":\"CREDIT_CARD_PAYMENT\",\"isManual\":false,\"date\":\"2014-01-07\",\"postDate\":\"2014-01-07\",\"status\":\"POSTED\",\"accountId\":11618180},{\"CONTAINER\":\"creditCard\",\"id\":37142367,\"amount\":{\"amount\":101,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":23,\"category\":\"Travel\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"AIR VALET\",\"simple\":\"Air Valet\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2014-01-06\",\"postDate\":\"2014-01-06\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"airvaletus\",\"name\":\"Air Valet\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Travel\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142368,\"amount\":{\"amount\":180.89,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"AMAZON MKTPLACE PMTS\",\"simple\":\"Amazon\"},\"type\":\"PURCHASE\",\"subType\":\"ONLINE_PURCHASE\",\"isManual\":false,\"date\":\"2014-01-05\",\"postDate\":\"2014-01-05\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"amazonus\",\"name\":\"Amazon\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Electronics\/General Merchandise\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142369,\"amount\":{\"amount\":101.07,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":7,\"category\":\"Entertainment\/Recreation\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"BLOCKBUSTEREXPRESS\",\"simple\":\"Blockbusters\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2014-01-04\",\"postDate\":\"2014-01-04\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"blockbustersus\",\"name\":\"Blockbusters\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Entertainment\/Recreation\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142370,\"amount\":{\"amount\":20,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":22,\"category\":\"Restaurants\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"McDonalds\",\"simple\":\"Mcdonald's\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2014-01-03\",\"postDate\":\"2014-01-03\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"mcdonald'sus\",\"name\":\"Mcdonald'S\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Restaurants\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142371,\"amount\":{\"amount\":2500,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":13,\"category\":\"Home Improvement\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Furniture Purchase\",\"simple\":\"Furniture 1\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2014-01-02\",\"postDate\":\"2014-01-02\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"furniture1us\",\"name\":\"Furniture 1\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Home Improvement\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142372,\"amount\":{\"amount\":1000,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Online Purchase\",\"simple\":\"Online \"},\"type\":\"PURCHASE\",\"subType\":\"ONLINE_PURCHASE\",\"isManual\":false,\"date\":\"2014-01-01\",\"postDate\":\"2014-01-01\",\"status\":\"POSTED\",\"accountId\":11618180},{\"CONTAINER\":\"creditCard\",\"id\":37142373,\"amount\":{\"amount\":10,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":24,\"category\":\"Service Charges\/Fees\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000009,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Service Charges\",\"simple\":\"Service Charge\"},\"type\":\"CHARGES_FEES\",\"subType\":\"SERVICE_CHARGE\",\"isManual\":false,\"date\":\"2013-12-30\",\"postDate\":\"2013-12-30\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"servicecareus\",\"name\":\"Service Care\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Service Charges\/Fees\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142374,\"amount\":{\"amount\":110.01,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":2,\"category\":\"Truck Expenses\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000003,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"SHELL OIL\",\"simple\":\"Shell\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-12-29\",\"postDate\":\"2013-12-29\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"shellus\",\"name\":\"Shell\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Automotive\/Fuel\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142375,\"amount\":{\"amount\":200,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":15,\"category\":\"Cable\/Satellite\/Telecom\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Telephone Bill Paid\",\"simple\":\"Telephone Jacks\"},\"type\":\"PAYMENT\",\"subType\":\"RECURRING_SUBSCRIPTION_PAYMENT\",\"isManual\":false,\"date\":\"2013-12-28\",\"postDate\":\"2013-12-28\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"telephonejacksus\",\"name\":\"Telephone Jacks\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Cable\/Satellite\/Telecom\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142376,\"amount\":{\"amount\":124.72,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"WAL-MART\",\"simple\":\"Walmart\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-12-27\",\"postDate\":\"2013-12-27\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"walmartus\",\"name\":\"Walmart\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Electronics\/General Merchandise\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142377,\"amount\":{\"amount\":200,\"currency\":\"USD\"},\"baseType\":\"CREDIT\",\"categoryType\":\"TRANSFER\",\"categoryId\":26,\"category\":\"Credit Card Payments\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000018,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Payment - Thank You\",\"simple\":\"Credit Card Payment\"},\"type\":\"PAYMENT\",\"subType\":\"CREDIT_CARD_PAYMENT\",\"isManual\":false,\"date\":\"2013-12-26\",\"postDate\":\"2013-12-26\",\"status\":\"POSTED\",\"accountId\":11618180},{\"CONTAINER\":\"creditCard\",\"id\":37142378,\"amount\":{\"amount\":101,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":23,\"category\":\"Travel\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"AIR VALET\",\"simple\":\"Air Valet\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-12-25\",\"postDate\":\"2013-12-25\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"airvaletus\",\"name\":\"Air Valet\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Travel\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142379,\"amount\":{\"amount\":180.89,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"AMAZON MKTPLACE PMTS\",\"simple\":\"Amazon\"},\"type\":\"PURCHASE\",\"subType\":\"ONLINE_PURCHASE\",\"isManual\":false,\"date\":\"2013-12-24\",\"postDate\":\"2013-12-24\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"amazonus\",\"name\":\"Amazon\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Electronics\/General Merchandise\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142380,\"amount\":{\"amount\":101.07,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":7,\"category\":\"Entertainment\/Recreation\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"BLOCKBUSTEREXPRESS\",\"simple\":\"Blockbusters\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-12-23\",\"postDate\":\"2013-12-23\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"blockbustersus\",\"name\":\"Blockbusters\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Entertainment\/Recreation\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142381,\"amount\":{\"amount\":20,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":22,\"category\":\"Restaurants\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"McDonalds\",\"simple\":\"Mcdonald's\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-12-22\",\"postDate\":\"2013-12-22\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"mcdonald'sus\",\"name\":\"Mcdonald'S\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Restaurants\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142382,\"amount\":{\"amount\":2500,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":13,\"category\":\"Home Improvement\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Furniture Purchase\",\"simple\":\"Furniture 1\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-12-21\",\"postDate\":\"2013-12-21\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"furniture1us\",\"name\":\"Furniture 1\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Home Improvement\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142383,\"amount\":{\"amount\":1000,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Online Purchase\",\"simple\":\"Online \"},\"type\":\"PURCHASE\",\"subType\":\"ONLINE_PURCHASE\",\"isManual\":false,\"date\":\"2013-12-20\",\"postDate\":\"2013-12-20\",\"status\":\"POSTED\",\"accountId\":11618180},{\"CONTAINER\":\"creditCard\",\"id\":37142384,\"amount\":{\"amount\":10,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":24,\"category\":\"Service Charges\/Fees\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000009,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Service Charges\",\"simple\":\"Service Charge\"},\"type\":\"CHARGES_FEES\",\"subType\":\"SERVICE_CHARGE\",\"isManual\":false,\"date\":\"2013-12-19\",\"postDate\":\"2013-12-19\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"servicecareus\",\"name\":\"Service Care\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Service Charges\/Fees\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142385,\"amount\":{\"amount\":110.01,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":2,\"category\":\"Truck Expenses\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000003,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"SHELL OIL\",\"simple\":\"Shell\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-12-18\",\"postDate\":\"2013-12-18\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"shellus\",\"name\":\"Shell\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Automotive\/Fuel\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142386,\"amount\":{\"amount\":200,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":15,\"category\":\"Cable\/Satellite\/Telecom\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Telephone Bill Paid\",\"simple\":\"Telephone Jacks\"},\"type\":\"PAYMENT\",\"subType\":\"RECURRING_SUBSCRIPTION_PAYMENT\",\"isManual\":false,\"date\":\"2013-12-16\",\"postDate\":\"2013-12-16\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"telephonejacksus\",\"name\":\"Telephone Jacks\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Cable\/Satellite\/Telecom\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142387,\"amount\":{\"amount\":124.72,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"WAL-MART\",\"simple\":\"Walmart\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-12-15\",\"postDate\":\"2013-12-15\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"walmartus\",\"name\":\"Walmart\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Electronics\/General Merchandise\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142388,\"amount\":{\"amount\":200,\"currency\":\"USD\"},\"baseType\":\"CREDIT\",\"categoryType\":\"TRANSFER\",\"categoryId\":26,\"category\":\"Credit Card Payments\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000018,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Payment - Thank You\",\"simple\":\"Credit Card Payment\"},\"type\":\"PAYMENT\",\"subType\":\"CREDIT_CARD_PAYMENT\",\"isManual\":false,\"date\":\"2013-12-14\",\"postDate\":\"2013-12-14\",\"status\":\"POSTED\",\"accountId\":11618180},{\"CONTAINER\":\"creditCard\",\"id\":37142389,\"amount\":{\"amount\":101,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":23,\"category\":\"Travel\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"AIR VALET\",\"simple\":\"Air Valet\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-12-13\",\"postDate\":\"2013-12-13\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"airvaletus\",\"name\":\"Air Valet\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Travel\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142390,\"amount\":{\"amount\":180.89,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"AMAZON MKTPLACE PMTS\",\"simple\":\"Amazon\"},\"type\":\"PURCHASE\",\"subType\":\"ONLINE_PURCHASE\",\"isManual\":false,\"date\":\"2013-12-12\",\"postDate\":\"2013-12-12\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"amazonus\",\"name\":\"Amazon\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Electronics\/General Merchandise\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142391,\"amount\":{\"amount\":101.07,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":7,\"category\":\"Entertainment\/Recreation\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"BLOCKBUSTEREXPRESS\",\"simple\":\"Blockbusters\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-12-11\",\"postDate\":\"2013-12-11\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"blockbustersus\",\"name\":\"Blockbusters\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Entertainment\/Recreation\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142392,\"amount\":{\"amount\":20,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":22,\"category\":\"Restaurants\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"McDonalds\",\"simple\":\"Mcdonald's\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-12-10\",\"postDate\":\"2013-12-10\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"mcdonald'sus\",\"name\":\"Mcdonald'S\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Restaurants\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142393,\"amount\":{\"amount\":2500,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":13,\"category\":\"Home Improvement\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Furniture Purchase\",\"simple\":\"Furniture 1\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-12-09\",\"postDate\":\"2013-12-09\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"furniture1us\",\"name\":\"Furniture 1\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Home Improvement\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142394,\"amount\":{\"amount\":1000,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Online Purchase\",\"simple\":\"Online \"},\"type\":\"PURCHASE\",\"subType\":\"ONLINE_PURCHASE\",\"isManual\":false,\"date\":\"2013-12-08\",\"postDate\":\"2013-12-08\",\"status\":\"POSTED\",\"accountId\":11618180},{\"CONTAINER\":\"creditCard\",\"id\":37142395,\"amount\":{\"amount\":10,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":24,\"category\":\"Service Charges\/Fees\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000009,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Service Charges\",\"simple\":\"Service Charge\"},\"type\":\"CHARGES_FEES\",\"subType\":\"SERVICE_CHARGE\",\"isManual\":false,\"date\":\"2013-12-07\",\"postDate\":\"2013-12-07\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"servicecareus\",\"name\":\"Service Care\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Service Charges\/Fees\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142396,\"amount\":{\"amount\":110.01,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":2,\"category\":\"Truck Expenses\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000003,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"SHELL OIL\",\"simple\":\"Shell\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-12-06\",\"postDate\":\"2013-12-06\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"shellus\",\"name\":\"Shell\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Automotive\/Fuel\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142397,\"amount\":{\"amount\":200,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":15,\"category\":\"Cable\/Satellite\/Telecom\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Telephone Bill Paid\",\"simple\":\"Telephone Jacks\"},\"type\":\"PAYMENT\",\"subType\":\"RECURRING_SUBSCRIPTION_PAYMENT\",\"isManual\":false,\"date\":\"2013-12-05\",\"postDate\":\"2013-12-05\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"telephonejacksus\",\"name\":\"Telephone Jacks\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Cable\/Satellite\/Telecom\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142398,\"amount\":{\"amount\":124.72,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"WAL-MART\",\"simple\":\"Walmart\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-12-04\",\"postDate\":\"2013-12-04\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"walmartus\",\"name\":\"Walmart\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Electronics\/General Merchandise\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142399,\"amount\":{\"amount\":200,\"currency\":\"USD\"},\"baseType\":\"CREDIT\",\"categoryType\":\"TRANSFER\",\"categoryId\":26,\"category\":\"Credit Card Payments\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000018,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Payment - Thank You\",\"simple\":\"Credit Card Payment\"},\"type\":\"PAYMENT\",\"subType\":\"CREDIT_CARD_PAYMENT\",\"isManual\":false,\"date\":\"2013-12-03\",\"postDate\":\"2013-12-03\",\"status\":\"POSTED\",\"accountId\":11618180},{\"CONTAINER\":\"creditCard\",\"id\":37142400,\"amount\":{\"amount\":101,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":23,\"category\":\"Travel\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"AIR VALET\",\"simple\":\"Air Valet\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-12-02\",\"postDate\":\"2013-12-02\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"airvaletus\",\"name\":\"Air Valet\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Travel\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142401,\"amount\":{\"amount\":180.89,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"AMAZON MKTPLACE PMTS\",\"simple\":\"Amazon\"},\"type\":\"PURCHASE\",\"subType\":\"ONLINE_PURCHASE\",\"isManual\":false,\"date\":\"2013-12-01\",\"postDate\":\"2013-12-01\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"amazonus\",\"name\":\"Amazon\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Electronics\/General Merchandise\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142403,\"amount\":{\"amount\":20,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":22,\"category\":\"Restaurants\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"McDonalds\",\"simple\":\"Mcdonald's\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-11-30\",\"postDate\":\"2013-11-30\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"mcdonald'sus\",\"name\":\"Mcdonald'S\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Restaurants\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142402,\"amount\":{\"amount\":101.07,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":7,\"category\":\"Entertainment\/Recreation\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"BLOCKBUSTEREXPRESS\",\"simple\":\"Blockbusters\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-11-30\",\"postDate\":\"2013-11-30\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"blockbustersus\",\"name\":\"Blockbusters\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Entertainment\/Recreation\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142404,\"amount\":{\"amount\":2500,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":13,\"category\":\"Home Improvement\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Furniture Purchase\",\"simple\":\"Furniture 1\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-11-29\",\"postDate\":\"2013-11-29\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"furniture1us\",\"name\":\"Furniture 1\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Home Improvement\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142405,\"amount\":{\"amount\":1000,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Online Purchase\",\"simple\":\"Online \"},\"type\":\"PURCHASE\",\"subType\":\"ONLINE_PURCHASE\",\"isManual\":false,\"date\":\"2013-11-28\",\"postDate\":\"2013-11-28\",\"status\":\"POSTED\",\"accountId\":11618180},{\"CONTAINER\":\"creditCard\",\"id\":37142406,\"amount\":{\"amount\":10,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":24,\"category\":\"Service Charges\/Fees\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000009,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Service Charges\",\"simple\":\"Service Charge\"},\"type\":\"CHARGES_FEES\",\"subType\":\"SERVICE_CHARGE\",\"isManual\":false,\"date\":\"2013-11-27\",\"postDate\":\"2013-11-27\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"servicecareus\",\"name\":\"Service Care\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Service Charges\/Fees\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142407,\"amount\":{\"amount\":110.01,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":2,\"category\":\"Truck Expenses\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000003,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"SHELL OIL\",\"simple\":\"Shell\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-11-26\",\"postDate\":\"2013-11-26\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"shellus\",\"name\":\"Shell\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Automotive\/Fuel\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142408,\"amount\":{\"amount\":200,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":15,\"category\":\"Cable\/Satellite\/Telecom\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Telephone Bill Paid\",\"simple\":\"Telephone Jacks\"},\"type\":\"PAYMENT\",\"subType\":\"RECURRING_SUBSCRIPTION_PAYMENT\",\"isManual\":false,\"date\":\"2013-11-25\",\"postDate\":\"2013-11-25\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"telephonejacksus\",\"name\":\"Telephone Jacks\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Cable\/Satellite\/Telecom\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142409,\"amount\":{\"amount\":124.72,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"WAL-MART\",\"simple\":\"Walmart\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-11-24\",\"postDate\":\"2013-11-24\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"walmartus\",\"name\":\"Walmart\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Electronics\/General Merchandise\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142410,\"amount\":{\"amount\":200,\"currency\":\"USD\"},\"baseType\":\"CREDIT\",\"categoryType\":\"TRANSFER\",\"categoryId\":26,\"category\":\"Credit Card Payments\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000018,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Payment - Thank You\",\"simple\":\"Credit Card Payment\"},\"type\":\"PAYMENT\",\"subType\":\"CREDIT_CARD_PAYMENT\",\"isManual\":false,\"date\":\"2013-11-23\",\"postDate\":\"2013-11-23\",\"status\":\"POSTED\",\"accountId\":11618180},{\"CONTAINER\":\"creditCard\",\"id\":37142411,\"amount\":{\"amount\":101,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":23,\"category\":\"Travel\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"AIR VALET\",\"simple\":\"Air Valet\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-11-22\",\"postDate\":\"2013-11-22\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"airvaletus\",\"name\":\"Air Valet\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Travel\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142412,\"amount\":{\"amount\":180.89,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"AMAZON MKTPLACE PMTS\",\"simple\":\"Amazon\"},\"type\":\"PURCHASE\",\"subType\":\"ONLINE_PURCHASE\",\"isManual\":false,\"date\":\"2013-11-21\",\"postDate\":\"2013-11-21\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"amazonus\",\"name\":\"Amazon\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Electronics\/General Merchandise\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142413,\"amount\":{\"amount\":101.07,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":7,\"category\":\"Entertainment\/Recreation\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"BLOCKBUSTEREXPRESS\",\"simple\":\"Blockbusters\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-11-20\",\"postDate\":\"2013-11-20\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"blockbustersus\",\"name\":\"Blockbusters\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Entertainment\/Recreation\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142414,\"amount\":{\"amount\":20,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":22,\"category\":\"Restaurants\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"McDonalds\",\"simple\":\"Mcdonald's\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-11-19\",\"postDate\":\"2013-11-19\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"mcdonald'sus\",\"name\":\"Mcdonald'S\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Restaurants\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142415,\"amount\":{\"amount\":2500,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":13,\"category\":\"Home Improvement\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Furniture Purchase\",\"simple\":\"Furniture 1\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-11-18\",\"postDate\":\"2013-11-18\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"furniture1us\",\"name\":\"Furniture 1\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Home Improvement\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142416,\"amount\":{\"amount\":1000,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Online Purchase\",\"simple\":\"Online \"},\"type\":\"PURCHASE\",\"subType\":\"ONLINE_PURCHASE\",\"isManual\":false,\"date\":\"2013-11-16\",\"postDate\":\"2013-11-16\",\"status\":\"POSTED\",\"accountId\":11618180},{\"CONTAINER\":\"creditCard\",\"id\":37142417,\"amount\":{\"amount\":10,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":24,\"category\":\"Service Charges\/Fees\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000009,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Service Charges\",\"simple\":\"Service Charge\"},\"type\":\"CHARGES_FEES\",\"subType\":\"SERVICE_CHARGE\",\"isManual\":false,\"date\":\"2013-11-15\",\"postDate\":\"2013-11-15\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"servicecareus\",\"name\":\"Service Care\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Service Charges\/Fees\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142418,\"amount\":{\"amount\":110.01,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":2,\"category\":\"Truck Expenses\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000003,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"SHELL OIL\",\"simple\":\"Shell\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-11-14\",\"postDate\":\"2013-11-14\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"shellus\",\"name\":\"Shell\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Automotive\/Fuel\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142419,\"amount\":{\"amount\":200,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":15,\"category\":\"Cable\/Satellite\/Telecom\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Telephone Bill Paid\",\"simple\":\"Telephone Jacks\"},\"type\":\"PAYMENT\",\"subType\":\"RECURRING_SUBSCRIPTION_PAYMENT\",\"isManual\":false,\"date\":\"2013-11-13\",\"postDate\":\"2013-11-13\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"telephonejacksus\",\"name\":\"Telephone Jacks\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Cable\/Satellite\/Telecom\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142420,\"amount\":{\"amount\":124.72,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"WAL-MART\",\"simple\":\"Walmart\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-11-12\",\"postDate\":\"2013-11-12\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"walmartus\",\"name\":\"Walmart\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Electronics\/General Merchandise\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142421,\"amount\":{\"amount\":200,\"currency\":\"USD\"},\"baseType\":\"CREDIT\",\"categoryType\":\"TRANSFER\",\"categoryId\":26,\"category\":\"Credit Card Payments\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000018,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Payment - Thank You\",\"simple\":\"Credit Card Payment\"},\"type\":\"PAYMENT\",\"subType\":\"CREDIT_CARD_PAYMENT\",\"isManual\":false,\"date\":\"2013-11-11\",\"postDate\":\"2013-11-11\",\"status\":\"POSTED\",\"accountId\":11618180},{\"CONTAINER\":\"creditCard\",\"id\":37142422,\"amount\":{\"amount\":101,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":23,\"category\":\"Travel\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"AIR VALET\",\"simple\":\"Air Valet\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-11-10\",\"postDate\":\"2013-11-10\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"airvaletus\",\"name\":\"Air Valet\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Travel\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142423,\"amount\":{\"amount\":180.89,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"AMAZON MKTPLACE PMTS\",\"simple\":\"Amazon\"},\"type\":\"PURCHASE\",\"subType\":\"ONLINE_PURCHASE\",\"isManual\":false,\"date\":\"2013-11-09\",\"postDate\":\"2013-11-09\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"amazonus\",\"name\":\"Amazon\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Electronics\/General Merchandise\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142424,\"amount\":{\"amount\":101.07,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":7,\"category\":\"Entertainment\/Recreation\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"BLOCKBUSTEREXPRESS\",\"simple\":\"Blockbusters\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-11-08\",\"postDate\":\"2013-11-08\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"blockbustersus\",\"name\":\"Blockbusters\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Entertainment\/Recreation\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142425,\"amount\":{\"amount\":20,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":22,\"category\":\"Restaurants\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"McDonalds\",\"simple\":\"Mcdonald's\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-11-07\",\"postDate\":\"2013-11-07\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"mcdonald'sus\",\"name\":\"Mcdonald'S\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Restaurants\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142426,\"amount\":{\"amount\":2500,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":13,\"category\":\"Home Improvement\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Furniture Purchase\",\"simple\":\"Furniture 1\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-11-06\",\"postDate\":\"2013-11-06\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"furniture1us\",\"name\":\"Furniture 1\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Home Improvement\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142427,\"amount\":{\"amount\":1000,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Online Purchase\",\"simple\":\"Online \"},\"type\":\"PURCHASE\",\"subType\":\"ONLINE_PURCHASE\",\"isManual\":false,\"date\":\"2013-11-05\",\"postDate\":\"2013-11-05\",\"status\":\"POSTED\",\"accountId\":11618180},{\"CONTAINER\":\"creditCard\",\"id\":37142428,\"amount\":{\"amount\":10,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":24,\"category\":\"Service Charges\/Fees\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000009,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Service Charges\",\"simple\":\"Service Charge\"},\"type\":\"CHARGES_FEES\",\"subType\":\"SERVICE_CHARGE\",\"isManual\":false,\"date\":\"2013-11-04\",\"postDate\":\"2013-11-04\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"servicecareus\",\"name\":\"Service Care\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Service Charges\/Fees\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142429,\"amount\":{\"amount\":110.01,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":2,\"category\":\"Truck Expenses\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000003,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"SHELL OIL\",\"simple\":\"Shell\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-11-03\",\"postDate\":\"2013-11-03\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"shellus\",\"name\":\"Shell\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Automotive\/Fuel\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142430,\"amount\":{\"amount\":200,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":15,\"category\":\"Cable\/Satellite\/Telecom\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Telephone Bill Paid\",\"simple\":\"Telephone Jacks\"},\"type\":\"PAYMENT\",\"subType\":\"RECURRING_SUBSCRIPTION_PAYMENT\",\"isManual\":false,\"date\":\"2013-11-02\",\"postDate\":\"2013-11-02\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"telephonejacksus\",\"name\":\"Telephone Jacks\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Cable\/Satellite\/Telecom\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142431,\"amount\":{\"amount\":124.72,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"WAL-MART\",\"simple\":\"Walmart\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-11-01\",\"postDate\":\"2013-11-01\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"walmartus\",\"name\":\"Walmart\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Electronics\/General Merchandise\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142432,\"amount\":{\"amount\":200,\"currency\":\"USD\"},\"baseType\":\"CREDIT\",\"categoryType\":\"TRANSFER\",\"categoryId\":26,\"category\":\"Credit Card Payments\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000018,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Payment - Thank You\",\"simple\":\"Credit Card Payment\"},\"type\":\"PAYMENT\",\"subType\":\"CREDIT_CARD_PAYMENT\",\"isManual\":false,\"date\":\"2013-10-31\",\"postDate\":\"2013-10-31\",\"status\":\"POSTED\",\"accountId\":11618180},{\"CONTAINER\":\"creditCard\",\"id\":37142433,\"amount\":{\"amount\":101,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":23,\"category\":\"Travel\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"AIR VALET\",\"simple\":\"Air Valet\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-10-30\",\"postDate\":\"2013-10-30\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"airvaletus\",\"name\":\"Air Valet\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Travel\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142434,\"amount\":{\"amount\":180.89,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"AMAZON MKTPLACE PMTS\",\"simple\":\"Amazon\"},\"type\":\"PURCHASE\",\"subType\":\"ONLINE_PURCHASE\",\"isManual\":false,\"date\":\"2013-10-29\",\"postDate\":\"2013-10-29\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"amazonus\",\"name\":\"Amazon\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Electronics\/General Merchandise\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142435,\"amount\":{\"amount\":101.07,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":7,\"category\":\"Entertainment\/Recreation\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"BLOCKBUSTEREXPRESS\",\"simple\":\"Blockbusters\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-10-28\",\"postDate\":\"2013-10-28\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"blockbustersus\",\"name\":\"Blockbusters\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Entertainment\/Recreation\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142436,\"amount\":{\"amount\":20,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":22,\"category\":\"Restaurants\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"McDonalds\",\"simple\":\"Mcdonald's\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-10-27\",\"postDate\":\"2013-10-27\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"mcdonald'sus\",\"name\":\"Mcdonald'S\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Restaurants\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142437,\"amount\":{\"amount\":2500,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":13,\"category\":\"Home Improvement\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Furniture Purchase\",\"simple\":\"Furniture 1\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-10-26\",\"postDate\":\"2013-10-26\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"furniture1us\",\"name\":\"Furniture 1\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Home Improvement\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142438,\"amount\":{\"amount\":1000,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Online Purchase\",\"simple\":\"Online \"},\"type\":\"PURCHASE\",\"subType\":\"ONLINE_PURCHASE\",\"isManual\":false,\"date\":\"2013-10-25\",\"postDate\":\"2013-10-25\",\"status\":\"POSTED\",\"accountId\":11618180},{\"CONTAINER\":\"creditCard\",\"id\":37142439,\"amount\":{\"amount\":10,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":24,\"category\":\"Service Charges\/Fees\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000009,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Service Charges\",\"simple\":\"Service Charge\"},\"type\":\"CHARGES_FEES\",\"subType\":\"SERVICE_CHARGE\",\"isManual\":false,\"date\":\"2013-10-24\",\"postDate\":\"2013-10-24\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"servicecareus\",\"name\":\"Service Care\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Service Charges\/Fees\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142440,\"amount\":{\"amount\":110.01,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":2,\"category\":\"Truck Expenses\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000003,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"SHELL OIL\",\"simple\":\"Shell\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-10-23\",\"postDate\":\"2013-10-23\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"shellus\",\"name\":\"Shell\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Automotive\/Fuel\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142441,\"amount\":{\"amount\":200,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":15,\"category\":\"Cable\/Satellite\/Telecom\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Telephone Bill Paid\",\"simple\":\"Telephone Jacks\"},\"type\":\"PAYMENT\",\"subType\":\"RECURRING_SUBSCRIPTION_PAYMENT\",\"isManual\":false,\"date\":\"2013-10-22\",\"postDate\":\"2013-10-22\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"telephonejacksus\",\"name\":\"Telephone Jacks\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Cable\/Satellite\/Telecom\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142442,\"amount\":{\"amount\":124.72,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":43,\"category\":\"Electronics\/General Merchandise\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000004,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"WAL-MART\",\"simple\":\"Walmart\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-10-21\",\"postDate\":\"2013-10-21\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"walmartus\",\"name\":\"Walmart\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Electronics\/General Merchandise\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}},{\"CONTAINER\":\"creditCard\",\"id\":37142443,\"amount\":{\"amount\":200,\"currency\":\"USD\"},\"baseType\":\"CREDIT\",\"categoryType\":\"TRANSFER\",\"categoryId\":26,\"category\":\"Credit Card Payments\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000018,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"Payment - Thank You\",\"simple\":\"Credit Card Payment\"},\"type\":\"PAYMENT\",\"subType\":\"CREDIT_CARD_PAYMENT\",\"isManual\":false,\"date\":\"2013-10-20\",\"postDate\":\"2013-10-20\",\"status\":\"POSTED\",\"accountId\":11618180},{\"CONTAINER\":\"creditCard\",\"id\":37142444,\"amount\":{\"amount\":101,\"currency\":\"USD\"},\"baseType\":\"DEBIT\",\"categoryType\":\"EXPENSE\",\"categoryId\":23,\"category\":\"Travel\",\"categorySource\":\"SYSTEM\",\"highLevelCategoryId\":10000011,\"createdDate\":\"2018-05-15T20:30:22Z\",\"lastUpdated\":\"2018-05-15T20:30:22Z\",\"description\":{\"original\":\"AIR VALET\",\"simple\":\"Air Valet\"},\"type\":\"PURCHASE\",\"subType\":\"PURCHASE\",\"isManual\":false,\"date\":\"2013-10-19\",\"postDate\":\"2013-10-19\",\"status\":\"POSTED\",\"accountId\":11618180,\"merchant\":{\"id\":\"airvaletus\",\"name\":\"Air Valet\",\"source\":\"FACTUAL\",\"categoryLabel\":[\"Travel\"],\"address\":{\"country\":\"US\"},\"coordinates\":{\"latitude\":0.0,\"longitude\":0.0}}}]}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "34ae593f-4f01-456f-bb98-8beaa67d74a9",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe Transaction service is used to get a list of transactions for a user.\r\n\r\nBy default, this service returns the last 30 days of transactions from today's date.\r\n\r\nThe search is performed on these attributes: original, consumer, and simple descriptions.\r\n\r\nValues for categoryId parameter can be fetched from get transaction category list service.\r\n\r\nThe categoryId is used to filter transactions based on system-defined category as well as user-defined category.\r\n\r\nUser-defined categoryIds should be provided in the filter with the prefix \"U\". E.g. U10002 \r\n\r\nThe skip and top parameters are useful for paginating transactions (i.e., to fetch small transaction payloads for performance reasons)\r\n\r\nDouble quotes in the merchant name will be prefixed by backslashes (\\) in the response, e.g. Toys \\\"R\\\" Us.\r\n\r\nNote 1: Category input is deprecated and replaced with categoryId. \r\n\r\nNote 2: TDE is made available for bank and card accounts and for the US market only.The address field in the response is available only when the TDE key is turned on. \r\n\r\naccountReconType input parameter is relevant for investment accounts, provided the reconciliation feature is turned on.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/transactions?fromDate=2013-01-01",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "fromDate",
                                "value": "2013-01-01"
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "63378",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 23 May 2018 21:21:14 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "a1527110473865d4v26i000000NLqYG",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/ysl",
                            "secure": true,
                            "value": "TFdCarXrkemscJAK0siBgAgTvRqYq_9ljLFl6SlJ.hpdl-r306-25",
                            "name": "JSESSIONID"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/",
                            "secure": true,
                            "value": "J-jzNUYyJ2TMfTmyHfxnU0qQ9AYfNlPRuIjdPSpC.hpdl-r306-25",
                            "name": "JSESSIONID"
                        }
                    ],
                    "request": "227b3064-f9b8-459e-be48-b096e7317c84",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Transactions successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}\nif (responseBody == \"{}\") {\n    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");\n}\n\n\/*\nFASTLINK:\n<form action=\"https:\/\/node.developer.yodlee.com\/authenticate\/restserver\/\" method=\"POST\">\n  <input type=\"text\" name=\"app\" value=\"10003600\" \/>\n  <input type=\"text\" name=\"rsession\" \/>\n  <input type=\"text\" name=\"token\" \/>\n  <input type=\"text\" name=\"redirectReq\" value=\"true\"\/>\n  <input type=\"submit\" name=\"submit\" \/>\n<\/form>\n*\/",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "286f0ca5-861b-48a2-8ef3-54a2d823874b",
            "name": "User Logout",
            "url": "{{host}}\/user\/logout",
            "description": "Implementation Notes:\r\n\r\nThe user logout service allows the user to log out of the application.\r\n\r\nThe service does not return a response body. The HTTP response code is 204 (Success with no content).",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                },
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "",
                            "if (responseCode.code != 204) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 204) {",
                            "    console.log(\"User Logout successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "66058555-3f3b-4a53-93db-f4b7492ea712",
            "responses": [
                {
                    "id": "381376b9-9425-47dc-9b96-fc726209bfbe",
                    "name": "User Logout",
                    "status": "No Content",
                    "mime": "",
                    "language": "json",
                    "text": "",
                    "responseCode": {
                        "code": 204,
                        "name": "No Content",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "2ecb4dc3-9c7e-4813-bcee-d41b6b631087",
                        "method": "POST",
                        "description": "Implementation Notes:\r\n\r\nThe user logout service allows the user to log out of the application.\r\n\r\nThe service does not return a response body. The HTTP response code is 204 (Success with no content).",
                        "headers": "Content-Type: application\/json\nAuthorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/user\/logout",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Cache-Control",
                            "value": "no-store, no-cache",
                            "name": "Cache-Control",
                            "description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 23 May 2018 20:53:30 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "r1527108810258o4u27Y000000NLCYo",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/ysl",
                            "secure": true,
                            "value": "TFdCarXrkemscJAK0siBgAgTvRqYq_9ljLFl6SlJ.hpdl-r306-26",
                            "name": "JSESSIONID"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/",
                            "secure": true,
                            "value": "J-jzNUYyJ2TMfTmyHfxnU0qQ9AYfNlPRuIjdPSpC.hpdl-r306-25",
                            "name": "JSESSIONID"
                        }
                    ],
                    "request": "286f0ca5-861b-48a2-8ef3-54a2d823874b",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(204);\n});\n\nif (responseCode.code != 204) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 204) {\n    console.log(\"User Logout successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Content-Type: application\/json\nAuthorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "2f43ff4c-c62d-44b5-ac48-6ae3ebb81a0e",
            "name": "Get Transaction Category List",
            "url": "{{host}}\/transactions\/categories",
            "description": "Implementation Notes:\r\n\r\nThe categories service returns the list of available transaction categories.\r\n\r\nHigh level category is returned in the response only if it is opted by the customer.\r\n\r\nWhen invoked by passing the cobrand session, this service returns the supported transaction categories at the cobrand level. \r\n\r\nWhen invoked by passing the cobrand session and the user session, this service returns the transaction categories along with user-defined categories.\r\n\r\nDouble quotes in the user-defined category name will be prefixed by backslashes (\\) in the response, e.g. Toys \\\"R\\\" Us.\r\n\r\nSource and id are the primary attributes of the category entity.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Transaction Category List successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "98a0bf62-9a64-49df-a143-22c0213676cd",
            "responses": [
                {
                    "id": "19cc1223-122f-4ce4-92a5-69da1b1ef194",
                    "name": "Get Transaction Category List",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"transactionCategory\":[{\"id\":1,\"source\":\"SYSTEM\",\"category\":\"Uncategorized\",\"type\":\"UNCATEGORIZE\",\"highLevelCategoryId\":10000017,\"highLevelCategoryName\":\"Uncategorized\"},{\"id\":2,\"source\":\"SYSTEM\",\"category\":\"Automotive\/Fuel\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000003,\"highLevelCategoryName\":\"Automotive Expenses\"},{\"id\":3,\"source\":\"SYSTEM\",\"category\":\"Charitable Giving\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000001,\"highLevelCategoryName\":\"Giving\"},{\"id\":6,\"source\":\"SYSTEM\",\"category\":\"Education\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000010,\"highLevelCategoryName\":\"Personal\/Family Expenses\"},{\"id\":7,\"source\":\"SYSTEM\",\"category\":\"Entertainment\/Recreation\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000011,\"highLevelCategoryName\":\"Travel\/Entertainment\"},{\"id\":9,\"source\":\"SYSTEM\",\"category\":\"Gifts\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000001,\"highLevelCategoryName\":\"Giving\"},{\"id\":10,\"source\":\"SYSTEM\",\"category\":\"Groceries\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000004,\"highLevelCategoryName\":\"Home\/Utilities\"},{\"id\":11,\"source\":\"SYSTEM\",\"category\":\"Healthcare\/Medical\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000006,\"highLevelCategoryName\":\"Healthcare\"},{\"id\":13,\"source\":\"SYSTEM\",\"category\":\"Home Improvement\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000004,\"highLevelCategoryName\":\"Home\/Utilities\"},{\"id\":14,\"source\":\"SYSTEM\",\"category\":\"Insurance\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000020,\"highLevelCategoryName\":\"Insurance\"},{\"id\":15,\"source\":\"SYSTEM\",\"category\":\"Cable\/Satellite\/Telecom\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000004,\"highLevelCategoryName\":\"Home\/Utilities\"},{\"id\":16,\"source\":\"SYSTEM\",\"category\":\"Services\/Supplies\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000007,\"highLevelCategoryName\":\"Office Expenses\"},{\"id\":17,\"source\":\"SYSTEM\",\"category\":\"Loans\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000004,\"highLevelCategoryName\":\"Home\/Utilities\"},{\"id\":18,\"source\":\"SYSTEM\",\"category\":\"Mortgage\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000004,\"highLevelCategoryName\":\"Home\/Utilities\"},{\"id\":19,\"source\":\"SYSTEM\",\"category\":\"Other Expenses\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000009,\"highLevelCategoryName\":\"Miscellaneous Expenses\"},{\"id\":20,\"source\":\"SYSTEM\",\"category\":\"Personal\/Family\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000010,\"highLevelCategoryName\":\"Personal\/Family Expenses\"},{\"id\":21,\"source\":\"SYSTEM\",\"category\":\"Rent\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000004,\"highLevelCategoryName\":\"Home\/Utilities\"},{\"id\":22,\"source\":\"SYSTEM\",\"category\":\"Restaurants\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000011,\"highLevelCategoryName\":\"Travel\/Entertainment\"},{\"id\":23,\"source\":\"SYSTEM\",\"category\":\"Travel\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000011,\"highLevelCategoryName\":\"Travel\/Entertainment\"},{\"id\":24,\"source\":\"SYSTEM\",\"category\":\"Service Charges\/Fees\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000009,\"highLevelCategoryName\":\"Miscellaneous Expenses\"},{\"id\":25,\"source\":\"SYSTEM\",\"category\":\"ATM\/Cash Withdrawals\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000010,\"highLevelCategoryName\":\"Personal\/Family Expenses\"},{\"id\":26,\"source\":\"SYSTEM\",\"category\":\"Credit Card Payments\",\"type\":\"TRANSFER\",\"highLevelCategoryId\":10000018,\"highLevelCategoryName\":\"Credit Card Payment\"},{\"id\":27,\"source\":\"SYSTEM\",\"category\":\"Deposits\",\"type\":\"INCOME\",\"highLevelCategoryId\":10000012,\"highLevelCategoryName\":\"Income\"},{\"id\":28,\"source\":\"SYSTEM\",\"category\":\"Transfers\",\"type\":\"TRANSFER\",\"highLevelCategoryId\":10000015,\"highLevelCategoryName\":\"Transfers\"},{\"id\":29,\"source\":\"SYSTEM\",\"category\":\"Salary\/Regular Income\",\"type\":\"INCOME\",\"highLevelCategoryId\":10000012,\"highLevelCategoryName\":\"Income\"},{\"id\":30,\"source\":\"SYSTEM\",\"category\":\"Investment\/Retirement Income\",\"type\":\"INCOME\",\"highLevelCategoryId\":10000012,\"highLevelCategoryName\":\"Income\"},{\"id\":32,\"source\":\"SYSTEM\",\"category\":\"Other Income\",\"type\":\"INCOME\",\"highLevelCategoryId\":10000012,\"highLevelCategoryName\":\"Income\"},{\"id\":33,\"source\":\"SYSTEM\",\"category\":\"Check Payment\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000009,\"highLevelCategoryName\":\"Miscellaneous Expenses\"},{\"id\":36,\"source\":\"SYSTEM\",\"category\":\"Securities Trades\",\"type\":\"TRANSFER\",\"highLevelCategoryId\":10000015,\"highLevelCategoryName\":\"Transfers\"},{\"id\":37,\"source\":\"SYSTEM\",\"category\":\"Taxes\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000008,\"highLevelCategoryName\":\"Taxes\"},{\"id\":39,\"source\":\"SYSTEM\",\"category\":\"Utilities\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000004,\"highLevelCategoryName\":\"Home\/Utilities\"},{\"id\":40,\"source\":\"SYSTEM\",\"category\":\"Savings\",\"type\":\"TRANSFER\",\"highLevelCategoryId\":10000015,\"highLevelCategoryName\":\"Transfers\"},{\"id\":41,\"source\":\"SYSTEM\",\"category\":\"Retirement Contributions\",\"type\":\"DEFERRED_COMPENSATION\",\"highLevelCategoryId\":10000016,\"highLevelCategoryName\":\"Retirement\"},{\"id\":42,\"source\":\"SYSTEM\",\"category\":\"Pets\/Pet Care\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000004,\"highLevelCategoryName\":\"Home\/Utilities\"},{\"id\":43,\"source\":\"SYSTEM\",\"category\":\"Electronics\/General Merchandise\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000004,\"highLevelCategoryName\":\"Home\/Utilities\"},{\"id\":45,\"source\":\"SYSTEM\",\"category\":\"Office Expenses\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000007,\"highLevelCategoryName\":\"Office Expenses\"},{\"id\":92,\"source\":\"SYSTEM\",\"category\":\"Sales\/Services Income\",\"type\":\"INCOME\",\"highLevelCategoryId\":10000012,\"highLevelCategoryName\":\"Income\"},{\"id\":96,\"source\":\"SYSTEM\",\"category\":\"Interest Income\",\"type\":\"INCOME\",\"highLevelCategoryId\":10000012,\"highLevelCategoryName\":\"Income\"},{\"id\":104,\"source\":\"SYSTEM\",\"category\":\"Postage\/Shipping\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000007,\"highLevelCategoryName\":\"Office Expenses\"},{\"id\":108,\"source\":\"SYSTEM\",\"category\":\"Subscriptions\/Renewals\",\"type\":\"EXPENSE\",\"highLevelCategoryId\":10000010,\"highLevelCategoryName\":\"Personal\/Family Expenses\"},{\"id\":114,\"source\":\"SYSTEM\",\"category\":\"Expense Reimbursement\",\"type\":\"INCOME\",\"highLevelCategoryId\":10000019,\"highLevelCategoryName\":\"Refunds\/Reimbursements\"},{\"id\":225,\"source\":\"SYSTEM\",\"category\":\"Rewards\",\"type\":\"INCOME\",\"highLevelCategoryId\":10000012,\"highLevelCategoryName\":\"Income\"},{\"id\":227,\"source\":\"SYSTEM\",\"category\":\"Refunds\/Adjustments\",\"type\":\"INCOME\",\"highLevelCategoryId\":10000019,\"highLevelCategoryName\":\"Refunds\/Reimbursements\"}]}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "e62bc868-13b6-4391-bbae-27479c765c12",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe categories service returns the list of available transaction categories.\r\n\r\nHigh level category is returned in the response only if it is opted by the customer.\r\n\r\nWhen invoked by passing the cobrand session, this service returns the supported transaction categories at the cobrand level. \r\n\r\nWhen invoked by passing the cobrand session and the user session, this service returns the transaction categories along with user-defined categories.\r\n\r\nDouble quotes in the user-defined category name will be prefixed by backslashes (\\) in the response, e.g. Toys \\\"R\\\" Us.\r\n\r\nSource and id are the primary attributes of the category entity.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/transactions\/categories",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "6303",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 23 May 2018 21:12:50 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "i1527109969976b4W27K000000NLtYA",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/ysl",
                            "secure": true,
                            "value": "TFdCarXrkemscJAK0siBgAgTvRqYq_9ljLFl6SlJ.hpdl-r306-26",
                            "name": "JSESSIONID"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/",
                            "secure": true,
                            "value": "J-jzNUYyJ2TMfTmyHfxnU0qQ9AYfNlPRuIjdPSpC.hpdl-r306-25",
                            "name": "JSESSIONID"
                        }
                    ],
                    "request": "2f43ff4c-c62d-44b5-ac48-6ae3ebb81a0e",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Transaction Category List successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "302fe909-afeb-4215-ac6c-e84041dd202d",
            "name": "Add Manual Account",
            "url": "{{host}}\/accounts",
            "description": "Implementation Notes:\r\n\r\nThe add account service is used to add manual accounts.\r\n\r\nThe response of add account service includes the account name, account number and Yodlee generated account id.\r\n\r\nAll manual accounts added will be included as part of networth calculation by default.\r\n\r\nAdd manual account support is available for bank, card, investment, insurance, loan and bills container only.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(201);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 201) {",
                            "    console.log(\"Add Manual Account successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "fb0af4be-ff32-4bf6-afbd-5652a4e6ca51",
            "responses": [
                {
                    "id": "d68e03ee-40f7-41ea-8908-358b939a85ef",
                    "name": "Add Manual Account",
                    "status": "Created",
                    "mime": "",
                    "language": "json",
                    "text": "{\"account\":[{\"accountName\":\"BNP Account\",\"id\":37252304,\"accountNumber\":\"1233\"}]}",
                    "responseCode": {
                        "code": 201,
                        "name": "Created",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "9e694e86-8b77-4639-931d-0954ae15faa2",
                        "method": "POST",
                        "description": "Implementation Notes:\r\n\r\nThe add account service is used to add manual accounts.\r\n\r\nThe response of add account service includes the account name, account number and Yodlee generated account id.\r\n\r\nAll manual accounts added will be included as part of networth calculation by default.\r\n\r\nAdd manual account support is available for bank, card, investment, insurance, loan and bills container only.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "{\r\n\"account\": {\r\n         \"accountType\": \"BROKERAGE_CASH\",\r\n         \"accountName\": \"BNP Account\",\r\n         \"nickname\": \"Flood Cash\",\r\n         \"accountNumber\": \"1233\",\r\n         \"balance\":{\r\n            \"amount\": 133769,\r\n            \"currency\": \"USD\"\r\n           },\r\n         \"includeInNetWorth\": \"TRUE\",\r\n         \"memo\": \"This is an investment account\"\r\n      }\r\n}",
                        "url": "{{host}}\/accounts",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            },
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "80",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 30 May 2018 22:24:20 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "w1527719060271t28H106u000000NLGYd",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "302fe909-afeb-4215-ac6c-e84041dd202d",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(201);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 201) {\n    console.log(\"Add Manual Account successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "{\r\n\"account\": {\r\n         \"accountType\": \"BROKERAGE_CASH\",\r\n         \"accountName\": \"BNP Account\",\r\n         \"nickname\": \"Flood Cash\",\r\n         \"accountNumber\": \"1233\",\r\n         \"balance\":{\r\n            \"amount\": 133769,\r\n            \"currency\": \"USD\"\r\n           },\r\n         \"includeInNetWorth\": \"TRUE\",\r\n         \"memo\": \"This is an investment account\"\r\n      }\r\n}",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "3eb72720-f097-493e-8370-66d91362743b",
            "name": "Update User Details",
            "url": "{{host}}\/user",
            "description": "Implementation Notes:\r\n\r\nThe update user details service is used to update user details like name, address, currency preference, etc. You cannot update the username.\r\n\r\nCurrency provided in the input will be respected in the derived services and the amount fields in the response will be provided in the preferred currency.\r\n\r\nThe HTTP response code is 204 (Success without content).",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                },
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "",
                            "if (responseCode.code != 204) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 204) {",
                            "    console.log(\"Update User Details successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Internal Core Error has occurred\") {",
                            "    console.log(\"An internal core error has ocurred!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "66058555-3f3b-4a53-93db-f4b7492ea712",
            "responses": [
                {
                    "id": "bb9b16d5-2326-4d7d-871e-c57b31eee916",
                    "name": "Update User Details",
                    "status": "No Content",
                    "mime": "",
                    "language": "json",
                    "text": "",
                    "responseCode": {
                        "code": 204,
                        "name": "No Content",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "695b38af-a685-492b-9866-da6bd68e58bc",
                        "method": "PUT",
                        "description": "Implementation Notes:\r\n\r\nThe update user details service is used to update user details like name, address, currency preference, etc. You cannot update the username.\r\n\r\nCurrency provided in the input will be respected in the derived services and the amount fields in the response will be provided in the preferred currency.\r\n\r\nThe HTTP response code is 204 (Success without content).",
                        "headers": "Content-Type: application\/json\nAuthorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "{\r\n    \"user\":{\r\n        \"email\":\"corbin1@yodlee.com\",\r\n        \"name\":{\r\n            \"first\":\"Corbin\",\r\n            \"middle\":\"Middle\",\r\n            \"last\":\"Last\"\r\n        },\r\n        \"address\":{\r\n            \"address1\":\"200\",\r\n            \"address2\":\"200\",\r\n            \"state\":\"CA\",\r\n            \"city\":\"Salinas\",\r\n            \"zip\":\"93901\",\r\n            \"country\":\"US\"\r\n        },\r\n        \"preferences\":{\r\n            \"currency\":\"USD\",\r\n            \"timeZone\":\"PST\",\r\n            \"dateFormat\":\"MM\/dd\/yyyy\",\r\n            \"locale\":\"en_US\"\r\n        }\r\n    }\r\n}",
                        "url": "{{host}}\/user",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 30 May 2018 22:14:20 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "F1527718459751V28U106S000000NLlYf",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "3eb72720-f097-493e-8370-66d91362743b",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(204);\n});\n\nif (responseCode.code != 204) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 204) {\n    console.log(\"Update User Details successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Internal Core Error has occurred\") {\n    console.log(\"An internal core error has ocurred!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "{\r\n    \"user\":{\r\n        \"email\":\"ironman@avengers.com\",\r\n        \"name\":{\r\n            \"first\":\"Apoorv\",\r\n            \"middle\":\"XYZ\",\r\n            \"last\":\"ABC\"\r\n        },\r\n        \"address\":{\r\n            \"address1\":\"200\",\r\n            \"address2\":\"200\",\r\n            \"state\":\"CA\",\r\n            \"city\":\"Salinas\",\r\n            \"zip\":\"93901\",\r\n            \"country\":\"US\"\r\n        },\r\n        \"preferences\":{\r\n            \"currency\":\"USD\",\r\n            \"timeZone\":\"PST\",\r\n            \"dateFormat\":\"MM\/dd\/yyyy\",\r\n            \"locale\":\"en_US\"\r\n        }\r\n    }\r\n}",
            "headers": "Content-Type: application\/json\nAuthorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "401c8586-0686-407c-b84c-580d789b0a12",
            "name": "Delete Document*",
            "url": "{{host}}\/documents\/123456",
            "description": "Implementation Notes:\r\n\r\nThe delete document service allows the consumer to delete a document. The deleted document will not be returned in the get documents API. The HTTP response code is 204 (success without content).\r\n\r\nDocuments can be deleted only if the document related dataset attributes are subscribed.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "",
                            "if (responseCode.code != 204) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 204) {",
                            "    console.log(\"Download A Document successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}",
                            "if (responseBody == \"{}\") {",
                            "    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "675cebfb-ee48-4694-85ad-0c3508ad3665",
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(204);\n});\n\nif (responseCode.code != 204) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 204) {\n    console.log(\"Download A Document successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}\nif (responseBody == \"{}\") {\n    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "4b64da32-a0a7-4036-9252-52e98c253b0c",
            "name": "Delete Category",
            "url": "{{host}}\/transactions\/categories\/10005651",
            "description": "Implementation Notes:\r\n\r\nThe delete transaction categories service is used to delete the given user-defined category.\r\n\r\nThe HTTP response code is 204 (Success without content).",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "",
                            "if (responseCode.code != 204) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 204) {",
                            "    console.log(\"Delete Category successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "98a0bf62-9a64-49df-a143-22c0213676cd",
            "responses": [
                {
                    "id": "25a70e3e-88d4-4c87-9f3b-fe51aa7475e2",
                    "name": "Delete Category",
                    "status": "No Content",
                    "mime": "",
                    "language": "json",
                    "text": "",
                    "responseCode": {
                        "code": 204,
                        "name": "No Content",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "151cd622-8b1f-4c90-aa0a-b728a798ee73",
                        "method": "DELETE",
                        "description": "Implementation Notes:\r\n\r\nThe delete transaction categories service is used to delete the given user-defined category.\r\n\r\nThe HTTP response code is 204 (Success without content).",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/transactions\/categories\/10005651",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Cache-Control",
                            "value": "no-store, no-cache",
                            "name": "Cache-Control",
                            "description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 05 Jun 2018 17:27:35 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
                        },
                        {
                            "key": "Set-Cookie",
                            "value": "JSESSIONID=Xu7WeZLoK7VKiDYIvDj_gB7MRUVAiGr6TJE9ZNiD.hpdl-r306-25; path=\/ysl; secure; HttpOnly",
                            "name": "Set-Cookie",
                            "description": "an HTTP cookie"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "J1528219654557m4O26y000000NLmYu",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/ysl",
                            "secure": true,
                            "value": "Xu7WeZLoK7VKiDYIvDj_gB7MRUVAiGr6TJE9ZNiD.hpdl-r306-25",
                            "name": "JSESSIONID"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/",
                            "secure": true,
                            "value": "J-jzNUYyJ2TMfTmyHfxnU0qQ9AYfNlPRuIjdPSpC.hpdl-r306-25",
                            "name": "JSESSIONID"
                        }
                    ],
                    "request": "4b64da32-a0a7-4036-9252-52e98c253b0c",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(204);\n});\n\nif (responseCode.code != 204) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 204) {\n    console.log(\"Delete Category successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "5132079a-4f03-41cc-aba2-f0c4751f797e",
            "name": "Delete User",
            "url": "{{host}}\/user\/unregister",
            "description": "Implementation Notes:\r\n\r\nThe delete user service is used to delete or unregister a user from Yodlee. \r\n\r\nOnce deleted, the information related to the users cannot be retrieved. \r\n\r\nThe HTTP response code is 204 (Success without content).",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "",
                            "if (responseCode.code != 204) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 204) {",
                            "    console.log(\"Delete User successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "66058555-3f3b-4a53-93db-f4b7492ea712",
            "responses": [
                {
                    "id": "2e98f187-7fef-4048-a614-07bbbb5bd2a3",
                    "name": "Delete User",
                    "status": "OK",
                    "mime": "",
                    "language": "Text",
                    "text": "",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "950e5734-704a-4819-8efb-6fa681c46ea6",
                        "method": "DELETE",
                        "description": "Implementation Notes:\r\n\r\nThe delete user service is used to delete or unregister a user from Yodlee. \r\n\r\nOnce deleted, the information related to the users cannot be retrieved. \r\n\r\nThe HTTP response code is 204 (Success without content).",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/user\/unregister",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [],
                    "cookies": [],
                    "request": "5132079a-4f03-41cc-aba2-f0c4751f797e",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(204);\n});\n\nif (responseCode.code != 204) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 204) {\n    console.log(\"Delete User successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "518508aa-e36c-4482-8d5a-7dc947f02b95",
            "name": "Get Token",
            "url": "{{host}}\/user\/credentials\/token?loginName={{loginName}}",
            "description": "Implementation Notes:\r\n\r\nThe get token service is used to generate a token to reset a user's password. This token should be used to verify the user through email or mobile verification to establish that the request to reset the password was initiated by the user.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "loginName",
                    "value": "{{loginName}}",
                    "equals": true,
                    "description": "",
                    "enabled": true
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Token successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "66058555-3f3b-4a53-93db-f4b7492ea712",
            "responses": [
                {
                    "id": "d848261a-2b4e-432e-8e9a-29a8c8c16949",
                    "name": "Get Token",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"validUntil\":\"2018-06-06T22:15:48Z\",\"loginName\":\"corbin1\",\"token\":\"b9ed408f00002ac0ab5e91a6831b7b66\"}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "624367f7-8053-43f8-8fea-1e032d1e3866",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe get token service is used to generate a token to reset a user's password. This token should be used to verify the user through email or mobile verification to establish that the request to reset the password was initiated by the user.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/user\/credentials\/token?loginName={{userName}}",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "loginName",
                                "value": "{{userName}}"
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "102",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 30 May 2018 22:15:48 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "m1527718547968k28H106S000000NLNYv",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "518508aa-e36c-4482-8d5a-7dc947f02b95",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Token successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "54b529cb-5ccb-425f-8bff-effc41002093",
            "name": "Update Subscription*",
            "url": "{{host}}\/cobrand\/config\/notifications\/events\/REFRESH",
            "description": "Implementation Notes:\r\n\r\nThe get events service provides the list of events for which consumers subscribed to receive notifications.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                },
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}}",
                    "description": "cobSession has to be passed, received from cobrand login API response."
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                }
            ],
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "",
                            "if (responseCode.code != 204) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 204) {",
                            "    console.log(\"Update Subscription successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "f91e3e0a-ecde-44f0-833d-fed8ca1de98f",
            "responses": [
                {
                    "id": "eeacade3-047e-4bce-aed0-a4319d188ba3",
                    "name": "Update Subscription",
                    "status": "No Content",
                    "mime": "",
                    "language": "json",
                    "text": "",
                    "responseCode": {
                        "code": 204,
                        "name": "No Content",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "7896c23d-e99c-4f12-8baa-6c9df52a5fb3",
                        "method": "PUT",
                        "description": "Implementation Notes:\r\n\r\nThe get events service provides the list of events for which consumers subscribed to receive notifications.",
                        "headers": "Api-Version: 1.1\nCobrand-Name: {{cobrandName}}\nAuthorization: cobSession={{cobSession}}\nContent-Type: application\/json",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "{\t\r\n\t\"event\": {\r\n\t\t\"callbackUrl\": \"http:\/\/yslrocks.com\/notify\"\r\n\t}\r\n}\t",
                        "url": "{{host}}\/cobrand\/config\/notifications\/events\/REFRESH",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            },
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}}",
                                "description": "cobSession has to be passed, received from cobrand login API response."
                            },
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Cache-Control",
                            "value": "no-store, no-cache",
                            "name": "Cache-Control",
                            "description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Thu, 31 May 2018 20:28:32 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "U1527798512200C3C31S000000NLQYm",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "54b529cb-5ccb-425f-8bff-effc41002093",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(204);\n});\n\nif (responseCode.code != 204) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 204) {\n    console.log(\"Update Subscription successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "{\t\r\n\t\"event\": {\r\n\t\t\"callbackUrl\": \"http:\/\/yslrocks.com\/notify\"\r\n\t}\r\n}\t",
            "headers": "Api-Version: 1.1\nCobrand-Name: {{cobrandName}}\nAuthorization: cobSession={{cobSession}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "5501d911-f6a9-4174-8789-c25fb63a851d",
            "name": "Get Security Details",
            "url": "{{host}}\/holdings\/securities?holdingId=10967676",
            "description": "Implementation Notes:\r\n\r\nThe get security details service is used to get all the security information for the holdings.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "holdingId",
                    "value": "10967676",
                    "description": "comma separated holdingId"
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Security Details successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "e220bb01-d3de-4034-9a1f-3099a5d0afc6",
            "responses": [
                {
                    "id": "964a5fc6-7fd1-4cf5-9c51-7a5cd01b0895",
                    "name": "Get Security Details",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": " {\r\n\t\"holding\": [\r\n\t   {\r\n\t      \"id\": 1234567,\r\n\t      \"security\": {\r\n\t        \"id\": 9999989,\r\n\t        \"cusip\":\"007924103\",\r\n\t        \"symbol\":\"QPVSQ\",\r\n\t        \"description\":\"Aegon NV\",\r\n\t        \"type\":\"CS\",\r\n\t        \"style\":\"Int'l Developed Mkts\",\r\n\t        \"issueTypeMultiplier\":1,\r\n\t        \"agencyFactor\":1,\r\n\t        \"shareClass\":1,\r\n\t        \"cdscFundFlag\":\"N\",\r\n\t        \"fundFamily\":\"family\",\r\n\t        \"closedFlag\":\"N\",\r\n\t        \"sAndPRating\":\"NR\",\r\n\t        \"moodyRating\":\"NR\",\r\n\t        \"firmEligible\":\"Eligible\",\r\n\t        \"issueDate\":\"2017-03-44\",\r\n\t        \"maturityDate\":\"2017-03-44\",\r\n\t        \"callDate\":\"2017-03-44\",\r\n\t        \"callPrice\":1000.00,\r\n\t        \"sector\":\"sector\",\r\n\t        \"subSector\":\"Financials\",\r\n\t        \"lastModifiedDate\":\"2017-03-44\",\r\n\t        \"interestRate\": 12.0,\r\n\t        \"accrualMethod\": 12.0,\r\n\t        \"statTaxableCode\":\"IN\",\r\n\t        \"federalTaxable\":\"N\",\r\n\t        \"exchangeCode\":\"ARCX\",\r\n\t        \"tradeCurrency\":\"USD\",\r\n\t        \"couponFrequency\":2,\r\n\t        \"isin\":\"US0079241032\",\r\n\t        \"sedol\":\"2008411\",\r\n\t        \"firstCouponDate\":\"2017-03-44\",\r\n\t        \"lastCouponDate\":\"2017-03-44\",\r\n\t        \"minimumPurchase\":2,\r\n\t        \"incomeCurrency\":\"USD\",\r\n\t        \"isDummySecurity\":\"Y\"\r\n\t      }\r\n\t   }\r\n\t]\r\n}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "9fd40e6c-967c-4fcb-b513-6ae61615044b",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe get security details service is used to get all the security information for the holdings.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/holdings\/securities?holdingId=10967676",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "holdingId",
                                "value": "10967676",
                                "description": "comma separated holdingId"
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "2",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 23 May 2018 21:26:56 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "v1527110816203o4p26u000000NLuYc",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/ysl",
                            "secure": true,
                            "value": "TFdCarXrkemscJAK0siBgAgTvRqYq_9ljLFl6SlJ.hpdl-r306-25",
                            "name": "JSESSIONID"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/",
                            "secure": true,
                            "value": "J-jzNUYyJ2TMfTmyHfxnU0qQ9AYfNlPRuIjdPSpC.hpdl-r306-25",
                            "name": "JSESSIONID"
                        }
                    ],
                    "request": "5501d911-f6a9-4174-8789-c25fb63a851d",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Security Details successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "61df95f4-8677-430c-8dec-d54282274067",
            "name": "User Login",
            "url": "{{host}}\/user\/login",
            "description": "Implementation Notes:\r\n\r\nThe user login service allows the registered user to login into the application.\r\n\r\nThe user session token expires every 30 minutes and can be regenerated using this service.\r\nuserParam JSON body parameter is accepted as an input that has the following fields: \r\n\r\n  a. locale \r\n  \r\n  b. loginName \r\n  \r\n  c. password \r\n\r\nNote: The content type has to be passed as application\/json for the body parameter.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                },
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}}",
                    "description": "cobSession has to be passed, received from cobrand login API response."
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "id": "3d0baadc-4e2d-4371-afc9-85d8c7dae7c2",
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    pm.environment.set(\"userSession\", data.user.session.userSession);",
                            "    console.log(\"User Login successful.\");",
                            "} else if (data.errorMessage == \"Invalid loginName\/password\") {",
                            "    console.log(\"Your user login and\/or password are not correct!\");",
                            "    if (pm.environment.get(\"userName\") == \"cobrand_login_goes_here\") {",
                            "        console.log(\"You did not set your user name! Go to the collection environment and set 'userName'!\");",
                            "    } else if (pm.environment.get(\"userPassword\") == \"cobrand_password_goes_here\") {",
                            "        console.log(\"You did not set your user password! Go to the collection environment and set 'userPassword'!\");",
                            "    }",
                            "} else if (data.errorMessage == \"loginName and password required\") {",
                            "    console.log(\"You seem to be missing your body input! Go to: \" + pm.environment.get(\"link\") + \" to view the body input!\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'cobSession={{cobSession}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "66058555-3f3b-4a53-93db-f4b7492ea712",
            "responses": [
                {
                    "id": "882116ea-2ea1-418a-90cd-cd41fd86153c",
                    "name": "User Login",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"user\":{\"id\":39111308,\"loginName\":\"corbin1\",\"name\":{\"first\":\"corbin\",\"last\":\"peters\"},\"roleType\":\"INDIVIDUAL\",\"session\":{\"userSession\":\"09142017_1:354a872e60134315df8fdb1566dfc86938c173e4ce85fcc126cced1b88754efa8ff42b7d855011fd1d78ca22dff69f92c6e819989165f8c357228add227c3371\"},\"preferences\":{\"currency\":\"USD\",\"timeZone\":\"PST\",\"dateFormat\":\"MM\/dd\/yyyy\",\"locale\":\"en_US\"}}}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "a57c12e7-0e90-4d51-92e1-579ddeffb738",
                        "method": "POST",
                        "description": "Implementation Notes:\r\n\r\nThe user login service allows the registered user to login into the application.\r\n\r\nThe user session token expires every 30 minutes and can be regenerated using this service.\r\nuserParam JSON body parameter is accepted as an input that has the following fields: \r\n\r\n  a. locale \r\n  \r\n  b. loginName \r\n  \r\n  c. password \r\n\r\nNote: The content type has to be passed as application\/json for the body parameter.",
                        "headers": "Content-Type: application\/json\nAuthorization: cobSession={{cobSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "{\r\n    \"user\":{\r\n        \"loginName\":\"{{userName}}\",\r\n        \"password\":\"{{userPassword}}\",\r\n        \"locale\":\"en_US\"\r\n    }\r\n}",
                        "url": "{{host}}\/user\/login",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}}",
                                "description": "cobSession has to be passed, received from cobrand login API response."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "373",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 30 May 2018 22:13:32 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "x1527718412401w28J106X000000NLlYa",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "61df95f4-8677-430c-8dec-d54282274067",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    pm.environment.set(\"userSession\", data.user.session.userSession);\n    console.log(\"User Login successful.\");\n} else if (data.errorMessage == \"Invalid loginName\/password\") {\n    console.log(\"Your user login and\/or password are not correct!\");\n    if (pm.environment.get(\"userName\") == \"cobrand_login_goes_here\") {\n        console.log(\"You did not set your user name! Go to the collection environment and set 'userName'!\");\n    } else if (pm.environment.get(\"userPassword\") == \"cobrand_password_goes_here\") {\n        console.log(\"You did not set your user password! Go to the collection environment and set 'userPassword'!\");\n    }\n} else if (data.errorMessage == \"loginName and password required\") {\n    console.log(\"You seem to be missing your body input! Go to: \" + pm.environment.get(\"link\") + \" to view the body input!\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'cobSession={{cobSession}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "{\r\n    \"user\":{\r\n        \"loginName\":\"{{loginName}}\",\r\n        \"password\":\"{{password}}\",\r\n        \"locale\":\"en_US\"\r\n    }\r\n}",
            "headers": "Api-Version: 1.1\nCobrand-Name: {{cobrandName}}\nAuthorization: cobSession={{cobSession}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "65cbe906-53a4-40c8-ad06-61c9a458a4cf",
            "name": "Get Events*",
            "url": "{{host}}\/dataExtracts\/events?eventName=DATA_UPDATES&fromDate=2018-05-31T10:18:44Z&toDate=2018-05-31T10:19:44Z",
            "description": "Implementation Notes:\r\n\r\nThe get extracts events service is used to learn about occurrences of data extract related events. This service currently supports only the DATA_UPDATES event.\r\n\r\nPassing the event name as DATA_UPDATES provides information about users for whom data has been modified in the system for the specified time range. To learn more, please refer to the dataExtracts page.\r\n\r\nThe fromDate or the toDate parameters value cannot be less than 7 days. The time difference between these fields cannot be more than 60 minutes.\r\n\r\nCobrand session only has to be passed to invoke this service.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}}",
                    "description": "cobSession has to be passed, received from cobrand login API response."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "eventName",
                    "value": "DATA_UPDATES"
                },
                {
                    "key": "fromDate",
                    "value": "2018-05-31T10:18:44Z"
                },
                {
                    "key": "toDate",
                    "value": "2018-05-31T10:19:44Z"
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Events successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}",
                            "if (responseBody == \"{}\") {",
                            "    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "58d6e17a-3996-47a9-be78-ba281865fd59",
            "responses": [
                {
                    "id": "845cfbdd-a0e8-472b-88b4-1357933e4c87",
                    "name": "*Get Events",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\n    \"event\": {\n        \"info\": \"DATA_UPDATES.USER_DATA\",\n        \"data\": {\n            \"userCount\": 1,\n            \"fromDate\": \"2017-02-20T10:18:44Z\",\n            \"toDate\": \"2017-02-20T10:19:44Z\",\n            \"userData\": [\n                {\n                    \"user\": {\n                        \"loginName\": \"YSL1484052178554\"\n                    },\n                    \"links\": [\n                        {\n                            \"methodType\": \"GET\",\n                            \"rel\": \"getUserData\",\n                            \"href\": \"\/userData?fromDate=2017-02-20T10:18:44&toDate=2017-02-20T10:19:44&loginName=YSL1484052178554\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "b5e57b2a-5b33-42d1-a3cd-080ec41dffec",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe get extracts events service is used to learn about occurrences of data extract related events. This service currently supports only the DATA_UPDATES event.\r\n\r\nPassing the event name as DATA_UPDATES provides information about users for whom data has been modified in the system for the specified time range. To learn more, please refer to the dataExtracts page.\r\n\r\nThe fromDate or the toDate parameters value cannot be less than 7 days. The time difference between these fields cannot be more than 60 minutes.\r\n\r\nCobrand session only has to be passed to invoke this service.",
                        "headers": "Authorization: cobSession={{cobSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/dataExtracts\/events?eventName=DATA_UPDATES&fromDate=2018-05-31T10:18:44Z&toDate=2018-05-31T10:19:44Z",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "eventName",
                                "value": "DATA_UPDATES"
                            },
                            {
                                "key": "fromDate",
                                "value": "2018-05-31T10:18:44Z"
                            },
                            {
                                "key": "toDate",
                                "value": "2018-05-31T10:19:44Z"
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}}",
                                "description": "cobSession has to be passed, received from cobrand login API response."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "2",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Thu, 31 May 2018 22:56:17 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "X1527807377544u28b106G000000NLcYC",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "65cbe906-53a4-40c8-ad06-61c9a458a4cf",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Events successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}\nif (responseBody == \"{}\") {\n    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "6878ebf7-e728-4743-b50b-f5c1e7cbc262",
            "name": "Get Asset Classification List",
            "url": "{{host}}\/holdings\/assetClassificationList",
            "description": "Implementation Notes:\r\n\r\nThe get asset classifications list service is used to get the supported asset classifications. \r\n\r\nThe response includes different classification types like assetClass, country, sector, style, etc., and the values corresponding to each type.\r\n\r\nThis service should be invoked by passing cobrand session only and returns the supported asset classification.\r\n\r\nProviding a user session parameter causes an error.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}}",
                    "description": "cobSession has to be passed, received from cobrand login API response."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Asset Clasification List successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "e220bb01-d3de-4034-9a1f-3099a5d0afc6",
            "responses": [
                {
                    "id": "9f6679b7-3fda-4075-aec3-121981c9f24d",
                    "name": "Get Asset Classification List",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"assetClassificationList\":[{\"classificationType\":\"Asset class\",\"classificationValue\":[\"Bond\",\"Cash\",\"Convertible\",\"Currency\",\"CurrencyForward\",\"DepositoryReceipt\",\"Derivative\",\"Indices\",\"MoneyMarket\",\"Non-US bonds\",\"Non-US stocks\",\"Other\",\"Preferred stocks\",\"Stock\",\"StructuredProduct\",\"US bonds\",\"US stocks\"]},{\"classificationType\":\"Country\",\"classificationValue\":[\"AD\",\"AE\",\"AF\",\"AG\",\"AI\",\"AL\",\"AM\",\"AO\",\"AQ\",\"AR\",\"AS\",\"AT\",\"AU\",\"AW\",\"AX\",\"AZ\",\"BA\",\"BB\",\"BD\",\"BE\",\"BF\",\"BG\",\"BH\",\"BI\",\"BJ\",\"BL\",\"BM\",\"BN\",\"BO\",\"BQ\",\"BR\",\"BS\",\"BT\",\"BV\",\"BW\",\"BY\",\"BZ\",\"CA\",\"CC\",\"CD\",\"CF\",\"CG\",\"CH\",\"CI\",\"CK\",\"CL\",\"CM\",\"CN\",\"CO\",\"CR\",\"CU\",\"CV\",\"CW\",\"CX\",\"CY\",\"CZ\",\"DE\",\"DJ\",\"DK\",\"DM\",\"DO\",\"DZ\",\"EC\",\"EE\",\"EG\",\"EH\",\"ER\",\"ES\",\"ET\",\"FI\",\"FJ\",\"FK\",\"FM\",\"FO\",\"FR\",\"GA\",\"GB\",\"GD\",\"GE\",\"GF\",\"GG\",\"GH\",\"GI\",\"GL\",\"GM\",\"GN\",\"GP\",\"GQ\",\"GR\",\"GS\",\"GT\",\"GU\",\"GW\",\"GY\",\"HK\",\"HM\",\"HN\",\"HR\",\"HT\",\"HU\",\"ID\",\"IE\",\"IL\",\"IM\",\"IN\",\"IO\",\"IQ\",\"IR\",\"IS\",\"IT\",\"JE\",\"JM\",\"JO\",\"JP\",\"KE\",\"KG\",\"KH\",\"KI\",\"KM\",\"KN\",\"KP\",\"KR\",\"KW\",\"KY\",\"KZ\",\"LA\",\"LB\",\"LC\",\"LI\",\"LK\",\"LR\",\"LS\",\"LT\",\"LU\",\"LV\",\"LY\",\"MA\",\"MC\",\"MD\",\"ME\",\"MF\",\"MG\",\"MH\",\"MK\",\"ML\",\"MM\",\"MN\",\"MO\",\"MP\",\"MQ\",\"MR\",\"MS\",\"MT\",\"MU\",\"MV\",\"MW\",\"MX\",\"MY\",\"MZ\",\"NA\",\"NC\",\"NE\",\"NF\",\"NG\",\"NI\",\"NL\",\"NO\",\"NP\",\"NR\",\"NU\",\"NZ\",\"OM\",\"PA\",\"PE\",\"PF\",\"PG\",\"PH\",\"PK\",\"PL\",\"PM\",\"PN\",\"PR\",\"PS\",\"PT\",\"PW\",\"PY\",\"QA\",\"RE\",\"RO\",\"RS\",\"RU\",\"RW\",\"SA\",\"SB\",\"SC\",\"SD\",\"SE\",\"SG\",\"SH\",\"SI\",\"SJ\",\"SK\",\"SL\",\"SM\",\"SN\",\"SO\",\"SR\",\"ST\",\"SV\",\"SX\",\"SY\",\"SZ\",\"TC\",\"TD\",\"TF\",\"TG\",\"TH\",\"TJ\",\"TK\",\"TL\",\"TM\",\"TN\",\"TO\",\"TR\",\"TT\",\"TV\",\"TW\",\"TZ\",\"UA\",\"UG\",\"UM\",\"US\",\"UY\",\"UZ\",\"VA\",\"VC\",\"VE\",\"VG\",\"VI\",\"VN\",\"VU\",\"WF\",\"WS\",\"YE\",\"YT\",\"ZA\",\"ZM\",\"ZW\"]},{\"classificationType\":\"Sector\",\"classificationValue\":[\"Basic Materials\",\"BasicMaterials\",\"Cash and equivalents\",\"Commercial Services\",\"Communication Services\",\"Communications\",\"Conglomerates\",\"Consumer Cyclical\",\"Consumer Defensive\",\"Consumer Durables\",\"Consumer Non-Durables\",\"Consumer Services\",\"ConsumerGoods\",\"Corporate bonds\",\"Derivatives\",\"Distribution Services\",\"Electronic Technology\",\"Energy\",\"Energy Minerals\",\"Finance\",\"Financial\",\"Financial Services\",\"Government\",\"Government bonds\",\"Health Services\",\"Health Technology\",\"Healthcare\",\"Industrial Services\",\"IndustrialGoods\",\"Industrials\",\"Miscellaneous\",\"Municipal bonds\",\"Non-Energy Minerals\",\"Not Classified\",\"Process Industries\",\"Producer Manufacturing\",\"Real Estate\",\"Retail Trade\",\"Securitized products\",\"Services\",\"Technology\",\"Technology Services\",\"Transportation\",\"UNKNOWN\",\"Utilities\"]},{\"classificationType\":\"Style\",\"classificationValue\":[\"High Risk High Reward\",\"High Risk Low Reward\",\"High Risk Medium Reward\",\"Low Risk High Reward\",\"Low Risk Low Reward\",\"Low Risk Medium Reward\",\"Medium Risk High Reward\",\"Medium Risk Low Reward\",\"Medium Risk Medium Reward\"]}]}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "3c24f3f3-96c4-4dd6-8983-d3f5a393e0e3",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe get asset classifications list service is used to get the supported asset classifications. \r\n\r\nThe response includes different classification types like assetClass, country, sector, style, etc., and the values corresponding to each type.\r\n\r\nThis service should be invoked by passing cobrand session only and returns the supported asset classification.\r\n\r\nProviding a user session parameter causes an error.",
                        "headers": "Authorization: cobSession={{cobSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/holdings\/assetClassificationList",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}}",
                                "description": "cobSession has to be passed, received from cobrand login API response."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "2745",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Thu, 31 May 2018 21:52:50 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "G1527803569930w3C32j000000NLOYV",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "6878ebf7-e728-4743-b50b-f5c1e7cbc262",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Asset Clasification List successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "6cb7d267-5b3e-4ee7-bb23-b05b595defe6",
            "name": "Get Provider Accounts",
            "url": "{{host}}\/providerAccounts",
            "description": "Implementation Notes:\r\n\r\nThe get provider accounts service is used to return all the provider accounts added by the user. This includes the failed and successfully added provider accounts.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Provider Details successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "75abde44-be48-4c3b-841f-1025a3c1bafd",
            "responses": [
                {
                    "id": "ac819077-6234-4bc5-bdd8-bd1124e2d68a",
                    "name": "Get Provider Accounts",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"providerAccount\":[{\"id\":18382938,\"providerId\":16441,\"lastUpdated\":\"2018-05-31T21:44:48Z\",\"isManual\":false,\"createdDate\":\"2018-05-31\",\"aggregationSource\":\"USER\",\"refreshInfo\":{\"statusCode\":811,\"statusMessage\":\"STATUS_PARTIAL_SUCCESS\",\"status\":\"PARTIAL_SUCCESS\",\"nextRefreshScheduled\":\"2018-06-02T02:01:26Z\",\"lastRefreshed\":\"2018-05-31T21:44:49Z\",\"lastRefreshAttempt\":\"2018-05-31T21:44:49Z\"}}]}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "0773f733-4ef7-40ab-b62d-bf87d0190646",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe get provider accounts service is used to return all the provider accounts added by the user. This includes the failed and successfully added provider accounts.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/providerAccounts",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            },
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "394",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Thu, 31 May 2018 21:46:22 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "x1527803182695l3k32d000000NLNYo",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "6cb7d267-5b3e-4ee7-bb23-b05b595defe6",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Provider Details successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "6d9bdc60-92aa-4fe0-b89e-3a60b333ff00",
            "name": "Get Holdings",
            "url": "{{host}}\/holdings?",
            "description": "Implementation Notes:\r\n\r\nThe get holdings service is used to get the list of holdings of a user.\r\n\r\nSupported holding types can be employeeStockOption, moneyMarketFund, bond, etc. and is obtained using get holding type list service. \r\n\r\nAsset classifications for the holdings need to be requested through the \"include\" parameter.\r\n\r\nAsset classification information for holdings are not available by default, as it is a premium feature.\r\n\r\naccountReconType input parameter is relevant for investment accounts, provided the reconciliation feature is turned on.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "accountId",
                    "value": "",
                    "description": "account id",
                    "enabled": false
                },
                {
                    "key": "providerAccountId",
                    "value": "",
                    "description": "providerAccountId",
                    "enabled": false
                },
                {
                    "key": "include",
                    "value": null,
                    "description": "assetClassification",
                    "enabled": false
                },
                {
                    "key": "assetClassification.classificationType",
                    "value": null,
                    "description": "e.g. country, sector, etc.",
                    "enabled": false
                },
                {
                    "key": "accountReconType",
                    "value": null,
                    "description": "UNRECONCILED (Default value), RECONCILED\t",
                    "enabled": false
                },
                {
                    "key": "classificationValue",
                    "value": null,
                    "description": "e.g. US\t",
                    "enabled": false
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Holdings successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "e220bb01-d3de-4034-9a1f-3099a5d0afc6",
            "responses": [
                {
                    "id": "58bb3c71-1314-4120-8715-acaeb888f50f",
                    "name": "Get Holdings",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"holding\":[{\"id\":27759872,\"providerAccountId\":18382938,\"sedol\":\"1234567\",\"isin\":\"123456789012\",\"accountId\":37274584,\"createdDate\":\"2018-05-31T21:44:30Z\",\"lastUpdated\":\"2018-05-31T21:44:30Z\",\"securityType\":\"OTHER\",\"matchStatus\":\"UNRECOGNIZED\",\"description\":\"CDDesc\",\"employeeContribution\":{\"amount\":2500,\"currency\":\"USD\"},\"employerContribution\":{\"amount\":2500,\"currency\":\"USD\"},\"holdingType\":\"CD\",\"interestRate\":2000,\"maturityDate\":\"2013-01-17\",\"optionType\":\"unknown\"},{\"id\":27759868,\"providerAccountId\":18382938,\"sedol\":\"1234567\",\"isin\":\"123456789012\",\"accountId\":37274584,\"createdDate\":\"2018-05-31T21:44:30Z\",\"lastUpdated\":\"2018-05-31T21:44:30Z\",\"costBasis\":{\"amount\":3500,\"currency\":\"USD\"},\"couponRate\":2000,\"cusipNumber\":\"999999999\",\"securityType\":\"OTHER\",\"matchStatus\":\"PUBLIC_PRICE_MISMATCH\",\"description\":\"bonddesc\",\"employeeContribution\":{\"amount\":2300,\"currency\":\"USD\"},\"employerContribution\":{\"amount\":5400,\"currency\":\"USD\"},\"holdingType\":\"bond\",\"maturityDate\":\"2013-01-17\",\"optionType\":\"unknown\",\"parValue\":{\"amount\":2500,\"currency\":\"USD\"},\"price\":{\"amount\":1500,\"currency\":\"USD\"},\"quantity\":2000,\"value\":{\"amount\":5600,\"currency\":\"USD\"}},{\"id\":27759876,\"providerAccountId\":18382938,\"sedol\":\"1234567\",\"isin\":\"123456789012\",\"accountId\":37274584,\"createdDate\":\"2018-05-31T21:44:30Z\",\"lastUpdated\":\"2018-05-31T21:44:30Z\",\"cusipNumber\":\"999999999\",\"securityType\":\"MONEY_MARKET_FUND\",\"matchStatus\":\"PUBLIC_PRICE_MISMATCH\",\"description\":\"moneyMarketFund\",\"employeeContribution\":{\"amount\":2370,\"currency\":\"USD\"},\"employerContribution\":{\"amount\":2360,\"currency\":\"USD\"},\"holdingType\":\"moneyMarketFund\",\"optionType\":\"unknown\",\"price\":{\"amount\":2550,\"currency\":\"USD\"},\"quantity\":2000,\"symbol\":\"moneyMarketFund\",\"value\":{\"amount\":3400,\"currency\":\"USD\"}},{\"id\":27759864,\"providerAccountId\":18382938,\"accountId\":37274584,\"createdDate\":\"2018-05-31T21:44:30Z\",\"lastUpdated\":\"2018-05-31T21:44:30Z\",\"costBasis\":{\"amount\":2500,\"currency\":\"USD\"},\"cusipNumber\":\"999999999\",\"securityType\":\"OTHER\",\"matchStatus\":\"PUBLIC_PRICE_MISMATCH\",\"description\":\"mutualfunddesc\",\"employeeContribution\":{\"amount\":2500,\"currency\":\"USD\"},\"employerContribution\":{\"amount\":2500,\"currency\":\"USD\"},\"holdingType\":\"mutualFund\",\"optionType\":\"unknown\",\"price\":{\"amount\":2500,\"currency\":\"USD\"},\"quantity\":2000,\"symbol\":\"MFSymbol2\",\"value\":{\"amount\":2500,\"currency\":\"USD\"}},{\"id\":27759860,\"providerAccountId\":18382938,\"accountId\":37274584,\"createdDate\":\"2018-05-31T21:44:30Z\",\"lastUpdated\":\"2018-05-31T21:44:30Z\",\"costBasis\":{\"amount\":2500,\"currency\":\"USD\"},\"cusipNumber\":\"999999999\",\"securityType\":\"OTHER\",\"matchStatus\":\"PUBLIC_PRICE_MISMATCH\",\"description\":\"mutualfunddesc\",\"employeeContribution\":{\"amount\":2500,\"currency\":\"USD\"},\"employerContribution\":{\"amount\":2500,\"currency\":\"USD\"},\"holdingType\":\"mutualFund\",\"optionType\":\"unknown\",\"price\":{\"amount\":2500,\"currency\":\"USD\"},\"quantity\":2000,\"symbol\":\"MFSymbol\",\"value\":{\"amount\":2500,\"currency\":\"USD\"}},{\"id\":27759880,\"providerAccountId\":18382938,\"sedol\":\"1234567\",\"isin\":\"123456789012\",\"accountId\":37274584,\"createdDate\":\"2018-05-31T21:44:30Z\",\"lastUpdated\":\"2018-05-31T21:44:30Z\",\"costBasis\":{\"amount\":2589,\"currency\":\"USD\"},\"securityType\":\"OTHER\",\"matchStatus\":\"UNRECOGNIZED\",\"isShort\":false,\"description\":\"option\",\"employeeContribution\":{\"amount\":2500,\"currency\":\"USD\"},\"employerContribution\":{\"amount\":2500,\"currency\":\"USD\"},\"expirationDate\":\"2013-01-17\",\"holdingType\":\"option\",\"optionType\":\"unknown\",\"price\":{\"amount\":2500,\"currency\":\"USD\"},\"quantity\":2000,\"strikePrice\":{\"amount\":2500,\"currency\":\"USD\"},\"symbol\":\"option\",\"value\":{\"amount\":20670,\"currency\":\"USD\"}},{\"id\":27759856,\"providerAccountId\":18382938,\"accountId\":37274584,\"createdDate\":\"2018-05-31T21:44:30Z\",\"lastUpdated\":\"2018-05-31T21:44:30Z\",\"costBasis\":{\"amount\":2500,\"currency\":\"USD\"},\"cusipNumber\":\"999999999\",\"securityType\":\"OTHER\",\"matchStatus\":\"PUBLIC_PRICE_MISMATCH\",\"isShort\":false,\"description\":\"holdingdesc\",\"employeeContribution\":{\"amount\":2500,\"currency\":\"USD\"},\"employerContribution\":{\"amount\":2500,\"currency\":\"USD\"},\"holdingType\":\"stock\",\"optionType\":\"unknown\",\"price\":{\"amount\":236,\"currency\":\"USD\"},\"quantity\":2000,\"symbol\":\"holdingsymbol\",\"value\":{\"amount\":5600,\"currency\":\"USD\"}}]}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "a2b52bb4-4117-4e40-a57b-24dbcffff503",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe get holdings service is used to get the list of holdings of a user.\r\n\r\nSupported holding types can be employeeStockOption, moneyMarketFund, bond, etc. and is obtained using get holding type list service. \r\n\r\nAsset classifications for the holdings need to be requested through the \"include\" parameter.\r\n\r\nAsset classification information for holdings are not available by default, as it is a premium feature.\r\n\r\naccountReconType input parameter is relevant for investment accounts, provided the reconciliation feature is turned on.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/holdings?",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "accountId",
                                "value": "",
                                "description": "account id",
                                "enabled": false
                            },
                            {
                                "key": "providerAccountId",
                                "value": "",
                                "description": "providerAccountId",
                                "enabled": false
                            },
                            {
                                "key": "include",
                                "value": null,
                                "description": "assetClassification",
                                "enabled": false
                            },
                            {
                                "key": "assetClassification.classificationType",
                                "value": null,
                                "description": "e.g. country, sector, etc.",
                                "enabled": false
                            },
                            {
                                "key": "accountReconType",
                                "value": null,
                                "description": "UNRECONCILED (Default value), RECONCILED\t",
                                "enabled": false
                            },
                            {
                                "key": "classificationValue",
                                "value": null,
                                "description": "e.g. US\t",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "4184",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Thu, 31 May 2018 21:52:16 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "S1527803536479Y3U32b000000NLYYL",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "6d9bdc60-92aa-4fe0-b89e-3a60b333ff00",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Holdings successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "6f2fbc1c-e943-4cb7-ab02-d6d49489848c",
            "name": "Delete Account",
            "url": "{{host}}\/accounts\/{{accountId}}?accountId={{accountId}}",
            "description": "Implementation Notes:\r\n\r\nThe delete account service allows an account to be deleted.\r\n\r\nThis service does not return a response. The HTTP response code is 204 (Success with no content).",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "accountId",
                    "value": "{{accountId}}"
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "",
                            "if (responseCode.code != 204) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 204) {",
                            "    console.log(\"Delete Account successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "fb0af4be-ff32-4bf6-afbd-5652a4e6ca51",
            "responses": [
                {
                    "id": "9023af85-0377-48c8-8f3e-784b657e0b21",
                    "name": "Delete Account",
                    "status": "No Content",
                    "mime": "",
                    "language": "json",
                    "text": "",
                    "responseCode": {
                        "code": 204,
                        "name": "No Content",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "c6a2360e-cbe0-4185-aefe-5d40db3c66c7",
                        "method": "DELETE",
                        "description": "Implementation Notes:\r\n\r\nThe delete account service allows an account to be deleted.\r\n\r\nThis service does not return a response. The HTTP response code is 204 (Success with no content).",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/accounts\/{{accountId}}?accountId={{accountId}}",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "accountId",
                                "value": "{{accountId}}"
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Cache-Control",
                            "value": "no-store, no-cache",
                            "name": "Cache-Control",
                            "description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 05 Jun 2018 16:38:33 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "W1528216712122B3q31K000000NLcYg",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "6f2fbc1c-e943-4cb7-ab02-d6d49489848c",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(204);\n});\n\nif (responseCode.code != 204) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 204) {\n    console.log(\"Delete Account successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "74b4180e-b23a-4b78-8b13-91938738b636",
            "name": "*Get User Profile Details",
            "url": "{{host}}\/providerAccounts\/profile?providerAccountId=11092873",
            "description": "Implementation Notes:\r\n\r\nThe get provider accounts profile service is used to return the user profile details that are associated to the provider account.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "providerAccountId",
                    "value": "11092873",
                    "equals": true,
                    "description": "",
                    "enabled": true
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get User Profile Details successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "75abde44-be48-4c3b-841f-1025a3c1bafd",
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get User Profile Details successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "79b03d6e-c1a9-4aaa-ad0e-c823139536b9",
            "name": "Get Statements",
            "url": "{{host}}\/statements?",
            "description": "Implementation Notes:\r\n\r\nThe statements service is used to get the list of statement related information. \r\n\r\nBy default, all the latest statements of active and to be closed accounts are retrieved for the user. \r\n\r\nCertain sites do not have both a statement date and a due date. When a fromDate is passed as an input, all the statements that have the due date on or after the passed date are retrieved. \r\nFor sites that do not have the due date, statements that have the statement date on or after the passed date are retrieved. \r\n\r\nThe default value of \"isLatest\" is true. To retrieve historical statements isLatest needs to be set to false.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "container",
                    "value": "",
                    "description": "creditCard\/loan\/bill\/insurance\t",
                    "enabled": false
                },
                {
                    "key": "accountId",
                    "value": null,
                    "description": "account id",
                    "enabled": false
                },
                {
                    "key": "isLatest",
                    "value": null,
                    "description": "is latest (true\/false)\t",
                    "enabled": false
                },
                {
                    "key": "status",
                    "value": null,
                    "description": "ACTIVE\/TO_BE_CLOSED\/CLOSED",
                    "enabled": false
                },
                {
                    "key": "fromDate",
                    "value": null,
                    "description": "from date for statement retrieval (YYYY-MM-DD)\t",
                    "enabled": false
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Statements successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "c3b6416f-3503-4a97-9773-0ecff6039f74",
            "responses": [
                {
                    "id": "dbd2e9dc-e49d-4904-8553-409ca009f4e2",
                    "name": "Get Statements",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"statement\":[{\"id\":46667540,\"accountId\":37274596,\"statementDate\":\"2013-12-30\",\"billingPeriodStart\":\"2013-08-25\",\"billingPeriodEnd\":\"2013-08-25\",\"dueDate\":\"2013-02-14\",\"lastPaymentDate\":\"2013-12-30\",\"lastUpdated\":\"2018-05-31T21:44:38Z\",\"amountDue\":{\"amount\":10000,\"currency\":\"USD\"},\"lastPaymentAmount\":{\"amount\":10000,\"currency\":\"USD\"},\"isLatest\":true},{\"id\":46667548,\"accountId\":37274604,\"statementDate\":\"2013-01-25\",\"billingPeriodStart\":\"2013-01-25\",\"billingPeriodEnd\":\"2013-01-25\",\"dueDate\":\"2013-01-28\",\"lastPaymentDate\":\"2013-01-25\",\"lastUpdated\":\"2018-05-31T21:44:48Z\",\"amountDue\":{\"amount\":12353.12,\"currency\":\"USD\"},\"lastPaymentAmount\":{\"amount\":3000,\"currency\":\"USD\"},\"isLatest\":true},{\"id\":46667544,\"accountId\":37274600,\"statementDate\":\"2013-01-25\",\"billingPeriodStart\":\"2013-01-25\",\"billingPeriodEnd\":\"2013-01-25\",\"dueDate\":\"2013-01-28\",\"lastPaymentDate\":\"2013-01-10\",\"lastUpdated\":\"2018-05-31T21:44:43Z\",\"amountDue\":{\"amount\":12353.12,\"currency\":\"USD\"},\"lastPaymentAmount\":{\"amount\":3000,\"currency\":\"USD\"},\"isLatest\":true}]}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "4c1fbbf0-62db-4a8f-b60e-0b8d45c4d02b",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe statements service is used to get the list of statement related information. \r\n\r\nBy default, all the latest statements of active and to be closed accounts are retrieved for the user. \r\n\r\nCertain sites do not have both a statement date and a due date. When a fromDate is passed as an input, all the statements that have the due date on or after the passed date are retrieved. \r\nFor sites that do not have the due date, statements that have the statement date on or after the passed date are retrieved. \r\n\r\nThe default value of \"isLatest\" is true. To retrieve historical statements isLatest needs to be set to false.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/statements?",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "container",
                                "value": "",
                                "description": "creditCard\/loan\/bill\/insurance\t",
                                "enabled": false
                            },
                            {
                                "key": "accountId",
                                "value": null,
                                "description": "account id",
                                "enabled": false
                            },
                            {
                                "key": "isLatest",
                                "value": null,
                                "description": "is latest (true\/false)\t",
                                "enabled": false
                            },
                            {
                                "key": "status",
                                "value": null,
                                "description": "ACTIVE\/TO_BE_CLOSED\/CLOSED",
                                "enabled": false
                            },
                            {
                                "key": "fromDate",
                                "value": null,
                                "description": "from date for statement retrieval (YYYY-MM-DD)\t",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "1036",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Thu, 31 May 2018 21:49:51 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "Z1527803391685e3K32y000000NLzYj",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "79b03d6e-c1a9-4aaa-ad0e-c823139536b9",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Statements successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "7deae36e-375f-44b2-a572-bf274e417128",
            "name": "Get Documents*",
            "url": "{{host}}\/documents?",
            "description": "Implementation Notes:\r\n\r\nThe get documents service allows customers to search or retrieve metadata related to documents. The API returns the document as per the input parameters passed. If no date range is provided then all downloaded documents will be retrieved. Details of deleted documents or documents associated to closed providerAccount will not be returned. \r\n\r\nMetadata related to documents can be searched or retrieved only if the document related dataset attributes are subscribed.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "docType",
                    "value": "",
                    "description": "accepts only one of the following valid document types: STMT, TAX, and EBILL.",
                    "enabled": false
                },
                {
                    "key": "keyword",
                    "value": "",
                    "description": "the string used to search a document by its name",
                    "enabled": false
                },
                {
                    "key": "providerAccountId",
                    "value": "",
                    "description": "the unique identifier of the provider accounts. If a providerAccountId is not provided, then retrieves documents for all providerAccountIds for the consumer.",
                    "enabled": false
                },
                {
                    "key": "accountId",
                    "value": "37274604",
                    "description": "the unique identifier of an account. Retrieve documents for a given accountId",
                    "enabled": false
                },
                {
                    "key": "fromDate",
                    "value": "",
                    "description": "the date from which documents have to be retrieved",
                    "enabled": false
                },
                {
                    "key": "toDate",
                    "value": "",
                    "description": "the date to which documents have to be retrieved",
                    "enabled": false
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Documents successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}",
                            "if (responseBody == \"{}\") {",
                            "    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "675cebfb-ee48-4694-85ad-0c3508ad3665",
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Documents successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}\nif (responseBody == \"{}\") {\n    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "7ef527d3-86f5-47eb-a150-616c81a8f8a5",
            "name": "Cobrand Login",
            "url": "{{host}}\/cobrand\/login",
            "description": "Implementation Notes:\r\n\r\nThe cobrand login service authenticates a cobrand.\r\n\r\nCobrand session in the response includes the cobrand session token (cobSession) \r\nwhich is used in subsequent API calls like registering or signing in the user. \r\n\r\nThe cobrand session token expires every 100 minutes. This service can be \r\ninvoked to create a new cobrand session token. \r\n\r\nQuery parameters cobrandLogin and cobrandPassword are not supported; \r\nsupport for the same is only available through body parameters. \r\n\r\nNote: The content type has to be passed as application\/json for the body parameter.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    pm.environment.set(\"cobSession\", data.session.cobSession);",
                            "    console.log(\"Cobrand Login successful.\");",
                            "} else if (data.errorMessage == \"Invalid loginName\/password\") {",
                            "    console.log(\"Your cobrand login and\/or passoword are not correct!\");",
                            "    if (pm.environment.get(\"cobrandLogin\") == \"cobrand_login_goes_here\") {",
                            "        console.log(\"You did not set your cobrand login! Go to the collection environment and set 'cobrandLogin'!\");",
                            "    } else if (pm.environment.get(\"cobrandPassword\") == \"cobrand_password_goes_here\") {",
                            "        console.log(\"You did not set your cobrand password! Go to the collection environment and set 'cobrandPassword'!\");",
                            "    }",
                            "} else if (data.errorMessage == \"loginName and password required\") {",
                            "    console.log(\"You seem to be missing your body input! Go to: \" + pm.environment.get(\"link\") + \" to view the body input!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "f91e3e0a-ecde-44f0-833d-fed8ca1de98f",
            "responses": [
                {
                    "id": "25cb8ea8-860c-44dc-8413-d67cba8798af",
                    "name": "Cobrand Login",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\n  \"cobrandId\" : 10010352,\n  \"applicationId\" : \"3A4CAE9B71A1CCD7FF41F51006E9ED00\",\n  \"locale\" : \"en_US\",\n  \"session\" : {\n    \"cobSession\" : \"08062013_1:3564b2300b044f5268fcec489a78ec30a5973ab72ddd556b2541a4ba0e58bbf3cab60b73884ff1123364e71febba94939f28a1cfa174737b1d5c9f80e6140831\"\n  }\n}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "d5d986dd-cd29-49bc-93bd-3487e2235193",
                        "method": "POST",
                        "description": "Implementation Notes:\r\n\r\nThe cobrand login service authenticates a cobrand.\r\n\r\nCobrand session in the response includes the cobrand session token (cobSession) \r\nwhich is used in subsequent API calls like registering or signing in the user. \r\n\r\nThe cobrand session token expires every 100 minutes. This service can be \r\ninvoked to create a new cobrand session token. \r\n\r\nQuery parameters cobrandLogin and cobrandPassword are not supported; \r\nsupport for the same is only available through body parameters. \r\n\r\nNote: The content type has to be passed as application\/json for the body parameter.",
                        "headers": "Content-Type: application\/json\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "{\r\n    \"cobrand\":{\r\n        \"cobrandLogin\":\"{{cobrandLogin}}\",\r\n        \"cobrandPassword\":\"{{cobrandPassword}}\",\r\n        \"locale\":\"en_US\"\r\n    }\r\n}",
                        "url": "{{host}}\/cobrand\/login",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 23 May 2018 16:22:43 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Set-Cookie",
                            "value": "JSESSIONID=TFdCarXrkemscJAK0siBgAgTvRqYq_9ljLFl6SlJ.hpdl-r306-25; path=\/ysl; secure; HttpOnly",
                            "name": "Set-Cookie",
                            "description": "an HTTP cookie"
                        },
                        {
                            "key": "Transfer-Encoding",
                            "value": "chunked",
                            "name": "Transfer-Encoding",
                            "description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "x1527092563780F4u26V000000NLhYv",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/ysl",
                            "secure": true,
                            "value": "TFdCarXrkemscJAK0siBgAgTvRqYq_9ljLFl6SlJ.hpdl-r306-25",
                            "name": "JSESSIONID"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/",
                            "secure": true,
                            "value": "J-jzNUYyJ2TMfTmyHfxnU0qQ9AYfNlPRuIjdPSpC.hpdl-r306-25",
                            "name": "JSESSIONID"
                        }
                    ],
                    "request": "7ef527d3-86f5-47eb-a150-616c81a8f8a5",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    pm.environment.set(\"cobSession\", data.session.cobSession);\n    console.log(\"Cobrand Login successful.\");\n} else if (data.errorMessage == \"Invalid loginName\/password\") {\n    console.log(\"Your cobrand login and\/or passoword are not correct!\");\n    if (pm.environment.get(\"cobrandLogin\") == \"cobrand_login_goes_here\") {\n        console.log(\"You did not set your cobrand login! Go to the collection environment and set 'cobrandLogin'!\");\n    } else if (pm.environment.get(\"cobrandPassword\") == \"cobrand_password_goes_here\") {\n        console.log(\"You did not set your cobrand password! Go to the collection environment and set 'cobrandPassword'!\");\n    }\n} else if (data.errorMessage == \"loginName and password required\") {\n    console.log(\"You seem to be missing your body input! Go to: \" + pm.environment.get(\"link\") + \" to view the body input!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "{\r\n    \"cobrand\":{\r\n        \"cobrandLogin\":\"{{cobrandLogin}}\",\r\n        \"cobrandPassword\":\"{{cobrandPassword}}\",\r\n        \"locale\":\"en_US\"\r\n    }\r\n}",
            "headers": "Api-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "89ea73db-8039-465a-a371-030fe4003e8b",
            "name": "Delete Subscription*",
            "url": "{{host}}\/cobrand\/config\/notifications\/events\/REFRESH",
            "description": "Implementation Notes\r\n\r\nThe delete events service is used to unsubscribe from an events service.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                },
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}}",
                    "description": "cobSession has to be passed, received from cobrand login API response."
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "",
                            "if (responseCode.code != 204) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 204) {",
                            "    console.log(\"Delete Subscription successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "f91e3e0a-ecde-44f0-833d-fed8ca1de98f",
            "responses": [
                {
                    "id": "23fa6b17-1c19-4fec-9ae1-f65d4a1e2fda",
                    "name": "Delete Subscription",
                    "status": "No Content",
                    "mime": "",
                    "language": "json",
                    "text": "",
                    "responseCode": {
                        "code": 204,
                        "name": "No Content",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "a5455987-ad31-467b-9780-08aff6436b71",
                        "method": "DELETE",
                        "description": "Implementation Notes\r\n\r\nThe delete events service is used to unsubscribe from an events service.",
                        "headers": "Api-Version: 1.1\nCobrand-Name: {{cobrandName}}\nAuthorization: cobSession={{cobSession}}\nContent-Type: application\/json",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/cobrand\/config\/notifications\/events\/REFRESH",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            },
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}}",
                                "description": "cobSession has to be passed, received from cobrand login API response."
                            },
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Cache-Control",
                            "value": "no-store, no-cache",
                            "name": "Cache-Control",
                            "description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Thu, 31 May 2018 20:11:16 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "U1527797476906g28j106R000000NLFYc",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "89ea73db-8039-465a-a371-030fe4003e8b",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(204);\n});\n\nif (responseCode.code != 204) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 204) {\n    console.log(\"Delete Subscription successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Api-Version: 1.1\nCobrand-Name: {{cobrandName}}\nAuthorization: cobSession={{cobSession}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "8a4a365d-4fb2-444e-b7d8-65f7a5f4b48a",
            "name": "Get Networth Summary",
            "url": "{{host}}\/derived\/networth?interval=D",
            "description": "Implementation Notes:\r\n\r\nThe get networth service is used to get the networth for the user.\r\n\r\nIf the include parameter value is passed as details then networth with historical balances is returned. \r\n\r\naccountReconType input parameter is relevant for investment accounts, provided the reconciliation feature is turned on.\r\n\r\naccountReconType input parameter will be ignored when accountId(s) are passed.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "accountId",
                    "value": null,
                    "description": "account id",
                    "enabled": false
                },
                {
                    "key": "fromDate",
                    "value": null,
                    "description": "YYYY-MM-DD format",
                    "enabled": false
                },
                {
                    "key": "toDate",
                    "value": null,
                    "description": "YYYY-MM-DD format",
                    "enabled": false
                },
                {
                    "key": "interval",
                    "value": "D",
                    "description": "D-daily, W-weekly, M-mothly or Y-yearly\t"
                },
                {
                    "key": "include",
                    "value": null,
                    "description": "details",
                    "enabled": false
                },
                {
                    "key": "accountReconType",
                    "value": null,
                    "description": "UNRECONCILED (Default value), RECONCILED\t",
                    "enabled": false
                },
                {
                    "key": "skip",
                    "value": null,
                    "description": "skip (min 0)",
                    "enabled": false
                },
                {
                    "key": "top",
                    "value": null,
                    "description": "top(max 500)\t",
                    "enabled": false
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Networth Summary successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "7ffe98e2-1acd-46c4-a0ca-d5c1ec74e91c",
            "responses": [
                {
                    "id": "3b25969b-35fb-4a0c-a46c-d3110f4352d6",
                    "name": "Get Networth Summary",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"networth\":[{\"date\":\"2018-05-31\",\"asset\":{\"amount\":1.31567435856E9,\"currency\":\"USD\"},\"liability\":{\"amount\":13756.88,\"currency\":\"USD\"},\"networth\":{\"amount\":1.31566060168E9,\"currency\":\"USD\"}}]}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "4d824e8c-ef3c-41ea-bc71-42982d082e83",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe get networth service is used to get the networth for the user.\r\n\r\nIf the include parameter value is passed as details then networth with historical balances is returned. \r\n\r\naccountReconType input parameter is relevant for investment accounts, provided the reconciliation feature is turned on.\r\n\r\naccountReconType input parameter will be ignored when accountId(s) are passed.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/derived\/networth?interval=D",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "accountId",
                                "value": null,
                                "description": "account id",
                                "enabled": false
                            },
                            {
                                "key": "fromDate",
                                "value": null,
                                "description": "YYYY-MM-DD format",
                                "enabled": false
                            },
                            {
                                "key": "toDate",
                                "value": null,
                                "description": "YYYY-MM-DD format",
                                "enabled": false
                            },
                            {
                                "key": "interval",
                                "value": "D",
                                "description": "D-daily, W-weekly, M-mothly or Y-yearly\t"
                            },
                            {
                                "key": "include",
                                "value": null,
                                "description": "details",
                                "enabled": false
                            },
                            {
                                "key": "accountReconType",
                                "value": null,
                                "description": "UNRECONCILED (Default value), RECONCILED\t",
                                "enabled": false
                            },
                            {
                                "key": "skip",
                                "value": null,
                                "description": "skip (min 0)",
                                "enabled": false
                            },
                            {
                                "key": "top",
                                "value": null,
                                "description": "top(max 500)\t",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "192",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Thu, 31 May 2018 21:51:42 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Link",
                            "value": ": \/private-sdgengtest\/v1\/\/derived\/networth\/count?interval=D;rel=count",
                            "name": "Link",
                            "description": "Used to express a typed relationship with another resource, where the relation type is defined by RFC 5988"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "l1527803502290z3f32b000000NLtYU",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "8a4a365d-4fb2-444e-b7d8-65f7a5f4b48a",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Networth Summary successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "93d4da75-3e2f-49e0-82ff-a8715b106a75",
            "name": "Cobrand Logout",
            "url": "{{host}}\/cobrand\/logout",
            "description": "Implementation Notes:\r\n\r\nThe cobrand logout service is used to log out the cobrand. \r\n\r\nThis service does not return a response. The HTTP response code is 204 (Success with no content).",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                },
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}}",
                    "description": "cobSession has to be passed, received from cobrand login API response."
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "",
                            "if (responseCode.code != 204) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 204) {",
                            "    console.log(\"User Logout successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "f91e3e0a-ecde-44f0-833d-fed8ca1de98f",
            "responses": [
                {
                    "id": "0d430341-fe7d-4ce1-adf9-5cff7212965b",
                    "name": "Cobrand Logout",
                    "status": "No Content",
                    "mime": "",
                    "language": "json",
                    "text": "",
                    "responseCode": {
                        "code": 204,
                        "name": "No Content",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "2977bbdd-e963-46e0-a9f2-c930d8c7e781",
                        "method": "POST",
                        "headers": "Authorization: cobSession={{cobSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/cobrand\/logout",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}}",
                                "description": "cobSession has to be passed, received from cobrand login API response."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            },
                            {
                                "key": "Content-Type",
                                "value": "application\/json",
                                "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Cache-Control",
                            "value": "no-store, no-cache",
                            "name": "Cache-Control",
                            "description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 23 May 2018 20:49:39 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "b1527108579957s4G26L000000NLYYU",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/ysl",
                            "secure": true,
                            "value": "TFdCarXrkemscJAK0siBgAgTvRqYq_9ljLFl6SlJ.hpdl-r306-25",
                            "name": "JSESSIONID"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/",
                            "secure": true,
                            "value": "J-jzNUYyJ2TMfTmyHfxnU0qQ9AYfNlPRuIjdPSpC.hpdl-r306-25",
                            "name": "JSESSIONID"
                        }
                    ],
                    "request": "93d4da75-3e2f-49e0-82ff-a8715b106a75",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(204);\n});\n\nif (responseCode.code != 204) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 204) {\n    console.log(\"User Logout successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Api-Version: 1.1\nCobrand-Name: {{cobrandName}}\nAuthorization: cobSession={{cobSession}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "aa088e11-6872-4f2c-864c-12920aa00208",
            "name": "Get Transaction Categorization Rules",
            "url": "{{host}}\/transactions\/categories\/rules",
            "description": "Implementation Notes:\r\n\r\nThe get transaction categorization rule service is used to get all the categorization rules.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Transaction Categorization successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "98a0bf62-9a64-49df-a143-22c0213676cd",
            "responses": [
                {
                    "id": "d1a2d3a1-86ab-410e-8dfa-77bbb45cc30a",
                    "name": "Get Transaction Categorization Rules",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "[{\"userDefinedRuleId\":10003852,\"memId\":10174094,\"transactionCategorisationId\":2,\"rulePriority\":1,\"ruleClauses\":[{\"ruleClauseId\":10004254,\"userDefinedRuleId\":10003852,\"field\":\"amount\",\"operation\":\"numberGreaterThan\",\"fieldValue\":\"98\"},{\"ruleClauseId\":10004253,\"userDefinedRuleId\":10003852,\"field\":\"description\",\"operation\":\"stringContains\",\"fieldValue\":\"gift\"}],\"categoryLevelId\":3},{\"userDefinedRuleId\":10003853,\"memId\":10174094,\"transactionCategorisationId\":2,\"rulePriority\":2,\"ruleClauses\":[{\"ruleClauseId\":10004255,\"userDefinedRuleId\":10003853,\"field\":\"description\",\"operation\":\"stringContains\",\"fieldValue\":\"gift\"},{\"ruleClauseId\":10004256,\"userDefinedRuleId\":10003853,\"field\":\"amount\",\"operation\":\"numberGreaterThan\",\"fieldValue\":\"110\"}],\"ruleClauseArray\":[{\"ruleClauseId\":10004255,\"userDefinedRuleId\":10003853,\"field\":\"description\",\"operation\":\"stringContains\",\"fieldValue\":\"gift\"},{\"ruleClauseId\":10004256,\"userDefinedRuleId\":10003853,\"field\":\"amount\",\"operation\":\"numberGreaterThan\",\"fieldValue\":\"110\"}],\"categoryLevelId\":3}]",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "956834bd-be0f-4762-96cb-bdc0a3d45df2",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe get transaction categorization rule service is used to get all the categorization rules.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/transactions\/categories\/rules",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "1033",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 23 May 2018 21:02:59 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "v1527109379449r4o27k000000NLmYO",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/ysl",
                            "secure": true,
                            "value": "TFdCarXrkemscJAK0siBgAgTvRqYq_9ljLFl6SlJ.hpdl-r306-26",
                            "name": "JSESSIONID"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/",
                            "secure": true,
                            "value": "J-jzNUYyJ2TMfTmyHfxnU0qQ9AYfNlPRuIjdPSpC.hpdl-r306-25",
                            "name": "JSESSIONID"
                        }
                    ],
                    "request": "aa088e11-6872-4f2c-864c-12920aa00208",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Transaction Categorization successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "aabbc4bd-7c7d-4ef9-8a8a-81de6a9b994d",
            "name": "Get Transaction Summary",
            "url": "{{host}}\/derived\/transactionSummary?groupBy=CATEGORY&categoryType=INCOME",
            "description": "Implementation Notes:\r\n\r\nThe transaction summary service provides the summary values of transactions for the given date range by category type, high-level categories, or system-defined categories.\r\n\r\nYodlee has the transaction data stored for a day, month, year and week per category as per the availability of user's data. If the include parameter value is passed as details, then summary details will be returned depending on the interval passed-monthly is the default.\r\n\r\nNotes:\r\n1.\tDetails can be requested for only one system-defined category\r\n2.\tDates will not be respected for monthly, yearly, and weekly details\r\n3.\tWhen monthly details are requested, only the fromDate and toDate month will be respected\r\n4.\tWhen yearly details are requested, only the fromDate and toDate year will be respected\r\n5.\tFor weekly data points, details will be provided for every Sunday date available within the fromDate and toDate",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "accountId",
                    "value": null,
                    "description": "account id",
                    "enabled": false
                },
                {
                    "key": "groupBy",
                    "value": "CATEGORY",
                    "equals": true,
                    "description": "CATEGORY_TYPE, HIGH_LEVEL_CATEGORY or CATEGORY\t",
                    "enabled": true
                },
                {
                    "key": "categoryId",
                    "value": null,
                    "description": "comma separated categoryIds",
                    "enabled": false
                },
                {
                    "key": "fromDate",
                    "value": null,
                    "description": "YYYY-MM-DD format",
                    "enabled": false
                },
                {
                    "key": "toDate",
                    "value": null,
                    "description": "YYYY-MM-DD format",
                    "enabled": false
                },
                {
                    "key": "interval",
                    "value": null,
                    "description": "D-daily, W-weekly, M-mothly or Y-yearly\t",
                    "enabled": false
                },
                {
                    "key": "include",
                    "value": null,
                    "description": "details",
                    "enabled": false
                },
                {
                    "key": "includeUserCategory",
                    "value": null,
                    "description": "TRUE\/FALSE",
                    "enabled": false
                },
                {
                    "key": "categoryType",
                    "value": "INCOME",
                    "equals": true,
                    "description": "",
                    "enabled": true
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Transaction Summary successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "7ffe98e2-1acd-46c4-a0ca-d5c1ec74e91c",
            "responses": [
                {
                    "id": "04e6562f-8bec-4325-978f-1d082f1fffee",
                    "name": "Get Transaction Summary",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\r\n    \"holdingSummary\": [\r\n        {\r\n            \"classificationType\": \"STOCK TYPE\",\r\n            \"classificationValue\": \"Slow Growth\",\r\n            \"links\": {\r\n                \"holdings\": \"\/holdings?include=assetClassification&classificationType=STOCK%20TYPE&classificationValue=Slow%20Growth\"\r\n            },\r\n            \"value\": {\r\n                \"amount\": 300.0,\r\n                \"currency\": \"USD\"\r\n            }\r\n        },\r\n        {\r\n            \"classificationType\": \"STOCK TYPE\",\r\n            \"classificationValue\": \"High Yield\",\r\n            \"links\": {\r\n                \"holdings\": \"\/holdings?include=assetClassification&classificationType=STOCK%20TYPE&classificationValue=High%20Yield\"\r\n        \t\t},\r\n            \"value\": {\r\n                \"amount\": 700.0,\r\n                \"currency\": \"USD\"\r\n            }\r\n        },\r\n        {\r\n            \"classificationType\": \"COUNTRY\",\r\n            \"classificationValue\": \"United States\",\r\n            \"links\": {\r\n                \"holdings\": \"\/holdings?include=assetClassification&classificationType=COUNTRY&classificationValue=United%20States\"\r\n        \t   },\r\n            \"value\": {\r\n                \"amount\": 750.0,\r\n                \"currency\": \"USD\"\r\n            }\r\n        },\r\n        {\r\n            \"classificationType\": \"COUNTRY\",\r\n            \"classificationValue\": \"Germany\",\r\n            \"links\": {\r\n                \"holdings\": \"\/holdings?include=assetClassification&classificationType=COUNTRY&classificationValue=Germany\"\r\n        },\r\n            \"value\": {\r\n                \"amount\": 250.0,\r\n                \"currency\": \"USD\"\r\n            }\r\n        }\r\n    ]\r\n}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "0df302a0-a5c6-4294-a839-798b326917a8",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe transaction summary service provides the summary values of transactions for the given date range by category type, high-level categories, or system-defined categories.\r\n\r\nYodlee has the transaction data stored for a day, month, year and week per category as per the availability of user's data. If the include parameter value is passed as details, then summary details will be returned depending on the interval passed-monthly is the default.\r\n\r\nNotes:\r\n1.\tDetails can be requested for only one system-defined category\r\n2.\tDates will not be respected for monthly, yearly, and weekly details\r\n3.\tWhen monthly details are requested, only the fromDate and toDate month will be respected\r\n4.\tWhen yearly details are requested, only the fromDate and toDate year will be respected\r\n5.\tFor weekly data points, details will be provided for every Sunday date available within the fromDate and toDate",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/derived\/transactionSummary?groupBy=CATEGORY&categoryType=UNCATEGORIZE",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "accountId",
                                "value": null,
                                "description": "account id",
                                "enabled": false
                            },
                            {
                                "key": "groupBy",
                                "value": "CATEGORY",
                                "description": "CATEGORY_TYPE, HIGH_LEVEL_CATEGORY or CATEGORY\t"
                            },
                            {
                                "key": "categoryType",
                                "value": "UNCATEGORIZE",
                                "description": "INCOME, EXPENSE, TRANSFER, UNCATEGORIZE or DEFERRED_COMPENSATION"
                            },
                            {
                                "key": "categoryId",
                                "value": null,
                                "description": "comma separated categoryIds",
                                "enabled": false
                            },
                            {
                                "key": "fromDate",
                                "value": null,
                                "description": "YYYY-MM-DD format",
                                "enabled": false
                            },
                            {
                                "key": "toDate",
                                "value": null,
                                "description": "YYYY-MM-DD format",
                                "enabled": false
                            },
                            {
                                "key": "interval",
                                "value": null,
                                "description": "D-daily, W-weekly, M-mothly or Y-yearly\t",
                                "enabled": false
                            },
                            {
                                "key": "include",
                                "value": null,
                                "description": "details",
                                "enabled": false
                            },
                            {
                                "key": "includeUserCategory",
                                "value": null,
                                "description": "TRUE\/FALSE",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "2",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Thu, 31 May 2018 23:32:47 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "e1527809567105m28J105Y000000NLIYB",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "aabbc4bd-7c7d-4ef9-8a8a-81de6a9b994d",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Transaction Summary successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "ab3351b5-37bf-4ed1-820f-2f2a314fdfd9",
            "name": "Register User*",
            "url": "{{host}}\/user\/register",
            "description": "Implementation Notes:\r\n\r\nThe register user service is used to register a user in Yodlee.\r\n\r\nThe loginName cannot include spaces and must be between 3 and 150 characters.\r\n\r\nPassword must be at least 8 characters long and contain at least one upper case letter, one number and any of these special characters !@#$%^&*() \r\n\r\nPassword should not be same as the loginName and should not contain more than two recurring characters(e.g. aaa123 is an invalid password)\r\n\r\nThe permitted maximum length for password is 50.\r\n\r\nlocale passed must be one of the supported locales for the customer. \r\n\r\nCurrency provided in the input will be respected in the derived services and the amount fields in the response will be provided in the preferred currency.\r\n\r\nuserParam is accepted as a body parameter. \r\n\r\nNote: The content type has to be passed as application\/json for the body parameter.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                },
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}}"
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "id": "deb0b19d-dfc3-460b-8e35-dd3a38bb5716",
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "if (responseCode.code == 200) {",
                            "    pm.environment.set(\"userSession\", data.user.session.userSession);",
                            "    console.log(\"Register User successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"New password should not be same as old password\") {",
                            "    console.log(\"The new password is the same as the old one!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "66058555-3f3b-4a53-93db-f4b7492ea712",
            "responses": [
                {
                    "id": "2396e9c7-d09f-44a4-b300-79f3707de2b9",
                    "name": "Register User",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\n    \"user\": {\n        \"id\": 39111308,\n        \"loginName\": \"corbin1\",\n        \"name\": {\n            \"first\": \"corbin\",\n            \"last\": \"last\"\n        },\n        \"roleType\": \"INDIVIDUAL\",\n        \"session\": {\n            \"userSession\": \"09142017_0:99ab6c36ad309dbe080ff408ed4dfadb9818b41c5dfe35d6de92f516a4305c6f630ff209ebddacf95b5960144f5e42a6e504c0bf891edfe3eaa65ea3908cdabb\"\n        },\n        \"preferences\": {\n            \"currency\": \"USD\",\n            \"timeZone\": \"PST\",\n            \"dateFormat\": \"MM\/dd\/yyyy\",\n            \"locale\": \"en_US\"\n        }\n    }\n}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "2b2ff3ea-1382-49de-a588-705ae6ecc6c5",
                        "method": "POST",
                        "description": "Implementation Notes:\r\n\r\nThe register user service is used to register a user in Yodlee.\r\n\r\nThe loginName cannot include spaces and must be between 3 and 150 characters.\r\n\r\nPassword must be at least 8 characters long and contain at least one upper case letter, one number and any of these special characters !@#$%^&*() \r\n\r\nPassword should not be same as the loginName and should not contain more than two recurring characters(e.g. aaa123 is an invalid password)\r\n\r\nThe permitted maximum length for password is 50.\r\n\r\nlocale passed must be one of the supported locales for the customer. \r\n\r\nCurrency provided in the input will be respected in the derived services and the amount fields in the response will be provided in the preferred currency.\r\n\r\nuserParam is accepted as a body parameter. \r\n\r\nNote: The content type has to be passed as application\/json for the body parameter.",
                        "headers": "Content-Type: application\/json\nAuthorization: cobSession={{cobSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "{\r\n    \"user\":{\r\n        \"loginName\":\"corbin3\",\r\n        \"password\":\"TEST@123\",\r\n        \"email\":\"x@x.x\",\r\n        \"preferences\":{\r\n            \"currency\":\"USD\",\r\n            \"timeZone\":\"PST\",\r\n            \"dateFormat\":\"MM\/dd\/yyyy\",\r\n            \"locale\":\"en_US\"\r\n        }\r\n    }\r\n}",
                        "url": "{{host}}\/user\/register",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}}"
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "373",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 30 May 2018 22:09:10 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "q1527718150122L3d31l000000NLTYo",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "ab3351b5-37bf-4ed1-820f-2f2a314fdfd9",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\nif (responseCode.code == 200) {\n    pm.environment.set(\"userSession\", data.user.session.userSession);\n    console.log(\"Register User successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"New password should not be same as old password\") {\n    console.log(\"The new password is the same as the old one!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "{\r\n    \"user\":{\r\n        \"loginName\":\"apoorv\",\r\n        \"password\":\"Peace@123\",\r\n        \"email\":\"ironman@avengers.com\",\r\n        \"preferences\":{\r\n            \"currency\":\"USD\",\r\n            \"timeZone\":\"PST\",\r\n            \"dateFormat\":\"MM\/dd\/yyyy\",\r\n            \"locale\":\"en_US\"\r\n        }\r\n    }\r\n}",
            "headers": "Content-Type: application\/json\nAuthorization: cobSession={{cobSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "ab796279-d48b-4943-9cc5-36279857a2b2",
            "name": "Get Holding Type List",
            "url": "{{host}}\/holdings\/holdingTypeList",
            "description": "Implementation Notes:\r\nThe get holding types list service is used to get the supported holding types.\r\n\r\nThe response includes different holding types such as future, moneyMarketFund, stock, etc.\r\n\r\nThis service should be invoked by passing cobrand session only and returns the supported holding types.\r\n\r\nProviding a user session parameter causes an error.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}}",
                    "description": "cobSession has to be passed, received from cobrand login API response."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Holding Type successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "e220bb01-d3de-4034-9a1f-3099a5d0afc6",
            "responses": [
                {
                    "id": "848a7301-c196-400c-b9f8-2bba88ba4452",
                    "name": "Get Holding Type List",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"holdingType\":[\"CD\",\"ETF\",\"ETN\",\"bond\",\"commodity\",\"currency\",\"employeeStockOption\",\"future\",\"insuranceAnnuity\",\"moneyMarketFund\",\"mutualFund\",\"option\",\"other\",\"preferredStock\",\"remic\",\"stock\",\"unitInvestmentTrust\",\"unknown\",\"warrants\"]}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "01d3c65c-7ec6-457f-b2d6-529b7af0a1ad",
                        "method": "GET",
                        "description": "Implementation Notes:\r\nThe get holding types list service is used to get the supported holding types.\r\n\r\nThe response includes different holding types such as future, moneyMarketFund, stock, etc.\r\n\r\nThis service should be invoked by passing cobrand session only and returns the supported holding types.\r\n\r\nProviding a user session parameter causes an error.",
                        "headers": "Authorization: cobSession={{cobSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/holdings\/holdingTypeList",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}}",
                                "description": "cobSession has to be passed, received from cobrand login API response."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "238",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Thu, 31 May 2018 21:52:29 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "d1527803549305I3S32t000000NLGYw",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "ab796279-d48b-4943-9cc5-36279857a2b2",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Holding Type successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "aebfed28-d993-4eae-a081-9a4db74e95e4",
            "name": "Get Public Key*",
            "url": "{{host}}\/cobrand\/publicKey",
            "description": "Implementation Notes:\r\n\r\nThe get public key service provides the customer the public key that should be used to encrypt the user credentials before sending it to Yodlee.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                },
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}}",
                    "description": "cobSession has to be passed, received from cobrand login API response."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "if (responseCode.code != 200) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Public Key successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "f91e3e0a-ecde-44f0-833d-fed8ca1de98f",
            "responses": [
                {
                    "id": "963d629d-2a43-4ede-843a-46c8382d9722",
                    "name": "Get Public Key",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\r\n\"keyAlias\":\"03072_9\",\r\n\"keyAsPemString\":\"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOC\\n-----END PUBLIC KEY-----\\n\"\r\n}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "2a08fcf7-3676-40e1-8b4d-5ea50b601bc8",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe get public key service provides the customer the public key that should be used to encrypt the user credentials before sending it to Yodlee.",
                        "headers": "Api-Version: 1.1\nCobrand-Name: {{cobrandName}}\nAuthorization: cobSession={{cobSession}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/cobrand\/publicKey",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            },
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}}"
                            }
                        ]
                    },
                    "headers": [],
                    "cookies": [],
                    "request": "aebfed28-d993-4eae-a081-9a4db74e95e4",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nif (responseCode.code != 200) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 200) {\n    console.log(\"Get Public Key successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Api-Version: 1.1\nCobrand-Name: {{cobrandName}}\nAuthorization: cobSession={{cobSession}}\n",
            "pathVariables": []
        },
        {
            "id": "b362e39d-68bd-4c50-a36d-db877668c275",
            "name": "Update Transaction",
            "url": "{{host}}\/transactions\/87920274",
            "description": "Implementation Notes:\r\n\r\nThe update transaction service is used to update the categoryName,description, memo for a transaction.\r\n\r\nThe HTTP response code is 204 (Success without content).",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "",
                            "if (responseCode.code != 204) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 204) {",
                            "    console.log(\"Update Transaction successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Internal Core Error has occurred\") {",
                            "    console.log(\"An internal core error has ocurred!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "98a0bf62-9a64-49df-a143-22c0213676cd",
            "responses": [
                {
                    "id": "923338fb-8185-4b61-9ec5-6cecba885cc1",
                    "name": "Update Transaction",
                    "status": "No Content",
                    "mime": "",
                    "language": "json",
                    "text": "",
                    "responseCode": {
                        "code": 204,
                        "name": "No Content",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "c069b43f-4232-4a84-b416-7601b0ea670a",
                        "method": "PUT",
                        "description": "Implementation Notes:\r\n\r\nThe update transaction service is used to update the categoryName,description, memo for a transaction.\r\n\r\nThe HTTP response code is 204 (Success without content).",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nContent-Type: application\/json\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "{\r\n\t\"transaction\":{\r\n\t\t\"container\":\"bank\",\r\n\t\t\"categoryId\": 32,\r\n\t\t\"categorySource\":\"SYSTEM\",\r\n\t\t\"description\":{\r\n\t\t\t\"consumer\":\"Electronic Purchases\"\r\n\t\t},\r\n\t\t\"memo\":\"acsd\"\r\n\t}\r\n}",
                        "url": "{{host}}\/transactions\/87920274",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Cache-Control",
                            "value": "no-store, no-cache",
                            "name": "Cache-Control",
                            "description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 23 May 2018 21:20:43 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "L1527110441661E4E26d000000NLpYx",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/ysl",
                            "secure": true,
                            "value": "TFdCarXrkemscJAK0siBgAgTvRqYq_9ljLFl6SlJ.hpdl-r306-25",
                            "name": "JSESSIONID"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/",
                            "secure": true,
                            "value": "J-jzNUYyJ2TMfTmyHfxnU0qQ9AYfNlPRuIjdPSpC.hpdl-r306-25",
                            "name": "JSESSIONID"
                        }
                    ],
                    "request": "b362e39d-68bd-4c50-a36d-db877668c275",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(204);\n});\n\nif (responseCode.code != 204) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 204) {\n    console.log(\"Update Transaction successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Internal Core Error has occurred\") {\n    console.log(\"An internal core error has ocurred!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "{\r\n\t\"transaction\":{\r\n\t\t\"container\":\"bank\",\r\n\t\t\"categoryId\": 32,\r\n\t\t\"categorySource\":\"SYSTEM\",\r\n\t\t\"description\":{\r\n\t\t\t\"consumer\":\"Electronic Purchases\"\r\n\t\t},\r\n\t\t\"memo\":\"acsd\"\r\n\t}\r\n}",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nContent-Type: application\/json\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "b3b3e4de-8e7d-466f-8ba9-e5ed094242e6",
            "name": "Create Transaction Categorization Rule",
            "url": "{{host}}\/transactions\/categories\/rules?ruleParam={\n\t\"rule\" : {\n\t\t\"categoryId\" : 2,\n\t\t\"priority\" : 1,\n\t\t\"source\" : \"SYSTEM\",\n\t\t\"ruleClause\" : [\n\t\t\t{\"field\" : \"description\", \"operation\" : \"stringContains\", \"value\" : \"gift\"},\n\t\t\t{\"field\" : \"amount\", \"operation\" : \"numberGreaterThan\", \"value\" : \"100\"}\n\t\t]\n\t}\n}",
            "description": "Implementation Notes:\r\n\r\nThe create transaction categorization rule service is used to create a categorization rule for both system-defined category as well as user-defined category.\r\n\r\nruleParam is a JSON input that contains the following fields:\r\n\r\n categoryId - This field is mandatory and numeric\r\n \r\n priority - This field is optional and numeric.Priority decides the order in which the rule gets applied on transactions.\r\n \r\n ruleClause - This field is mandatory and should contain at least one rule\r\n \r\n field - The value can be description or amount\r\n \r\n   If the field value is description then,\r\n   \r\n     1. operation - value can be stringEquals or stringContains\r\n     \r\n     2. value - value should be min of 3 and max of 50 characters\r\n     \r\n   If the field value is amount then, \r\n   \r\n     1. operation - value can be numberEquals, numberLessThan, numberLessThanEquals, numberGreaterThan or numberGreaterThanEquals\r\n     \r\n     2. value - min value 0 and a max value of 99999999999.99 is allowed\r\n         \r\nThe HTTP response code is 201 (Created Successfully).",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ruleParam",
                    "value": "{\n\t\"rule\" : {\n\t\t\"categoryId\" : 2,\n\t\t\"priority\" : 1,\n\t\t\"source\" : \"SYSTEM\",\n\t\t\"ruleClause\" : [\n\t\t\t{\"field\" : \"description\", \"operation\" : \"stringContains\", \"value\" : \"gift\"},\n\t\t\t{\"field\" : \"amount\", \"operation\" : \"numberGreaterThan\", \"value\" : \"100\"}\n\t\t]\n\t}\n}",
                    "description": "rules (JSON format) to categorize the transactions"
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "id": "187642ee-8f0a-4689-a37d-8bd72eff4777",
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(201);",
                            "});",
                            "",
                            "if (responseCode.code != 201) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 201) {",
                            "    console.log(\"Create Transaction Categorization Rule successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "98a0bf62-9a64-49df-a143-22c0213676cd",
            "responses": [
                {
                    "id": "0c251296-eb53-4e40-9936-918313006c42",
                    "name": "Create Transaction Categorization Rule",
                    "status": "Created",
                    "mime": "",
                    "language": "json",
                    "text": "",
                    "responseCode": {
                        "code": 201,
                        "name": "Created",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "61b3c91b-7842-45f4-bae5-e37f66110519",
                        "method": "POST",
                        "description": "Implementation Notes:\r\n\r\nThe create transaction categorization rule service is used to create a categorization rule for both system-defined category as well as user-defined category.\r\n\r\nruleParam is a JSON input that contains the following fields:\r\n\r\n categoryId - This field is mandatory and numeric\r\n \r\n priority - This field is optional and numeric.Priority decides the order in which the rule gets applied on transactions.\r\n \r\n ruleClause - This field is mandatory and should contain at least one rule\r\n \r\n field - The value can be description or amount\r\n \r\n   If the field value is description then,\r\n   \r\n     1. operation - value can be stringEquals or stringContains\r\n     \r\n     2. value - value should be min of 3 and max of 50 characters\r\n     \r\n   If the field value is amount then, \r\n   \r\n     1. operation - value can be numberEquals, numberLessThan, numberLessThanEquals, numberGreaterThan or numberGreaterThanEquals\r\n     \r\n     2. value - min value 0 and a max value of 99999999999.99 is allowed\r\n         \r\nThe HTTP response code is 201 (Created Successfully).",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/transactions\/categories\/rules?ruleParam={\n\t\"rule\" : {\n\t\t\"categoryId\" : 2,\n\t\t\"priority\" : 1,\n\t\t\"source\" : \"SYSTEM\",\n\t\t\"ruleClause\" : [\n\t\t\t{\"field\" : \"description\", \"operation\" : \"stringContains\", \"value\" : \"gift\"},\n\t\t\t{\"field\" : \"amount\", \"operation\" : \"numberGreaterThan\", \"value\" : \"100\"}\n\t\t]\n\t}\n}",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "ruleParam",
                                "value": "{\n\t\"rule\" : {\n\t\t\"categoryId\" : 2,\n\t\t\"priority\" : 1,\n\t\t\"source\" : \"SYSTEM\",\n\t\t\"ruleClause\" : [\n\t\t\t{\"field\" : \"description\", \"operation\" : \"stringContains\", \"value\" : \"gift\"},\n\t\t\t{\"field\" : \"amount\", \"operation\" : \"numberGreaterThan\", \"value\" : \"100\"}\n\t\t]\n\t}\n}",
                                "description": "rules (JSON format) to categorize the transactions"
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            },
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Cache-Control",
                            "value": "no-store, no-cache",
                            "name": "Cache-Control",
                            "description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "0",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 23 May 2018 21:11:43 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "N1527109903570l4F27F000000NLKYm",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/ysl",
                            "secure": true,
                            "value": "TFdCarXrkemscJAK0siBgAgTvRqYq_9ljLFl6SlJ.hpdl-r306-26",
                            "name": "JSESSIONID"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/",
                            "secure": true,
                            "value": "J-jzNUYyJ2TMfTmyHfxnU0qQ9AYfNlPRuIjdPSpC.hpdl-r306-25",
                            "name": "JSESSIONID"
                        }
                    ],
                    "request": "b3b3e4de-8e7d-466f-8ba9-e5ed094242e6",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(201);\n});\n\nif (responseCode.code != 201) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 201) {\n    console.log(\"Create Transaction Categorization Rule successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "b8f6b7e2-6d6a-42a1-8d41-d41753f89876",
            "name": "Update Category",
            "url": "{{host}}\/transactions\/categories",
            "description": "Implementation Notes:\r\n\r\nThe update transaction categories service is used to update the transaction category name for a high level category, a system-defined category and a user-defined category.\r\n\r\nThe renamed category can be set back to the original name by passing an empty string for categoryName.\r\n\r\nThe categoryName can accept minimum of 1, maximum of 50 alphanumeric or special characters.\r\n\r\nThe HTTP response code is 204 (Success without content).",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "",
                            "if (responseCode.code != 204) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 204) {",
                            "    console.log(\"Update Category successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Internal Core Error has occurred\") {",
                            "    console.log(\"An internal core error has ocurred!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "98a0bf62-9a64-49df-a143-22c0213676cd",
            "responses": [
                {
                    "id": "ccef074b-fe78-4591-8ee7-762ec76e2f0d",
                    "name": "Update Category",
                    "status": "No Content",
                    "mime": "",
                    "language": "json",
                    "text": "",
                    "responseCode": {
                        "code": 204,
                        "name": "No Content",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "2b2c34e6-d9b3-42ae-b730-5bb4a2b7d8d7",
                        "method": "PUT",
                        "description": "Implementation Notes:\r\n\r\nThe update transaction categories service is used to update the transaction category name for a high level category, a system-defined category and a user-defined category.\r\n\r\nThe renamed category can be set back to the original name by passing an empty string for categoryName.\r\n\r\nThe categoryName can accept minimum of 1, maximum of 50 alphanumeric or special characters.\r\n\r\nThe HTTP response code is 204 (Success without content).",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nContent-Type: application\/json\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "{\r\n\t\"id\":2,\r\n\t\"source\":\"SYSTEM\",\r\n\t\"categoryName\":\"TruckExpenses\" \r\n}",
                        "url": "{{host}}\/transactions\/categories",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Cache-Control",
                            "value": "no-store, no-cache",
                            "name": "Cache-Control",
                            "description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 23 May 2018 21:21:01 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "H1527110461395A4k26O000000NLFYy",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/ysl",
                            "secure": true,
                            "value": "TFdCarXrkemscJAK0siBgAgTvRqYq_9ljLFl6SlJ.hpdl-r306-25",
                            "name": "JSESSIONID"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/",
                            "secure": true,
                            "value": "J-jzNUYyJ2TMfTmyHfxnU0qQ9AYfNlPRuIjdPSpC.hpdl-r306-25",
                            "name": "JSESSIONID"
                        }
                    ],
                    "request": "b8f6b7e2-6d6a-42a1-8d41-d41753f89876",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(204);\n});\n\nif (responseCode.code != 204) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 204) {\n    console.log(\"Update Category successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Internal Core Error has occurred\") {\n    console.log(\"An internal core error has ocurred!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "{\r\n\t\"id\":2,\r\n\t\"source\":\"SYSTEM\",\r\n\t\"categoryName\":\"TruckExpenses\" \r\n}",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nContent-Type: application\/json\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "bdb2e1b9-8f3e-4758-8866-6a26249344f6",
            "name": "Get Account Details",
            "url": "{{host}}\/accounts?accountId={{accountId}}&container={{container}}",
            "description": "Implementation Notes:\r\n\r\nThe get account details service provides detailed information of an account.\r\n\r\nreconInfo is relevant for investment accounts,provided the reconciliation feature is turned on.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "accountId",
                    "value": "{{accountId}}",
                    "description": "account id"
                },
                {
                    "key": "container",
                    "value": "{{container}}",
                    "description": "bank\/creditCard\/investment\/insurance\/loan\/reward\/bill\/realEstate\/otherAssets\/otherLiabilities\t"
                },
                {
                    "key": "include",
                    "value": null,
                    "description": "profile, holder, fullAccountNumber\t",
                    "enabled": false
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Accounts Details successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}",
                            "if (responseBody == \"{}\") {",
                            "    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "fb0af4be-ff32-4bf6-afbd-5652a4e6ca51",
            "responses": [
                {
                    "id": "76e43fbb-bc21-4db1-bc72-a046ae148f48",
                    "name": "Get Account Details",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"account\":[{\"includeInNetWorth\":true,\"accountName\":\"BNP Account\",\"accountType\":\"BROKERAGE_CASH\",\"isManual\":true,\"memo\":\"This is an investment account\",\"accountNumber\":\"1233\",\"accountStatus\":\"ACTIVE\",\"lastUpdated\":\"2018-05-30T22:24:01Z\",\"isAsset\":true,\"createdDate\":\"2018-05-30T22:24:01Z\",\"aggregationSource\":\"USER\",\"balance\":{\"amount\":84699,\"currency\":\"USD\"},\"providerId\":\"7634\",\"providerAccountId\":18377688,\"CONTAINER\":\"investment\",\"nickname\":\"Flood Cash\",\"id\":37252300,\"providerName\":\"Custom Bank\"}]}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "1e3d2356-8556-4fec-8d3d-3c0addaf216b",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe get account details service provides detailed information of an account.\r\n\r\nreconInfo is relevant for investment accounts,provided the reconciliation feature is turned on.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/accounts?accountId={{accountId}}&container={{container}}",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "accountId",
                                "value": "{{accountId}}",
                                "description": "account id"
                            },
                            {
                                "key": "container",
                                "value": "{{container}}",
                                "description": "bank\/creditCard\/investment\/insurance\/loan\/reward\/bill\/realEstate\/otherAssets\/otherLiabilities\t"
                            },
                            {
                                "key": "include",
                                "value": null,
                                "description": "profile, holder, fullAccountNumber\t",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "503",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 30 May 2018 22:26:50 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "t1527719210773W3J31i000000NLBYm",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "bdb2e1b9-8f3e-4758-8866-6a26249344f6",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Accounts Details successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}\nif (responseBody == \"{}\") {\n    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "c481fd45-9044-468d-ba01-acac48e5fb90",
            "name": "Update Accounts",
            "url": "{{host}}\/accounts\/{{accountId}}",
            "description": "Implementation Notes:\r\n\r\nThe update account service is used to update manual and aggregated accounts.\r\n\r\nThe HTTP response code is 204 (Success without content).\r\n\r\nUpdate manual account support is available for bank, card, investment, insurance, loan and bills container only.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                }
            ],
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "",
                            "if (responseCode.code != 204) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 204) {",
                            "    console.log(\"Update Accounts successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Internal Core Error has occurred\") {",
                            "    console.log(\"An internal core error has ocurred!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "fb0af4be-ff32-4bf6-afbd-5652a4e6ca51",
            "responses": [
                {
                    "id": "9a86d7cf-0e7f-4092-8e55-b5da24e51fa1",
                    "name": "Update Accounts",
                    "status": "No Content",
                    "mime": "",
                    "language": "json",
                    "text": "",
                    "responseCode": {
                        "code": 204,
                        "name": "No Content",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "4eae8f5c-8ec4-4d18-a59e-e2cdbe778c94",
                        "method": "PUT",
                        "description": "Implementation Notes:\r\n\r\nThe update account service is used to update manual and aggregated accounts.\r\n\r\nThe HTTP response code is 204 (Success without content).\r\n\r\nUpdate manual account support is available for bank, card, investment, insurance, loan and bills container only.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "{\r\n\t\"account\": {\r\n\t\t\"nickname\": \"Flood Cash\",\r\n\t\t\"accountStatus\": \"ACTIVE\",\r\n\t\t\"includeInNetWorth\": \"TRUE\",\r\n\t\t\"memo\": \"Personal Account\"\r\n\t}\r\n}",
                        "url": "{{host}}\/accounts\/{{accountId}}",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            },
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Cache-Control",
                            "value": "no-store, no-cache",
                            "name": "Cache-Control",
                            "description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 30 May 2018 22:27:39 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "P1527719258801s3H31y000000NLsYb",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "c481fd45-9044-468d-ba01-acac48e5fb90",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(204);\n});\n\nif (responseCode.code != 204) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 204) {\n    console.log(\"Update Accounts successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Internal Core Error has occurred\") {\n    console.log(\"An internal core error has ocurred!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "{\r\n\t\"account\": {\r\n\t\t\"nickname\": \"Flood Cash\",\r\n\t\t\"accountStatus\": \"ACTIVE\",\r\n\t\t\"includeInNetWorth\": \"TRUE\",\r\n\t\t\"memo\": \"Personal Account\"\r\n\t}\r\n}",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "cfba7837-04fb-403b-bed3-f91490f9718a",
            "name": "Run All Transaction Categorization Rules",
            "url": "{{host}}\/transactions\/categories\/rules?action=run",
            "description": "Implementation Notes:\r\n\r\nThe run all transaction categorization rule service runs all the transaction categorization rules defined by the user to categorize the transactions.\r\n\r\nThe HTTP response code is 204 (Success without content).",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "action",
                    "value": "run"
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "",
                            "if (responseCode.code != 204) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 204) {",
                            "    console.log(\"Run All Transaction Categorization Rules successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "98a0bf62-9a64-49df-a143-22c0213676cd",
            "responses": [
                {
                    "id": "0b5d4f40-558f-4988-b5a5-ad7cfba52291",
                    "name": "Run All Transaction Categorization Rules",
                    "status": "No Content",
                    "mime": "",
                    "language": "json",
                    "text": "",
                    "responseCode": {
                        "code": 204,
                        "name": "No Content",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "aae6ac10-4c0f-47f3-8391-4b67bea34501",
                        "method": "POST",
                        "description": "Implementation Notes:\r\n\r\nThe run all transaction categorization rule service runs all the transaction categorization rules defined by the user to categorize the transactions.\r\n\r\nThe HTTP response code is 204 (Success without content).",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/transactions\/categories\/rules?action=run",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "action",
                                "value": "run"
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Cache-Control",
                            "value": "no-store, no-cache",
                            "name": "Cache-Control",
                            "description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 23 May 2018 21:16:03 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "r1527110163564x4X27n000000NLeYp",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/ysl",
                            "secure": true,
                            "value": "TFdCarXrkemscJAK0siBgAgTvRqYq_9ljLFl6SlJ.hpdl-r306-26",
                            "name": "JSESSIONID"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/",
                            "secure": true,
                            "value": "J-jzNUYyJ2TMfTmyHfxnU0qQ9AYfNlPRuIjdPSpC.hpdl-r306-25",
                            "name": "JSESSIONID"
                        }
                    ],
                    "request": "cfba7837-04fb-403b-bed3-f91490f9718a",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(204);\n});\n\nif (responseCode.code != 204) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 204) {\n    console.log(\"Run All Transaction Categorization Rules successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "d6dc4956-2509-4414-bb8e-8fd47dc883ce",
            "name": "Get Transactions Count",
            "url": "{{host}}\/transactions\/count?fromDate=2013-01-01",
            "description": "Implementation Notes:\r\n\r\nThe count service provides the total number of transactions of a particular user.\r\n\r\naccountReconType input parameter is relevant for investment accounts, provided the reconciliation feature is turned on.\r\n\r\naccountReconType input parameter will be ignored when container value passed is other than \"INVESTMENT\".\r\n\r\naccountReconType input parameter will be ignored when accountId(s) are passed.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "container",
                    "value": null,
                    "description": "bank\/creditCard\/investment\/insurance\/loan",
                    "enabled": false
                },
                {
                    "key": "baseType",
                    "value": null,
                    "description": "DEBIT\/CREDIT",
                    "enabled": false
                },
                {
                    "key": "keyword",
                    "value": null,
                    "description": "transaction search text",
                    "enabled": false
                },
                {
                    "key": "accountId",
                    "value": null,
                    "description": "comma separated accountIds",
                    "enabled": false
                },
                {
                    "key": "fromDate",
                    "value": "2013-01-01",
                    "description": "transaction from date (YYYY-MM-DD)"
                },
                {
                    "key": "toDate",
                    "value": null,
                    "description": "transaction end date (YYYY-MM-DD)",
                    "enabled": false
                },
                {
                    "key": "categoryId",
                    "value": null,
                    "description": "comma separated categoryIds\t",
                    "enabled": false
                },
                {
                    "key": "highLevelCategoryId",
                    "value": null,
                    "description": "comma separated highLevelCategoryIds",
                    "enabled": false
                },
                {
                    "key": "type",
                    "value": " ",
                    "description": "transaction type (SELL,SWEEP, etc.)\t",
                    "enabled": false
                },
                {
                    "key": "categoryType",
                    "value": null,
                    "description": "transaction category type (UNCATEGORIZE, INCOME, TRANSFER, EXPENSE or DEFERRED_COMPENSATION)\t",
                    "enabled": false
                },
                {
                    "key": "accountReconType",
                    "value": null,
                    "description": "UNRECONCILED (Default value), RECONCILED\t",
                    "enabled": false
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Transactions Count successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}",
                            "if (responseBody == \"{}\") {",
                            "    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "98a0bf62-9a64-49df-a143-22c0213676cd",
            "responses": [
                {
                    "id": "c7bc0136-a429-4b73-998c-3e4645a51abc",
                    "name": "Get Transactions Count",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"transaction\":{\"TOTAL\":{\"count\":12}}}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "668b01bd-adfb-4af3-a3d5-c16c7730f693",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe count service provides the total number of transactions of a particular user.\r\n\r\naccountReconType input parameter is relevant for investment accounts, provided the reconciliation feature is turned on.\r\n\r\naccountReconType input parameter will be ignored when container value passed is other than \"INVESTMENT\".\r\n\r\naccountReconType input parameter will be ignored when accountId(s) are passed.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/transactions\/count?fromDate=2013-01-01",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "container",
                                "value": null,
                                "description": "bank\/creditCard\/investment\/insurance\/loan",
                                "enabled": false
                            },
                            {
                                "key": "baseType",
                                "value": null,
                                "description": "DEBIT\/CREDIT",
                                "enabled": false
                            },
                            {
                                "key": "keyword",
                                "value": null,
                                "description": "transaction search text",
                                "enabled": false
                            },
                            {
                                "key": "accountId",
                                "value": null,
                                "description": "comma separated accountIds",
                                "enabled": false
                            },
                            {
                                "key": "fromDate",
                                "value": "2013-01-01",
                                "description": "transaction from date (YYYY-MM-DD)"
                            },
                            {
                                "key": "toDate",
                                "value": null,
                                "description": "transaction end date (YYYY-MM-DD)",
                                "enabled": false
                            },
                            {
                                "key": "categoryId",
                                "value": null,
                                "description": "comma separated categoryIds\t",
                                "enabled": false
                            },
                            {
                                "key": "highLevelCategoryId",
                                "value": null,
                                "description": "comma separated highLevelCategoryIds",
                                "enabled": false
                            },
                            {
                                "key": "type",
                                "value": " ",
                                "description": "transaction type (SELL,SWEEP, etc.)\t",
                                "enabled": false
                            },
                            {
                                "key": "categoryType",
                                "value": null,
                                "description": "transaction category type (UNCATEGORIZE, INCOME, TRANSFER, EXPENSE or DEFERRED_COMPENSATION)\t",
                                "enabled": false
                            },
                            {
                                "key": "accountReconType",
                                "value": null,
                                "description": "UNRECONCILED (Default value), RECONCILED\t",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "38",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 23 May 2018 21:02:27 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "c1527109347305S4x27m000000NLXYZ",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/ysl",
                            "secure": true,
                            "value": "TFdCarXrkemscJAK0siBgAgTvRqYq_9ljLFl6SlJ.hpdl-r306-26",
                            "name": "JSESSIONID"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/",
                            "secure": true,
                            "value": "J-jzNUYyJ2TMfTmyHfxnU0qQ9AYfNlPRuIjdPSpC.hpdl-r306-25",
                            "name": "JSESSIONID"
                        }
                    ],
                    "request": "d6dc4956-2509-4414-bb8e-8fd47dc883ce",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Transactions Count successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}\nif (responseBody == \"{}\") {\n    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "d9338ec5-e9c5-4a08-9619-d494c5955db5",
            "name": "Add Account",
            "url": "{{host}}\/providerAccounts?providerId=16441",
            "description": "Implementation Notes:\r\n\r\n(1) The add account service is used to link the user's account with the provider site to the Yodlee system. \r\n\r\n(2) Providers that need multifactor authentication are also supported by this service.\r\n\r\n(3) The loginForm or the field array are the objects under the provider object which is obtained from the get provider details service response. The credentials provided by the user should be embedded in the loginForm or field array object.\r\n\r\nNote: If you are testing PKI feature, for encrypting the credentials use encryption utility.\r\n\r\n(4) The response includes the Yodlee generated ID (providerAccountId) for the account along with the refresh information.\r\n\r\n(5) The get provider account details service has to be polled continuously till the account addition status is FAILED or PARTIAL_SUCCESS or SUCCESS\r\n\r\n(6) If the customer has not subscribed to the event notification for accounts that need multifactor authentication (MFA), the get providerAccount service has to be called continuously till the login form (supported types are token, question & answer, and captcha) is returned in the response.\r\n\r\n(7) The update account service should be called to post the MFA information to continue adding the account. \r\n\r\n(8) Refer to the add account flow chart for implementation.\r\n\r\n(9) This API has webhooks support. If the customer has subscribed to the REFRESH event notification and invoked this API for adding an account, relevant notifications will be sent to the customer. \r\n\r\nNote: The content type has to be passed as application\/json for the body parameter.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "providerId",
                    "value": "16441"
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "id": "3c446d27-b812-4fb1-b495-187774289775",
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 201\", function () {",
                            "    pm.response.to.have.status(201);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "var dataForm = JSON.parse(pm.environment.get(\"loginForm\"));",
                            "",
                            "if (responseCode.code == 201) {",
                            "    console.log(\"Add Account successful.\");",
                            "    for (var form in dataForm[0].row) {",
                            "        for (var field in dataForm[0].row[form].field) {",
                            "            pm.environment.unset(pm.environment.get(\"providerId\")+\"_\"+field+\"_\"+dataForm[0].row[form].label);",
                            "        }",
                            "    }",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                },
                {
                    "listen": "prerequest",
                    "script": {
                        "id": "e76f60b8-592f-4d1e-bd66-0ce67fed4284",
                        "type": "text\/javascript",
                        "exec": [
                            "var data = JSON.parse(pm.environment.get(\"loginForm\"));",
                            "",
                            "for (var form in data[0].row) {",
                            "    for (var field in data[0].row[form].field) {",
                            "        data[0].row[form].field[field].value = pm.environment.get(pm.environment.get(\"providerId\")+\"_\"+field+\"_\"+data[0].row[form].label);",
                            "    }",
                            "}",
                            "",
                            "pm.environment.set(\"loginForm\", JSON.stringify(data));"
                        ]
                    }
                }
            ],
            "folder": "75abde44-be48-4c3b-841f-1025a3c1bafd",
            "responses": [
                {
                    "id": "f5a8d653-a041-4b07-8624-c44b3ebfb543",
                    "name": "Add Account",
                    "status": "Created",
                    "mime": "",
                    "language": "json",
                    "text": "{\"providerAccount\":{\"id\":18425701,\"aggregationSource\":\"USER\",\"refreshInfo\":{\"statusCode\":801,\"statusMessage\":\"ADD_IN_PROGRESS\",\"status\":\"IN_PROGRESS\",\"additionalStatus\":\"LOGIN_IN_PROGRESS\"}}}",
                    "responseCode": {
                        "code": 201,
                        "name": "Created",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "e5d2c513-5845-4f9b-a232-f733247f5682",
                        "method": "POST",
                        "description": "Implementation Notes:\r\n\r\n(1) The add account service is used to link the user's account with the provider site to the Yodlee system. \r\n\r\n(2) Providers that need multifactor authentication are also supported by this service.\r\n\r\n(3) The loginForm or the field array are the objects under the provider object which is obtained from the get provider details service response. The credentials provided by the user should be embedded in the loginForm or field array object.\r\n\r\nNote: If you are testing PKI feature, for encrypting the credentials use encryption utility.\r\n\r\n(4) The response includes the Yodlee generated ID (providerAccountId) for the account along with the refresh information.\r\n\r\n(5) The get provider account details service has to be polled continuously till the account addition status is FAILED or PARTIAL_SUCCESS or SUCCESS\r\n\r\n(6) If the customer has not subscribed to the event notification for accounts that need multifactor authentication (MFA), the get providerAccount service has to be called continuously till the login form (supported types are token, question & answer, and captcha) is returned in the response.\r\n\r\n(7) The update account service should be called to post the MFA information to continue adding the account. \r\n\r\n(8) Refer to the add account flow chart for implementation.\r\n\r\n(9) This API has webhooks support. If the customer has subscribed to the REFRESH event notification and invoked this API for adding an account, relevant notifications will be sent to the customer. \r\n\r\nNote: The content type has to be passed as application\/json for the body parameter.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "{\r\n\t\"loginForm\": {\r\n\t\t\"id\": 16103,\r\n\t\t\"forgetPasswordURL\": \"http:\/\/64.14.28.129\/dag\/index.do\",\r\n\t\t\"formType\": \"login\",\r\n\t\t\"row\": [{\r\n\t\t\t\t\"id\": 150862,\r\n\t\t\t\t\"label\": \"Catalog\",\r\n\t\t\t\t\"form\": \"0001\",\r\n\t\t\t\t\"fieldRowChoice\": \"0001\",\r\n\t\t\t\t\"field\": [{\r\n\t\t\t\t\t\"id\": 65499,\r\n\t\t\t\t\t\"name\": \"LOGIN\",\r\n\t\t\t\t\t\"type\": \"text\",\r\n\t\t\t\t\t\"value\": \"apoorv123456.site16441.7\",\r\n\t\t\t\t\t\"isOptional\": false,\r\n\t\t\t\t\t\"valueEditable\": true\r\n\t\t\t\t}]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": 150863,\r\n\t\t\t\t\"label\": \"Password\",\r\n\t\t\t\t\"form\": \"0001\",\r\n\t\t\t\t\"fieldRowChoice\": \"0002\",\r\n\t\t\t\t\"field\": [{\r\n\t\t\t\t\t\"id\": 65500,\r\n\t\t\t\t\t\"name\": \"PASSWORD\",\r\n\t\t\t\t\t\"type\": \"password\",\r\n\t\t\t\t\t\"value\": \"site16441.7\",\r\n\t\t\t\t\t\"isOptional\": false,\r\n\t\t\t\t\t\"valueEditable\": true\r\n\t\t\t\t}]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
                        "url": "{{host}}\/providerAccounts?providerId={{providerId}}",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "providerId",
                                "value": "{{providerId}}"
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            },
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "191",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Mon, 11 Jun 2018 21:02:02 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "D1528750921846a28k106D000000NLjYz",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "d9338ec5-e9c5-4a08-9619-d494c5955db5",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": "var data = JSON.parse(pm.environment.get(\"loginForm\"));\n\nfor (var form in data[0].row) {\n    for (var field in data[0].row[form].field) {\n        data[0].row[form].field[field].value = pm.environment.get(pm.environment.get(\"providerId\")+\"_\"+field+\"_\"+data[0].row[form].label);\n    }\n}\n\npm.environment.set(\"loginForm\", JSON.stringify(data));",
            "tests": "pm.test(\"Status code is 201\", function () {\n    pm.response.to.have.status(201);\n});\n\nvar data = JSON.parse(responseBody);\n\nvar dataForm = JSON.parse(pm.environment.get(\"loginForm\"));\n\nif (responseCode.code == 201) {\n    console.log(\"Add Account successful.\");\n    for (var form in dataForm[0].row) {\n        for (var field in dataForm[0].row[form].field) {\n            pm.environment.unset(pm.environment.get(\"providerId\")+\"_\"+field+\"_\"+dataForm[0].row[form].label);\n        }\n    }\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "{\r\n\t\"loginForm\": {\r\n\t\t\"id\": 16103,\r\n\t\t\"forgetPasswordURL\": \"http:\/\/64.14.28.129\/dag\/index.do\",\r\n\t\t\"formType\": \"login\",\r\n\t\t\"row\": [{\r\n\t\t\t\t\"id\": 150862,\r\n\t\t\t\t\"label\": \"Catalog\",\r\n\t\t\t\t\"form\": \"0001\",\r\n\t\t\t\t\"fieldRowChoice\": \"0001\",\r\n\t\t\t\t\"field\": [{\r\n\t\t\t\t\t\"id\": 65499,\r\n\t\t\t\t\t\"name\": \"LOGIN\",\r\n\t\t\t\t\t\"type\": \"text\",\r\n\t\t\t\t\t\"value\": \"apoorv123456.site16441.7\",\r\n\t\t\t\t\t\"isOptional\": false,\r\n\t\t\t\t\t\"valueEditable\": true\r\n\t\t\t\t}]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": 150863,\r\n\t\t\t\t\"label\": \"Password\",\r\n\t\t\t\t\"form\": \"0001\",\r\n\t\t\t\t\"fieldRowChoice\": \"0002\",\r\n\t\t\t\t\"field\": [{\r\n\t\t\t\t\t\"id\": 65500,\r\n\t\t\t\t\t\"name\": \"PASSWORD\",\r\n\t\t\t\t\t\"type\": \"password\",\r\n\t\t\t\t\t\"value\": \"site16441.7\",\r\n\t\t\t\t\t\"isOptional\": false,\r\n\t\t\t\t\t\"valueEditable\": true\r\n\t\t\t\t}]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "dd0d2698-c534-4d83-92da-283ddc1bbe50",
            "name": "Update Password",
            "url": "{{host}}\/user\/credentials",
            "description": "Implementation Notes:\r\n\r\nThe update password service is used to change or reset a user's password. However, to reset a password when the user does not have access to the old password, a token needs to be generated using the Get Token API.\r\n\r\nPassword must be at least 8 characters long and contain at least one upper case letter, one number and any of these special characters !@#$%^&*()\r\n\r\nPassword should not be same as the loginName and should not contain more than two recurring characters (e.g. aaa123 is an invalid password)\r\n\r\nThe permitted maximum length for password is 50.\r\n\r\nSupport for the same is only available through body parameters \r\n\r\nNote: The content type has to be passed as application\/json for the body parameter. \r\n\r\nThe HTTP response code is 204 (Success without content).",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                },
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "",
                            "if (responseCode.code != 204) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 204) {",
                            "    console.log(\"Update Password successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"New password should not be same as old password\") {",
                            "    console.log(\"The new password is the same as the old one!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "66058555-3f3b-4a53-93db-f4b7492ea712",
            "responses": [
                {
                    "id": "a418f8e1-1de0-49f1-9945-81bcfe9ef0c2",
                    "name": "Update Password",
                    "status": "No Content",
                    "mime": "",
                    "language": "json",
                    "text": "",
                    "responseCode": {
                        "code": 204,
                        "name": "No Content",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "f7afe82f-b84d-49fe-93fd-51d167e570f0",
                        "method": "POST",
                        "description": "Implementation Notes:\r\n\r\nThe update password service is used to change or reset a user's password. However, to reset a password when the user does not have access to the old password, a token needs to be generated using the Get Token API.\r\n\r\nPassword must be at least 8 characters long and contain at least one upper case letter, one number and any of these special characters !@#$%^&*()\r\n\r\nPassword should not be same as the loginName and should not contain more than two recurring characters (e.g. aaa123 is an invalid password)\r\n\r\nThe permitted maximum length for password is 50.\r\n\r\nSupport for the same is only available through body parameters \r\n\r\nNote: The content type has to be passed as application\/json for the body parameter. \r\n\r\nThe HTTP response code is 204 (Success without content).",
                        "headers": "Content-Type: application\/json\nAuthorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "{\r\n    \"user\":{\r\n        \"loginName\":\"{{userName}}\",\r\n        \"oldPassword\":\"{{userPassword}}\",\r\n        \"newPassword\":\"This1sATest!\"\r\n    }\r\n}",
                        "url": "{{host}}\/user\/credentials",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Cache-Control",
                            "value": "no-store, no-cache",
                            "name": "Cache-Control",
                            "description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 30 May 2018 22:17:03 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "E1527718623764P28r106f000000NLoYW",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "dd0d2698-c534-4d83-92da-283ddc1bbe50",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(204);\n});\n\nif (responseCode.code != 204) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 204) {\n    console.log(\"Update Password successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"New password should not be same as old password\") {\n    console.log(\"The new password is the same as the old one!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "{\r\n    \"user\":{\r\n        \"loginName\":\"{{loginName}}\",\r\n        \"oldPassword\":\"{{password}}\",\r\n        \"newPassword\":\"This1sATest!\"\r\n    }\r\n}",
            "headers": "Content-Type: application\/json\nAuthorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "de4852e7-fd99-4199-9eef-363191566932",
            "name": "Get Provider Account Details",
            "url": "{{host}}\/providerAccounts\/11092873",
            "description": "Implementation Notes:\r\n\r\nThe get provider account details service is used to learn the status of adding accounts and updating accounts.\r\n\r\nThis service has to be called continuously to know the progress level of the triggered process. This service also provides the MFA information requested by the provider site.\r\n\r\nWhen include=credentials, questionAndAnswer is passed as an input, this service returns the credentials and questions & answers stored in the Yodlee system for that provider account.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Provider Account Details successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "75abde44-be48-4c3b-841f-1025a3c1bafd",
            "responses": [
                {
                    "id": "5b7cb7c6-07ec-4e5a-a708-62e291f9403a",
                    "name": "Get Provider Account Details",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"providerAccount\":[{\"id\":18382938,\"providerId\":16441,\"lastUpdated\":\"2018-05-31T21:44:48Z\",\"isManual\":false,\"createdDate\":\"2018-05-31\",\"aggregationSource\":\"USER\",\"refreshInfo\":{\"statusCode\":811,\"statusMessage\":\"STATUS_PARTIAL_SUCCESS\",\"status\":\"PARTIAL_SUCCESS\",\"nextRefreshScheduled\":\"2018-06-02T02:01:26Z\",\"lastRefreshed\":\"2018-05-31T21:44:49Z\",\"lastRefreshAttempt\":\"2018-05-31T21:44:49Z\"}}]}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "56efc157-d9d8-4a23-868d-fc032060d388",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe get provider account details service is used to learn the status of adding accounts and updating accounts.\r\n\r\nThis service has to be called continuously to know the progress level of the triggered process. This service also provides the MFA information requested by the provider site.\r\n\r\nWhen include=credentials, questionAndAnswer is passed as an input, this service returns the credentials and questions & answers stored in the Yodlee system for that provider account.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/providerAccounts\/18424572",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            },
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "394",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Thu, 31 May 2018 21:46:42 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "q1527803202301u3K32N000000NLgYs",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "de4852e7-fd99-4199-9eef-363191566932",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Provider Account Details successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "def3c429-0d3a-4478-9b6b-f49be2000a7d",
            "name": "Get Historical Balances",
            "url": "{{host}}\/accounts\/historicalBalances?accountId={{accountId}}",
            "description": "Implementation Notes:\r\n\r\nThe historical balances service is used to retrieve the historical balances for an account or a user.\r\n\r\nHistorical balances are daily (D), weekly (W), and monthly (M). \r\n\r\nThe interval input should be passed as D, W, and M to retrieve the desired historical balances. The default interval is daily (D). \r\n\r\nWhen no account id is provided, historical balances of the accounts that are active, to be closed, and closed are provided in the response. \r\n\r\nIf the fromDate and toDate are not passed, the last 90 days of data will be provided. \r\n\r\nThe fromDate and toDate should be passed in the YYYY-MM-DD format. \r\n\r\nThe date field in the response denotes the date for which the balance is requested.\r\n\r\nincludeCF needs to be sent as true if the customer wants to return carried forward balances for a date when the data is not available. \r\n\r\nasofDate field in the response denotes the date as of which the balance was updated for that account.\r\n\r\nWhen there is no balance available for a requested date and if includeCF is sent as true, the previous date for which the balance is available is provided in the response. When there is no previous balance available, no data will be sent. \r\n\r\naccountReconType input parameter is relevant for investment accounts, provided the reconciliation feature is turned on.\r\n\r\naccountReconType input parameter will be ignored when accountId(s) are passed.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "accountId",
                    "value": "{{accountId}}",
                    "description": "account id"
                },
                {
                    "key": "includeCF",
                    "value": null,
                    "description": "consider carry forward logic for missing balances",
                    "enabled": false
                },
                {
                    "key": "fromDate",
                    "value": null,
                    "description": "from date for balance retrieval (YYYY-MM-DD)",
                    "enabled": false
                },
                {
                    "key": "toDate",
                    "value": null,
                    "description": "to date for balance retrieval (YYYY-MM-DD)",
                    "enabled": false
                },
                {
                    "key": "interval",
                    "value": null,
                    "description": "d-daily, w-weekly or m-monthly\t",
                    "enabled": false
                },
                {
                    "key": "accountReconType",
                    "value": null,
                    "description": "UNRECONCILED (Default value), RECONCILED\t",
                    "enabled": false
                },
                {
                    "key": "skip",
                    "value": null,
                    "description": "skip (Min 0)",
                    "enabled": false
                },
                {
                    "key": "top",
                    "value": null,
                    "description": "top (Max 500)",
                    "enabled": false
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Historical Balances successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "fb0af4be-ff32-4bf6-afbd-5652a4e6ca51",
            "responses": [
                {
                    "id": "7e5466f0-bcf3-43d4-8410-6a02cd108217",
                    "name": "Get Historical Balances",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"account\":[{\"id\":37252300,\"historicalBalances\":[{\"isAsset\":true,\"date\":\"2018-05-29\",\"asOfDate\":\"2018-05-29\",\"balance\":{\"amount\":0,\"currency\":\"USD\"},\"dataSourceType\":\"C\"},{\"isAsset\":true,\"date\":\"2018-05-30\",\"asOfDate\":\"2018-05-30\",\"balance\":{\"amount\":84699,\"currency\":\"USD\"},\"dataSourceType\":\"C\"}]}]}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "1d5e2dca-2917-43cb-90fb-bcb9589e028a",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe historical balances service is used to retrieve the historical balances for an account or a user.\r\n\r\nHistorical balances are daily (D), weekly (W), and monthly (M). \r\n\r\nThe interval input should be passed as D, W, and M to retrieve the desired historical balances. The default interval is daily (D). \r\n\r\nWhen no account id is provided, historical balances of the accounts that are active, to be closed, and closed are provided in the response. \r\n\r\nIf the fromDate and toDate are not passed, the last 90 days of data will be provided. \r\n\r\nThe fromDate and toDate should be passed in the YYYY-MM-DD format. \r\n\r\nThe date field in the response denotes the date for which the balance is requested.\r\n\r\nincludeCF needs to be sent as true if the customer wants to return carried forward balances for a date when the data is not available. \r\n\r\nasofDate field in the response denotes the date as of which the balance was updated for that account.\r\n\r\nWhen there is no balance available for a requested date and if includeCF is sent as true, the previous date for which the balance is available is provided in the response. When there is no previous balance available, no data will be sent. \r\n\r\naccountReconType input parameter is relevant for investment accounts, provided the reconciliation feature is turned on.\r\n\r\naccountReconType input parameter will be ignored when accountId(s) are passed.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/accounts\/historicalBalances?accountId={{accountId}}",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "accountId",
                                "value": "{{accountId}}",
                                "description": "account id"
                            },
                            {
                                "key": "includeCF",
                                "value": null,
                                "description": "consider carry forward logic for missing balances",
                                "enabled": false
                            },
                            {
                                "key": "fromDate",
                                "value": null,
                                "description": "from date for balance retrieval (YYYY-MM-DD)",
                                "enabled": false
                            },
                            {
                                "key": "toDate",
                                "value": null,
                                "description": "to date for balance retrieval (YYYY-MM-DD)",
                                "enabled": false
                            },
                            {
                                "key": "interval",
                                "value": null,
                                "description": "d-daily, w-weekly or m-monthly\t",
                                "enabled": false
                            },
                            {
                                "key": "accountReconType",
                                "value": null,
                                "description": "UNRECONCILED (Default value), RECONCILED\t",
                                "enabled": false
                            },
                            {
                                "key": "skip",
                                "value": null,
                                "description": "skip (Min 0)",
                                "enabled": false
                            },
                            {
                                "key": "top",
                                "value": null,
                                "description": "top (Max 500)",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "300",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 30 May 2018 22:27:09 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Link",
                            "value": ": \/private-sdgengtest\/v1\/\/accounts\/historicalBalances\/count?accountId=37252300;rel=count",
                            "name": "Link",
                            "description": "Used to express a typed relationship with another resource, where the relation type is defined by RFC 5988"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "G1527719228857w3k31d000000NLUYm",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "def3c429-0d3a-4478-9b6b-f49be2000a7d",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Historical Balances successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "e229da2f-57cb-465b-8ed9-53a65aae5526",
            "name": "Run Transaction Categorization Rule",
            "url": "{{host}}\/transactions\/categories\/rules\/1?action=run",
            "description": "Implementation Notes:\r\n\r\nThe run transaction categorization rule service is used to run a rule on transactions, to categorize the transactions.\r\n\r\nThe HTTP response code is 204 (Success with no content).",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ruleId",
                    "value": "1",
                    "enabled": false
                },
                {
                    "key": "action",
                    "value": "run"
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "",
                            "if (responseCode.code != 204) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 204) {",
                            "    console.log(\"Run Transaction Categorization Rule successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "98a0bf62-9a64-49df-a143-22c0213676cd",
            "responses": [
                {
                    "id": "cf26cc97-9459-4ccc-84c8-6db7d1ec8861",
                    "name": "Run Transaction Categorization Rule",
                    "status": "No Content",
                    "mime": "",
                    "language": "json",
                    "text": "",
                    "responseCode": {
                        "code": 204,
                        "name": "No Content",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "c1d5799f-92fa-4227-96c7-9c34f7776991",
                        "method": "POST",
                        "description": "Implementation Notes:\r\n\r\nThe run transaction categorization rule service is used to run a rule on transactions, to categorize the transactions.\r\n\r\nThe HTTP response code is 204 (Success with no content).",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/transactions\/categories\/rules\/1?action=run",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "ruleId",
                                "value": "1",
                                "enabled": false
                            },
                            {
                                "key": "action",
                                "value": "run"
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Cache-Control",
                            "value": "no-store, no-cache",
                            "name": "Cache-Control",
                            "description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 23 May 2018 21:15:51 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "F1527110150925D4Z27d000000NLJYQ",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/ysl",
                            "secure": true,
                            "value": "TFdCarXrkemscJAK0siBgAgTvRqYq_9ljLFl6SlJ.hpdl-r306-26",
                            "name": "JSESSIONID"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/",
                            "secure": true,
                            "value": "J-jzNUYyJ2TMfTmyHfxnU0qQ9AYfNlPRuIjdPSpC.hpdl-r306-25",
                            "name": "JSESSIONID"
                        }
                    ],
                    "request": "e229da2f-57cb-465b-8ed9-53a65aae5526",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(204);\n});\n\nif (responseCode.code != 204) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 204) {\n    console.log(\"Run Transaction Categorization Rule successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "e3a581c4-afbc-40d6-86c5-6f8707ac3670",
            "name": "Update Transaction Categorization Rules",
            "url": "{{host}}\/transactions\/categories\/rules\/10003852",
            "description": "Implementation Notes:\r\n\r\nThe update transaction categorization rule service is used to update a categorization rule for both system-defined category as well as user-defined category.\r\n\r\nruleParam JSON input should be as explained in the create transaction categorization rule service.\r\n\r\nThe HTTP response code is 204 (Success without content).",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                }
            ],
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "",
                            "if (responseCode.code != 204) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 204) {",
                            "    console.log(\"Update Transaction Categorization Rules successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Internal Core Error has occurred\") {",
                            "    console.log(\"An internal core error has ocurred!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "98a0bf62-9a64-49df-a143-22c0213676cd",
            "responses": [
                {
                    "id": "e4cd8310-68eb-4808-ad56-008d6da16477",
                    "name": "Update Transaction Categorization Rules",
                    "status": "No Content",
                    "mime": "",
                    "language": "json",
                    "text": "",
                    "responseCode": {
                        "code": 204,
                        "name": "No Content",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "8531e07b-8a6f-4f3f-aff0-7d25190a04d3",
                        "method": "PUT",
                        "description": "Implementation Notes:\r\n\r\nThe update transaction categorization rule service is used to update a categorization rule for both system-defined category as well as user-defined category.\r\n\r\nruleParam JSON input should be as explained in the create transaction categorization rule service.\r\n\r\nThe HTTP response code is 204 (Success without content).",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "{\r\n\t\"rule\":{\r\n        \"categoryId\":3,\r\n        \"priority\":1,\r\n        \"source\":\"SYSTEM\",\r\n        \"ruleClause\":[\r\n            {\r\n                \"field\":\"description\",\r\n                \"operation\":\"stringContains\",\r\n                \"value\":\"gift\"\r\n            },\r\n            {\r\n                \"field\":\"amount\",\r\n                \"operation\":\"numberGreaterThan\",\r\n                \"value\":98\r\n            }\r\n        ]\r\n    }\r\n}",
                        "url": "{{host}}\/transactions\/categories\/rules\/10003852",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            },
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Cache-Control",
                            "value": "no-store, no-cache",
                            "name": "Cache-Control",
                            "description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 23 May 2018 21:14:48 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "z1527110088545f4M27F000000NLPYh",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/ysl",
                            "secure": true,
                            "value": "TFdCarXrkemscJAK0siBgAgTvRqYq_9ljLFl6SlJ.hpdl-r306-26",
                            "name": "JSESSIONID"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/",
                            "secure": true,
                            "value": "J-jzNUYyJ2TMfTmyHfxnU0qQ9AYfNlPRuIjdPSpC.hpdl-r306-25",
                            "name": "JSESSIONID"
                        }
                    ],
                    "request": "e3a581c4-afbc-40d6-86c5-6f8707ac3670",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(204);\n});\n\nif (responseCode.code != 204) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 204) {\n    console.log(\"Update Transaction Categorization Rules successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Internal Core Error has occurred\") {\n    console.log(\"An internal core error has ocurred!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "{\r\n\t\"rule\":{\r\n        \"categoryId\":3,\r\n        \"priority\":1,\r\n        \"source\":\"SYSTEM\",\r\n        \"ruleClause\":[\r\n            {\r\n                \"field\":\"description\",\r\n                \"operation\":\"stringContains\",\r\n                \"value\":\"gift\"\r\n            },\r\n            {\r\n                \"field\":\"amount\",\r\n                \"operation\":\"numberGreaterThan\",\r\n                \"value\":98\r\n            }\r\n        ]\r\n    }\r\n}",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "e3c6ee68-0dfc-45e1-8fe7-e57e24e330ff",
            "name": "Delete Transaction Categorization Rule",
            "url": "{{host}}\/transactions\/categories\/rules\/10003855",
            "description": "Implementation Notes:\r\n\r\nThe delete transaction categorization rule service is used to delete the given user-defined transaction categorization rule for both system-defined category as well as user-defined category.\r\n\r\nThis will delete all the corresponding rule clauses associated with the rule.\r\n\r\nThe HTTP response code is 204 (Success without content).",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "",
                            "if (responseCode.code != 204) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 204) {",
                            "    console.log(\"Delete Transaction Categorization Rule successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "98a0bf62-9a64-49df-a143-22c0213676cd",
            "responses": [
                {
                    "id": "533faef0-85d8-45dd-b413-1a70ad2623d4",
                    "name": "Delete Transaction Categorization Rule",
                    "status": "No Content",
                    "mime": "",
                    "language": "json",
                    "text": "",
                    "responseCode": {
                        "code": 204,
                        "name": "No Content",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "d53cc41f-9a01-4f9b-abde-ff6f153f8e81",
                        "method": "DELETE",
                        "description": "Implementation Notes:\r\n\r\nThe delete transaction categorization rule service is used to delete the given user-defined transaction categorization rule for both system-defined category as well as user-defined category.\r\n\r\nThis will delete all the corresponding rule clauses associated with the rule.\r\n\r\nThe HTTP response code is 204 (Success without content).",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/transactions\/categories\/rules\/10003855",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Cache-Control",
                            "value": "no-store, no-cache",
                            "name": "Cache-Control",
                            "description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 23 May 2018 21:15:31 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "v1527110131862d4D27D000000NLgYx",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/ysl",
                            "secure": true,
                            "value": "TFdCarXrkemscJAK0siBgAgTvRqYq_9ljLFl6SlJ.hpdl-r306-26",
                            "name": "JSESSIONID"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": true,
                            "domain": "developer.api.yodlee.com",
                            "path": "\/",
                            "secure": true,
                            "value": "J-jzNUYyJ2TMfTmyHfxnU0qQ9AYfNlPRuIjdPSpC.hpdl-r306-25",
                            "name": "JSESSIONID"
                        }
                    ],
                    "request": "e3c6ee68-0dfc-45e1-8fe7-e57e24e330ff",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(204);\n});\n\nif (responseCode.code != 204) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 204) {\n    console.log(\"Delete Transaction Categorization Rule successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "e3dc961b-d7ca-4f02-b76e-fe763bc981cc",
            "name": "Download A Document*",
            "url": "{{host}}\/documents\/123456",
            "description": "Implementation Notes:\r\n\r\nThe get document details service allows consumers to download a document. The document is provided in base64.\r\n\r\nDocuments can be downloaded only if the document related dataset attributes are subscribed.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Download A Document successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}",
                            "if (responseBody == \"{}\") {",
                            "    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "675cebfb-ee48-4694-85ad-0c3508ad3665",
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Download A Document successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}\nif (responseBody == \"{}\") {\n    console.log(\"You seem to have an empty response! Make sure you have data linked to the user, and check the parameters!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "e679bd48-9168-4327-a606-24c83b8808a9",
            "name": "Get Providers",
            "url": "{{host}}\/providers?name=pge",
            "description": "Implementation Notes:\r\n\r\nThe get provider service is used to get all the providers that are enabled, search a provider service by name or routing number and get popular sites of a region. \r\n\r\nThe valid values for priority are: \r\n\r\n   1. cobrand: Returns providers enabled for the cobrand (Default priority)\r\n \r\n   2. popular: Returns providers popular among users of the customer\r\n\r\nDatasets, attributes, and containers that are enabled for the customer alone will be returned in the response. Input for the dataset$filter should adhere to the following expression:\r\n\r\n<dataset.name>[<attribute.name>.container[<container> OR <container>] OR <attribute.name>.container[<container>]] OR <dataset.name>[<attribute.name> OR <attribute.name>]\r\n\r\ndataset$filter value examples:\r\n\r\nACCT_PROFILE[FULL_ACCT_NUMBER.container[bank OR investment OR creditCard]]\r\n\r\nACCT_PROFILE[FULL_ACCT_NUMBER.container[bank]]\r\n\r\nBASIC_AGG_DATA[ACCOUNT_DETAILS.container[bank OR investment] OR HOLDINGS.container[bank]] OR ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank]]\r\n\r\nBASIC_AGG_DATA\r\n\r\nBASIC_AGG_DATA OR ACCT_PROFILE\r\n\r\nBASIC_AGG_DATA [ ACCOUNT_DETAILS OR HOLDINGS ]\r\n\r\nBASIC_AGG_DATA [ ACCOUNT_DETAILS] OR DOCUMENT\r\n\r\nNote: \r\n1. When this service is invoked without any filters, the service performs slowly and takes a few minutes to return data in the response.\r\n\r\n2. The recommendation is to use this service with filters when used in a flow involving user interactions.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "name",
                    "value": "pge",
                    "description": "name in minimum 1 character or routing number"
                },
                {
                    "key": "priority",
                    "value": null,
                    "description": "search priority",
                    "enabled": false
                },
                {
                    "key": "skip",
                    "value": null,
                    "description": "skip (Min 0) - this is not applicable along with 'name' parameter",
                    "enabled": false
                },
                {
                    "key": "top",
                    "value": null,
                    "description": "top (Max 500) - this is not applicable along with 'name' parameter\t",
                    "enabled": false
                },
                {
                    "key": "dataset$filter",
                    "value": null,
                    "description": "expression to filter the providers by dataset(s) or dataset attribute(s)-  the default value will be the dataset or dataset attibutes enabled for the customer",
                    "enabled": false
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Providers successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "9ea9e6db-3405-461b-b1d5-3b4a197fc3a1",
            "responses": [
                {
                    "id": "03b39ed7-1372-4887-b9cc-46d8f05eeca2",
                    "name": "Get Providers",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"provider\":[{\"PRIORITY\":\"SEARCH\",\"id\":18769,\"name\":\"Dag Site Captcha\",\"loginUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"baseUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"favicon\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/FAVICON\/FAV_Default.SVG\",\"logo\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/LOGO\/LOGO_18769_1_1.PNG\",\"status\":\"Supported\",\"mfaType\":\"Image based multifactor authentication\",\"oAuthSite\":false,\"authType\":\"MFA_CREDENTIALS\",\"languageISOCode\":\"EN\",\"primaryLanguageISOCode\":\"EN\",\"countryISOCode\":\"US\",\"lastModified\":\"2018-02-13T12:03:23Z\",\"forgetPasswordUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"isAutoRefreshEnabled\":true,\"containerAttributes\":{\"BANK\":{\"numberOfTransactionDays\":90}},\"containerNames\":[\"bank\"],\"capability\":[{\"name\":\"CHALLENGE_DEPOSIT_VERIFICATION\",\"container\":[\"bank\"]}],\"additionalDataSet\":[{\"name\":\"ACCT_PROFILE\",\"attribute\":[{\"name\":\"FULL_ACCT_NUMBER\",\"container\":[\"bank\"]},{\"name\":\"BANK_TRANSFER_CODE\",\"container\":[\"bank\"]},{\"name\":\"HOLDER_NAME\",\"container\":[\"bank\"]}]}],\"isAddedByUser\":\"false\"},{\"PRIORITY\":\"SEARCH\",\"id\":9001,\"name\":\"DagInvestments\",\"loginUrl\":\"http:\/\/dag2.yodlee.com\/dag\/index.do\",\"baseUrl\":\"http:\/\/dag2.yodlee.com\/dag\/index.do\",\"favicon\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/FAVICON\/FAV_Default.SVG\",\"logo\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/LOGO\/LOGO_9001_1_1.PNG\",\"status\":\"Supported\",\"oAuthSite\":false,\"authType\":\"CREDENTIALS\",\"languageISOCode\":\"EN\",\"primaryLanguageISOCode\":\"EN\",\"countryISOCode\":\"US\",\"lastModified\":\"2018-04-12T06:20:55Z\",\"forgetPasswordUrl\":\"http:\/\/dag2.yodlee.com\/dag\/index.do\",\"isAutoRefreshEnabled\":true,\"containerAttributes\":{\"INVESTMENT\":{\"numberOfTransactionDays\":90}},\"containerNames\":[\"investment\"],\"isAddedByUser\":\"false\"},{\"PRIORITY\":\"SEARCH\",\"id\":16477,\"name\":\"DagSIteMFAAndNonMFA\",\"loginUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"baseUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"favicon\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/FAVICON\/FAV_Default.SVG\",\"logo\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/LOGO\/LOGO_16477_1_1.PNG\",\"status\":\"Supported\",\"mfaType\":\"Question and answer type multi factor authentication.\",\"oAuthSite\":false,\"authType\":\"MFA_CREDENTIALS\",\"languageISOCode\":\"EN\",\"primaryLanguageISOCode\":\"EN\",\"countryISOCode\":\"US\",\"lastModified\":\"2018-02-13T12:00:11Z\",\"forgetPasswordUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"isAutoRefreshEnabled\":true,\"containerAttributes\":{\"BANK\":{\"numberOfTransactionDays\":90},\"REWARD\":{\"numberOfTransactionDays\":90}},\"containerNames\":[\"reward\",\"bank\"],\"capability\":[{\"name\":\"CHALLENGE_DEPOSIT_VERIFICATION\",\"container\":[\"bank\"]}],\"additionalDataSet\":[{\"name\":\"ACCT_PROFILE\",\"attribute\":[{\"name\":\"FULL_ACCT_NUMBER\",\"container\":[\"bank\"]}]}],\"isAddedByUser\":\"false\"},{\"PRIORITY\":\"SEARCH\",\"id\":16441,\"name\":\"Dag Site\",\"loginUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"baseUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"favicon\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/FAVICON\/FAV_16441.PNG\",\"logo\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/LOGO\/LOGO_16441_1_1.PNG\",\"status\":\"Supported\",\"oAuthSite\":false,\"authType\":\"CREDENTIALS\",\"languageISOCode\":\"EN\",\"primaryLanguageISOCode\":\"EN\",\"countryISOCode\":\"US\",\"lastModified\":\"2018-04-18T06:46:49Z\",\"forgetPasswordUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"isAutoRefreshEnabled\":true,\"containerAttributes\":{\"BILL\":{\"numberOfTransactionDays\":90},\"CREDITCARD\":{\"numberOfTransactionDays\":90},\"INSURANCE\":{\"numberOfTransactionDays\":90},\"BANK\":{\"numberOfTransactionDays\":90},\"LOAN\":{\"numberOfTransactionDays\":90},\"INVESTMENT\":{\"numberOfTransactionDays\":90},\"REWARD\":{\"numberOfTransactionDays\":90}},\"containerNames\":[\"insurance\",\"reward\",\"bank\",\"loan\",\"investment\",\"bill\",\"creditCard\"],\"capability\":[{\"name\":\"CHALLENGE_DEPOSIT_VERIFICATION\",\"container\":[\"bank\"]}],\"additionalDataSet\":[{\"name\":\"ACCT_PROFILE\",\"attribute\":[{\"name\":\"FULL_ACCT_NUMBER\",\"container\":[\"bank\"]},{\"name\":\"BANK_TRANSFER_CODE\",\"container\":[\"bank\"]},{\"name\":\"HOLDER_NAME\",\"container\":[\"bank\"]}]}],\"isAddedByUser\":\"true\"},{\"PRIORITY\":\"SEARCH\",\"id\":16446,\"name\":\"Dag Site TokenPMPA\",\"loginUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"baseUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"favicon\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/FAVICON\/FAV_Default.SVG\",\"logo\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/LOGO\/LOGO_16446_1_1.PNG\",\"status\":\"Supported\",\"mfaType\":\"Token Id based multi factor authentication\",\"oAuthSite\":false,\"authType\":\"MFA_CREDENTIALS\",\"languageISOCode\":\"EN\",\"primaryLanguageISOCode\":\"EN\",\"countryISOCode\":\"US\",\"lastModified\":\"2015-09-14T07:44:31Z\",\"forgetPasswordUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"isAutoRefreshEnabled\":true,\"containerAttributes\":{\"CREDITCARD\":{\"numberOfTransactionDays\":90},\"LOAN\":{\"numberOfTransactionDays\":90}},\"containerNames\":[\"loan\",\"creditCard\"],\"isAddedByUser\":\"false\"},{\"PRIORITY\":\"SEARCH\",\"id\":16445,\"name\":\"Dag Site TokenFMPA\",\"loginUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"baseUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"favicon\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/FAVICON\/FAV_Default.SVG\",\"logo\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/LOGO\/LOGO_16445_1_1.PNG\",\"status\":\"Supported\",\"mfaType\":\"Token Id based multi factor authentication\",\"oAuthSite\":false,\"authType\":\"MFA_CREDENTIALS\",\"languageISOCode\":\"EN\",\"primaryLanguageISOCode\":\"EN\",\"countryISOCode\":\"US\",\"lastModified\":\"2018-03-06T06:54:39Z\",\"forgetPasswordUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"isAutoRefreshEnabled\":false,\"containerAttributes\":{\"INSURANCE\":{\"numberOfTransactionDays\":90},\"BANK\":{\"numberOfTransactionDays\":90}},\"containerNames\":[\"insurance\",\"bank\"],\"capability\":[{\"name\":\"CHALLENGE_DEPOSIT_VERIFICATION\",\"container\":[\"bank\"]}],\"isAddedByUser\":\"false\"},{\"PRIORITY\":\"SEARCH\",\"id\":16486,\"name\":\"Dag Site SecurityQA\",\"loginUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"baseUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"favicon\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/FAVICON\/FAV_16486.PNG\",\"logo\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/LOGO\/LOGO_16486_1_1.PNG\",\"status\":\"Supported\",\"mfaType\":\"Question and answer type multi factor authentication.\",\"oAuthSite\":false,\"authType\":\"MFA_CREDENTIALS\",\"languageISOCode\":\"EN\",\"primaryLanguageISOCode\":\"EN\",\"countryISOCode\":\"US\",\"lastModified\":\"2018-02-02T06:41:00Z\",\"forgetPasswordUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"isAutoRefreshEnabled\":true,\"containerAttributes\":{\"CREDITCARD\":{\"numberOfTransactionDays\":90},\"BANK\":{\"numberOfTransactionDays\":90}},\"containerNames\":[\"bank\",\"creditCard\"],\"capability\":[{\"name\":\"CHALLENGE_DEPOSIT_VERIFICATION\",\"container\":[\"bank\"]}],\"additionalDataSet\":[{\"name\":\"ACCT_PROFILE\",\"attribute\":[{\"name\":\"FULL_ACCT_NUMBER\",\"container\":[\"bank\"]},{\"name\":\"HOLDER_NAME\",\"container\":[\"bank\"]}]}],\"isAddedByUser\":\"false\"},{\"PRIORITY\":\"SEARCH\",\"id\":16447,\"name\":\"Dag Site TokenPMPS\",\"loginUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"baseUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"favicon\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/FAVICON\/FAV_Default.SVG\",\"logo\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/LOGO\/LOGO_16447_1_1.PNG\",\"status\":\"Supported\",\"mfaType\":\"Token Id based multi factor authentication\",\"oAuthSite\":false,\"authType\":\"MFA_CREDENTIALS\",\"languageISOCode\":\"EN\",\"primaryLanguageISOCode\":\"EN\",\"countryISOCode\":\"US\",\"lastModified\":\"2018-04-12T06:20:04Z\",\"forgetPasswordUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"isAutoRefreshEnabled\":true,\"containerAttributes\":{\"BILL\":{\"numberOfTransactionDays\":90},\"INVESTMENT\":{\"numberOfTransactionDays\":90}},\"containerNames\":[\"bill\",\"investment\"],\"isAddedByUser\":\"false\"},{\"PRIORITY\":\"SEARCH\",\"id\":16442,\"name\":\"Dag Site Multilevel\",\"loginUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"baseUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"favicon\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/FAVICON\/FAV_Default.SVG\",\"logo\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/LOGO\/LOGO_16442_1_1.PNG\",\"status\":\"Supported\",\"mfaType\":\"Multiple levels of strong authentication.\",\"oAuthSite\":false,\"authType\":\"MFA_CREDENTIALS\",\"languageISOCode\":\"EN\",\"primaryLanguageISOCode\":\"EN\",\"countryISOCode\":\"US\",\"lastModified\":\"2018-06-01T10:34:17Z\",\"forgetPasswordUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"isAutoRefreshEnabled\":true,\"containerAttributes\":{\"CREDITCARD\":{\"numberOfTransactionDays\":90},\"BANK\":{\"numberOfTransactionDays\":90}},\"containerNames\":[\"bank\",\"creditCard\"],\"capability\":[{\"name\":\"CHALLENGE_DEPOSIT_VERIFICATION\",\"container\":[\"bank\"]}],\"additionalDataSet\":[{\"name\":\"ACCT_PROFILE\",\"attribute\":[{\"name\":\"FULL_ACCT_NUMBER\",\"container\":[\"bank\"]},{\"name\":\"BANK_TRANSFER_CODE\",\"container\":[\"bank\"]},{\"name\":\"HOLDER_NAME\",\"container\":[\"bank\"]}]}],\"isAddedByUser\":\"false\"},{\"PRIORITY\":\"SEARCH\",\"id\":16487,\"name\":\"Dag Site (no account summary)\",\"loginUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"baseUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"favicon\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/FAVICON\/FAV_Default.SVG\",\"logo\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/LOGO\/LOGO_16487_1_1.PNG\",\"status\":\"Supported\",\"oAuthSite\":false,\"authType\":\"CREDENTIALS\",\"languageISOCode\":\"EN\",\"primaryLanguageISOCode\":\"EN\",\"countryISOCode\":\"US\",\"lastModified\":\"2015-09-14T08:06:21Z\",\"forgetPasswordUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"isAutoRefreshEnabled\":true,\"containerAttributes\":{\"CREDITCARD\":{\"numberOfTransactionDays\":90},\"BANK\":{\"numberOfTransactionDays\":90}},\"containerNames\":[\"bank\",\"creditCard\"],\"capability\":[{\"name\":\"CHALLENGE_DEPOSIT_VERIFICATION\",\"container\":[\"bank\"]}],\"isAddedByUser\":\"false\"},{\"PRIORITY\":\"SEARCH\",\"id\":12870,\"name\":\"DagbankUSAA\",\"loginUrl\":\"http:\/\/dag2.yodlee.com\/dag\/index.do\",\"baseUrl\":\"http:\/\/dag2.yodlee.com\/dag\/index.do\",\"favicon\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/FAVICON\/FAV_Default.SVG\",\"logo\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/LOGO\/LOGO_12870_50_1.PNG\",\"status\":\"Supported\",\"oAuthSite\":false,\"authType\":\"CREDENTIALS\",\"languageISOCode\":\"EN\",\"primaryLanguageISOCode\":\"EN\",\"lastModified\":\"2013-01-02T00:41:58Z\",\"isAutoRefreshEnabled\":true,\"containerAttributes\":{\"BANK\":{\"numberOfTransactionDays\":90}},\"containerNames\":[\"bank\"],\"isAddedByUser\":\"false\"},{\"PRIORITY\":\"SEARCH\",\"id\":15919,\"name\":\"DagBankCaptcha\",\"loginUrl\":\"http:\/\/dag2.yodlee.com\/dag\/index.do\",\"baseUrl\":\"http:\/\/dag2.yodlee.com\/dag\/index.do\",\"favicon\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/FAVICON\/FAV_Default.SVG\",\"logo\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/LOGO\/LOGO_15919_50_1.PNG\",\"status\":\"Supported\",\"mfaType\":\"Image based multifactor authentication\",\"oAuthSite\":false,\"authType\":\"MFA_CREDENTIALS\",\"languageISOCode\":\"EN\",\"primaryLanguageISOCode\":\"EN\",\"lastModified\":\"2018-02-07T13:11:20Z\",\"forgetPasswordUrl\":\"http:\/\/dag2.yodlee.com\/dag\/index.do\",\"isAutoRefreshEnabled\":true,\"containerAttributes\":{\"BANK\":{\"numberOfTransactionDays\":90}},\"containerNames\":[\"bank\"],\"capability\":[{\"name\":\"CHALLENGE_DEPOSIT_VERIFICATION\",\"container\":[\"bank\"]}],\"isAddedByUser\":\"false\"},{\"PRIORITY\":\"SEARCH\",\"id\":12288,\"name\":\"DagBankSeCUrityQA\",\"loginUrl\":\"http:\/\/dag2.yodlee.com\/dag\/index.do\",\"baseUrl\":\"http:\/\/dag2.yodlee.com\/dag\/index.do\",\"favicon\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/FAVICON\/FAV_Default.SVG\",\"logo\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/LOGO\/LOGO_12288_50_1.PNG\",\"status\":\"Supported\",\"mfaType\":\"Question and answer type multi factor authentication.\",\"oAuthSite\":false,\"authType\":\"MFA_CREDENTIALS\",\"languageISOCode\":\"EN\",\"primaryLanguageISOCode\":\"EN\",\"lastModified\":\"2018-02-01T11:06:00Z\",\"forgetPasswordUrl\":\"http:\/\/dag2.yodlee.com\/dag\/index.do\",\"isAutoRefreshEnabled\":true,\"containerAttributes\":{\"BANK\":{\"numberOfTransactionDays\":90}},\"containerNames\":[\"bank\"],\"capability\":[{\"name\":\"CHALLENGE_DEPOSIT_VERIFICATION\",\"container\":[\"bank\"]}],\"additionalDataSet\":[{\"name\":\"ACCT_PROFILE\",\"attribute\":[{\"name\":\"HOLDER_NAME\",\"container\":[\"bank\"]}]}],\"isAddedByUser\":\"false\"},{\"PRIORITY\":\"SEARCH\",\"id\":8998,\"name\":\"DagCreditcard\",\"loginUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"baseUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"favicon\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/FAVICON\/FAV_Default.SVG\",\"logo\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/LOGO\/LOGO_8998_50_1.PNG\",\"status\":\"Supported\",\"oAuthSite\":false,\"authType\":\"CREDENTIALS\",\"languageISOCode\":\"EN\",\"primaryLanguageISOCode\":\"EN\",\"lastModified\":\"2015-06-10T09:45:19Z\",\"isAutoRefreshEnabled\":true,\"containerAttributes\":{\"CREDITCARD\":{\"numberOfTransactionDays\":90}},\"containerNames\":[\"creditCard\"],\"isAddedByUser\":\"false\"},{\"PRIORITY\":\"SEARCH\",\"id\":8997,\"name\":\"DagInsurance\",\"loginUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"baseUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"favicon\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/FAVICON\/FAV_Default.SVG\",\"logo\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/LOGO\/LOGO_8997_50_1.PNG\",\"status\":\"Supported\",\"oAuthSite\":false,\"authType\":\"CREDENTIALS\",\"languageISOCode\":\"EN\",\"primaryLanguageISOCode\":\"EN\",\"lastModified\":\"2015-06-10T09:44:57Z\",\"isAutoRefreshEnabled\":true,\"containerAttributes\":{\"INSURANCE\":{\"numberOfTransactionDays\":90}},\"containerNames\":[\"insurance\"],\"isAddedByUser\":\"false\"},{\"PRIORITY\":\"SEARCH\",\"id\":8999,\"name\":\"DagLoan\",\"loginUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"baseUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"favicon\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/FAVICON\/FAV_Default.SVG\",\"logo\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/LOGO\/LOGO_8999_50_1.PNG\",\"status\":\"Supported\",\"oAuthSite\":false,\"authType\":\"CREDENTIALS\",\"languageISOCode\":\"EN\",\"primaryLanguageISOCode\":\"EN\",\"lastModified\":\"2015-06-10T09:43:36Z\",\"isAutoRefreshEnabled\":true,\"containerAttributes\":{\"LOAN\":{\"numberOfTransactionDays\":90}},\"containerNames\":[\"loan\"],\"isAddedByUser\":\"false\"},{\"PRIORITY\":\"SEARCH\",\"id\":8995,\"name\":\"DagBank\",\"loginUrl\":\"http:\/\/dag2.yodlee.com\/dag\/index.do\",\"baseUrl\":\"http:\/\/64.14.28.129\/dag\/index.do\",\"favicon\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/FAVICON\/FAV_8995.PNG\",\"logo\":\"https:\/\/yodlee-1.hs.llnwd.net\/v1\/LOGO\/LOGO_8995_50_1.PNG\",\"status\":\"Supported\",\"oAuthSite\":false,\"authType\":\"CREDENTIALS\",\"languageISOCode\":\"EN\",\"primaryLanguageISOCode\":\"EN\",\"lastModified\":\"2018-05-02T11:10:56Z\",\"forgetPasswordUrl\":\"http:\/\/dag2.yodlee.com\/dag\/index.do\",\"isAutoRefreshEnabled\":true,\"containerAttributes\":{\"BANK\":{\"numberOfTransactionDays\":90}},\"containerNames\":[\"bank\"],\"capability\":[{\"name\":\"CHALLENGE_DEPOSIT_VERIFICATION\",\"container\":[\"bank\"]}],\"additionalDataSet\":[{\"name\":\"ACCT_PROFILE\",\"attribute\":[{\"name\":\"FULL_ACCT_NUMBER\",\"container\":[\"bank\"]},{\"name\":\"BANK_TRANSFER_CODE\",\"container\":[\"bank\"]},{\"name\":\"HOLDER_NAME\",\"container\":[\"bank\"]}]}],\"isAddedByUser\":\"false\"}]}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "91645e92-3c64-4a36-a99c-3497b1d43809",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe get provider service is used to get all the providers that are enabled, search a provider service by name or routing number and get popular sites of a region. \r\n\r\nThe valid values for priority are: \r\n\r\n   1. cobrand: Returns providers enabled for the cobrand (Default priority)\r\n \r\n   2. popular: Returns providers popular among users of the customer\r\n\r\nDatasets, attributes, and containers that are enabled for the customer alone will be returned in the response. Input for the dataset$filter should adhere to the following expression:\r\n\r\n<dataset.name>[<attribute.name>.container[<container> OR <container>] OR <attribute.name>.container[<container>]] OR <dataset.name>[<attribute.name> OR <attribute.name>]\r\n\r\ndataset$filter value examples:\r\n\r\nACCT_PROFILE[FULL_ACCT_NUMBER.container[bank OR investment OR creditCard]]\r\n\r\nACCT_PROFILE[FULL_ACCT_NUMBER.container[bank]]\r\n\r\nBASIC_AGG_DATA[ACCOUNT_DETAILS.container[bank OR investment] OR HOLDINGS.container[bank]] OR ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank]]\r\n\r\nBASIC_AGG_DATA\r\n\r\nBASIC_AGG_DATA OR ACCT_PROFILE\r\n\r\nBASIC_AGG_DATA [ ACCOUNT_DETAILS OR HOLDINGS ]\r\n\r\nBASIC_AGG_DATA [ ACCOUNT_DETAILS] OR DOCUMENT\r\n\r\nNote: \r\n1. When this service is invoked without any filters, the service performs slowly and takes a few minutes to return data in the response.\r\n\r\n2. The recommendation is to use this service with filters when used in a flow involving user interactions.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/providers?name=pge",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "name",
                                "value": "pge",
                                "description": "name in minimum 1 character or routing number"
                            },
                            {
                                "key": "priority",
                                "value": null,
                                "description": "search priority",
                                "enabled": false
                            },
                            {
                                "key": "skip",
                                "value": null,
                                "description": "skip (Min 0) - this is not applicable along with 'name' parameter",
                                "enabled": false
                            },
                            {
                                "key": "top",
                                "value": null,
                                "description": "top (Max 500) - this is not applicable along with 'name' parameter\t",
                                "enabled": false
                            },
                            {
                                "key": "dataset$filter",
                                "value": null,
                                "description": "expression to filter the providers by dataset(s) or dataset attribute(s)-  the default value will be the dataset or dataset attibutes enabled for the customer",
                                "enabled": false
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "14073",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=UTF-8",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Fri, 01 Jun 2018 17:45:17 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "L1527875117897K3j31C000000NLFYa",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "e679bd48-9168-4327-a606-24c83b8808a9",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get Providers successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "e79f8deb-be34-4808-98e7-2445d52b9919",
            "name": "*Delete Provider Account",
            "url": "{{host}}\/providerAccounts\/11163007",
            "description": "Implementation Notes:\r\n\r\nThe delete provider account service is used to delete a provider account from the Yodlee system. This service also deletes the accounts that are created in the Yodlee system for that provider account. \r\n\r\nThis service does not return a response. The HTTP response code is 204 (Success with no content).",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "Content-Type has to be application\/json for all requests and irrespective of the environment."
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 204\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});",
                            "",
                            "if (responseCode.code != 204) {",
                            "    var data = JSON.parse(responseBody);",
                            "}",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Delete Provider Account successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "75abde44-be48-4c3b-841f-1025a3c1bafd",
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 204\", function () {\n    pm.response.to.have.status(204);\n});\n\nif (responseCode.code != 204) {\n    var data = JSON.parse(responseBody);\n}\nif (responseCode.code == 200) {\n    console.log(\"Delete Provider Account successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "ef0cd6a2-dad0-42bc-b5df-3dfeaa7b3fd9",
            "name": "Get User Details",
            "url": "{{host}}\/user",
            "description": "Implementation Notes:\r\n\r\nThe get user details service is used to get the user profile information and the application preferences set at the time of user registration.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get User Details successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "66058555-3f3b-4a53-93db-f4b7492ea712",
            "responses": [
                {
                    "id": "0d6d784f-37b7-42fd-b1b4-3dbc4f1eb1ee",
                    "name": "Get User Details",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"user\":{\"id\":39111308,\"loginName\":\"corbin1\",\"email\":\"corbin@test.com\",\"name\":{\"first\":\"corbin\",\"last\":\"peters\"},\"roleType\":\"INDIVIDUAL\",\"preferences\":{\"currency\":\"USD\",\"timeZone\":\"PST\",\"dateFormat\":\"MM\/dd\/yyyy\",\"locale\":\"en_US\"},\"address\":{\"address1\":\"200LincolnAve\",\"state\":\"CA\",\"city\":\"Salinas\",\"zip\":\"93901\",\"country\":\"US\"}}}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "5126b38d-6c9a-4475-949d-cd19797bc9ec",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe get user details service is used to get the user profile information and the application preferences set at the time of user registration.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/user",
                        "pathVariableData": [],
                        "queryParams": [],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "329",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 30 May 2018 22:12:44 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "S1527718363959W28S106C000000NLjYI",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "ef0cd6a2-dad0-42bc-b5df-3dfeaa7b3fd9",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    console.log(\"Get User Details successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand or user session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        },
        {
            "id": "ef3b4f6f-e77a-47d2-b1a0-426d336df806",
            "name": "Get Subscribed Events*",
            "url": "{{host}}\/cobrand\/config\/notifications\/events?eventName=REFRESH",
            "description": "Implementation Notes:\r\n\r\nThe update events service is used to update the callback URL.\r\n\r\nNote: The content type has to be passed as application\/json for the body parameter.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                },
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}}",
                    "description": "cobSession has to be passed, received from cobrand login API response."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "eventName",
                    "value": "REFRESH"
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "    ",
                            "if (responseCode.code == 200) {",
                            "    console.log(\"Get Subscribed Events successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "f91e3e0a-ecde-44f0-833d-fed8ca1de98f",
            "responses": [
                {
                    "id": "f5a33c3f-95b7-4bb9-8334-f365351e1ac5",
                    "name": "Get Subscribed Events",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"event\":[{\"name\":\"REFRESH\",\"callbackUrl\":\"http:\/\/yslrocks.com\/notify\"}]}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "112fe1c9-83d0-4103-ab2b-39578942f58f",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe update events service is used to update the callback URL.\r\n\r\nNote: The content type has to be passed as application\/json for the body parameter.",
                        "headers": "Api-Version: 1.1\nCobrand-Name: {{cobrandName}}\nAuthorization: cobSession={{cobSession}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "",
                        "url": "{{host}}\/cobrand\/config\/notifications\/events?eventName=REFRESH",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "eventName",
                                "value": "REFRESH"
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            },
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}}",
                                "description": "cobSession has to be passed, received from cobrand login API response."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "73",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Thu, 31 May 2018 20:27:10 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "g1527798430598B28k106g000000NLLYJ",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "ef3b4f6f-e77a-47d2-b1a0-426d336df806",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n    \nif (responseCode.code == 200) {\n    console.log(\"Get Subscribed Events successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "",
            "headers": "Api-Version: 1.1\nCobrand-Name: {{cobrandName}}\nAuthorization: cobSession={{cobSession}}\n",
            "pathVariables": []
        },
        {
            "id": "f8220050-b99d-442c-8960-41df8da2c102",
            "name": "Get Access Tokens",
            "url": "{{host}}\/user\/accessTokens?appIds={{appId}}",
            "description": "Implementation Notes:\r\n\r\nThe Get Access Tokens service is used to retrieve the access tokens for the application id(s) provided. The appId used is 10003600.\r\n\r\nURL in the response can be used to launch the application for which token is requested.",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "cobSession={{cobSession}},userSession={{userSession}}",
                    "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                },
                {
                    "key": "Api-Version",
                    "value": "1.1",
                    "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                },
                {
                    "key": "Cobrand-Name",
                    "value": "{{cobrandName}}",
                    "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "appIds",
                    "value": "{{appId}}"
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "id": "028de559-c2b8-4e83-b604-2909d44d35ae",
                        "type": "text\/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = JSON.parse(responseBody);",
                            "",
                            "if (responseCode.code == 200) {",
                            "    pm.environment.set(\"accessToken\", data.user.accessTokens[0].value);",
                            "    console.log(\"Get Access Tokens successful.\");",
                            "} else if (data.errorMessage == \"Authorization header missing\") {",
                            "    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");",
                            "} else if (data.errorMessage == \"Required String parameter 'appIds' is not present\") {",
                            "    console.log(\"You seem to be missing your app identification! One of the parameters should be 'appIds':'{{appId}}'!\");",
                            "} else if (data.errorMessage == \"Invalid token in authorization header\") {",
                            "    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");",
                            "} else if (data.errorMessage == \"Resource not found\") {",
                            "    console.log(\"You have an invalid URL!\");",
                            "} else {",
                            "    console.log(\"Error! \" + data.errorMessage + \"!\");",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "66058555-3f3b-4a53-93db-f4b7492ea712",
            "responses": [
                {
                    "id": "bbe48dda-fd5f-4642-bf36-c74454fc00f1",
                    "name": "Get Access Tokens",
                    "status": "OK",
                    "mime": "",
                    "language": "json",
                    "text": "{\"user\":{\"accessTokens\":[{\"appId\":\"10003600\",\"value\":\"594e58ee3f28730995c99a58594df31aee4a6990956b90a0ba13f7172be2216b\",\"url\":\"https:\/\/192.168.57.139:7100\/authenticate\/nodesmb\/\"}]}}",
                    "responseCode": {
                        "code": 200,
                        "name": "OK",
                        "detail": ""
                    },
                    "requestObject": {
                        "id": "de08f8a1-d17e-470f-89c3-e70ad8bd6721",
                        "method": "GET",
                        "description": "Implementation Notes:\r\n\r\nThe Get Access Tokens service is used to retrieve the access tokens for the application id(s) provided. The appId used is 10003600.\r\n\r\nURL in the response can be used to launch the application for which token is requested.",
                        "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}",
                        "dataMode": "raw",
                        "data": [],
                        "rawModeData": "{\n    \"user\":      {\n      \"loginName\": \"{{userName}}\",\n      \"password\": \"{{userPassword}}\",\n      \"locale\": \"en_US\"\n     }\n}",
                        "url": "{{host}}\/user\/accessTokens?appIds={{appId}}",
                        "pathVariableData": [],
                        "queryParams": [
                            {
                                "key": "appIds",
                                "value": "{{appId}}"
                            }
                        ],
                        "headerData": [
                            {
                                "key": "Authorization",
                                "value": "cobSession={{cobSession}},userSession={{userSession}}",
                                "description": "cobSession received from cobrand\/login API and userSession received from user\/register or user\/login API responses should be passed here."
                            },
                            {
                                "key": "Api-Version",
                                "value": "1.1",
                                "description": "Api-Version has to be 1.1 for all requests and irrespective of the environment."
                            },
                            {
                                "key": "Cobrand-Name",
                                "value": "{{cobrandName}}",
                                "description": "For sandbox it has to be restserver, while this changes for your staging or production environment."
                            }
                        ]
                    },
                    "headers": [
                        {
                            "key": "Accept-Charset",
                            "value": "big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp",
                            "name": "Accept-Charset",
                            "description": "Custom header"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive",
                            "name": "Connection",
                            "description": "Options that are desired for the connection"
                        },
                        {
                            "key": "Content-Length",
                            "value": "181",
                            "name": "Content-Length",
                            "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application\/json;charset=ISO-8859-1",
                            "name": "Content-Type",
                            "description": "The mime type of this content"
                        },
                        {
                            "key": "Date",
                            "value": "Wed, 30 May 2018 22:16:12 GMT",
                            "name": "Date",
                            "description": "The date and time that the message was sent"
                        },
                        {
                            "key": "yodlee-ref-id",
                            "value": "s1527718572192v28w106N000000NLGYU",
                            "name": "yodlee-ref-id",
                            "description": "Custom header"
                        }
                    ],
                    "cookies": [
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "WMPRZHscQWJsMu0jp5lEDBld\/FoAAAAAGUOp\/A36oel8YIYspWFQ8w==",
                            "name": "incap_ses_884_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "SW9+hlNJSXiz1PkdNqeVzRhd\/FoAAAAAQUIPAAAAAABwOgNsjIPCvyxrV3b9RxMs",
                            "name": "visid_incap_1070612"
                        },
                        {
                            "expirationDate": "Invalid Date",
                            "httpOnly": false,
                            "domain": "yodlee.com",
                            "path": "\/",
                            "secure": false,
                            "value": "dHf3UUt5DHYy30fhpc7sBgwdD1sAAAAA7h6cXLi\/ZuCy5U84GvDQ7w==",
                            "name": "incap_ses_499_1070612"
                        }
                    ],
                    "request": "f8220050-b99d-442c-8960-41df8da2c102",
                    "collection": "819a67d1-5447-4253-8713-43ea5a73903d"
                }
            ],
            "preRequestScript": null,
            "tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\nvar data = JSON.parse(responseBody);\n\nif (responseCode.code == 200) {\n    pm.environment.set(\"accessToken\", data.user.accessTokens[0].value);\n    console.log(\"Get Access Tokens successful.\");\n} else if (data.errorMessage == \"Authorization header missing\") {\n    console.log(\"You seem to be missing your cobrand session! One of the headers should be 'Authorization':'{cobSession={{cobSession}},userSession={{userSession}}}'!\");\n} else if (data.errorMessage == \"Required String parameter 'appIds' is not present\") {\n    console.log(\"You seem to be missing your app identification! One of the parameters should be 'appIds':'{{appId}}'!\");\n} else if (data.errorMessage == \"Invalid token in authorization header\") {\n    console.log(\"You seem to have an invalid cobrand or user token! Refresh them by logging in again!\");\n} else if (data.errorMessage == \"Resource not found\") {\n    console.log(\"You have an invalid URL!\");\n} else {\n    console.log(\"Error! \" + data.errorMessage + \"!\");\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "819a67d1-5447-4253-8713-43ea5a73903d",
            "rawModeData": "{\n    \"user\":      {\n      \"loginName\": \"{{userName}}\",\n      \"password\": \"{{userPassword}}\",\n      \"locale\": \"en_US\"\n     }\n}",
            "headers": "Authorization: cobSession={{cobSession}},userSession={{userSession}}\nApi-Version: 1.1\nCobrand-Name: {{cobrandName}}\n",
            "pathVariables": []
        }
    ]
}